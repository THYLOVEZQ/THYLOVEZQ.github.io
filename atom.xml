<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>THYLOVEZQ的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-30T15:07:12.144Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>THYLOVEZQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/openGL/"/>
    <id>http://example.com/2024/06/25/openGL/</id>
    <published>2024-06-25T14:57:58.527Z</published>
    <updated>2024-05-30T15:07:12.144Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/openEMS/"/>
    <id>http://example.com/2024/06/25/openEMS/</id>
    <published>2024-06-25T14:57:58.525Z</published>
    <updated>2024-05-30T15:07:12.144Z</updated>
    
    <content type="html"><![CDATA[<h1>时域有限微分：一维FDTD</h1><h2 id="简介">简介</h2><p>时域有限差分算法(FDTD)方法可以说是最简单的全波方法，FDTD方法可以解决复杂的问题，但通常计算成本较高。解决方案可能需要大量的内存和计算时间。FDTD算法大致属于&quot;谐振区域&quot;技术，即感兴趣的域的特征尺寸大致与波长相当。</p><p>FDTD方法采用有限差分作为对出现在麦克斯韦方程中的空间和时间导数（特别是安培定律和法拉第定律）的近似。考虑函数f(x)围绕点x0展开的泰勒级数展开，偏移量为±δ/2：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><msup><mi>f</mi><mtext>‘</mtext></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac><mo stretchy="false">(</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mi>f</mi><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><msup><mi>f</mi><mtext>‘</mtext></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac><mo stretchy="false">(</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mi>f</mi><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(x_{0}+\frac{\delta}{2})=f({x_{0}})+\frac{\delta}{2}f^{‘}(x_{0})+\frac{1}{2!}(\frac{\delta}{2})^{2}f^{&#x27;&#x27;}(x_{0})+...\\f(x_{0}-\frac{\delta}{2})=f({x_{0}})-\frac{\delta}{2}f^{‘}(x_{0})+\frac{1}{2!}(\frac{\delta}{2})^{2}f^{&#x27;&#x27;}(x_{0})+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">‘</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">‘</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span></span></p><p>将第二个方程用第一个方程中减去可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>δ</mi><mrow><msup><mi>f</mi><mtext>’</mtext></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><mo>+</mo><mfrac><mn>2</mn><mrow><mn>3</mn><mo stretchy="false">!</mo></mrow></mfrac><mo stretchy="false">(</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>3</mn></msup><msup><mi>f</mi><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(x_{0}+\frac{\delta}{2})-f(x_{0}-\frac{\delta}{2})=\delta{f^{’}(x_{0})}+\frac{2}{3!}(\frac{\delta}{2})^{3}f^{&#x27;&#x27;&#x27;}(x_{0})+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">’</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span></span></p><p>除以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><mi>δ</mi></mfrac><mo>=</mo><msup><mi>f</mi><mtext>’</mtext></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>3</mn><mo stretchy="false">!</mo></mrow></mfrac><mfrac><msup><mi>δ</mi><mn>2</mn></msup><msup><mn>2</mn><mn>2</mn></msup></mfrac><msup><mi>f</mi><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\frac{f(x_{0}+\frac{\delta}{2})-f(x_{0}-\frac{\delta}{2})}{\delta}=f^{’}(x_{0})+\frac{1}{3!}\frac{\delta^{2}}{2^{2}}f^{&#x27;&#x27;&#x27;}(x_{0})+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3011em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6151em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">’</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9925em;"><span style="top:-2.9925em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span></span></p><p>因此，左侧的项等于点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处的导数加上一个依赖于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\delta^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>的项，以及一系列未显示的无限多个其他项。对于未显示的项，下一个将取决于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">\delta^{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>。而所有后续项将取决于更高次幂的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>。移项后，可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>d</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mi>x</mi><mo>=</mo><msub><mi>x</mi><mn>0</mn></msub></mrow></msub><mo>=</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><mi>δ</mi></mfrac><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>δ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{df(x)}{dx}|_{x=x_{0}}=\frac{f(x_{0}+\frac{\delta}{2})-f(x_{0}-\frac{\delta}{2})}{\delta}+O(\delta^{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3011em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6151em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>“大O”项代表所有未明确显示的项，括号中的值，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>δ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\delta^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>,表示这些隐藏项中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>的最低阶。如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>足够小，则可以通过简单地忽略由&quot;大O&quot;项表示的所有项来得到对导数的合理近似，因此，中心差分近似由以下给出：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>d</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo>≃</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mfrac><mi>δ</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><mi>δ</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{df(x)}{dx}\simeq\frac{f(x_{0}+\frac{\delta}{2})-f(x_{0}-\frac{\delta}{2})}{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≃</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3011em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6151em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.735em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>请注意，中心差分提供了函数在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处导数的近似值，但实际上函数并没有在该处采样。相反，函数是在相邻点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>δ</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x_{0}+\delta/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">/2</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mi>δ</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x_{0}-\delta/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">/2</span></span></span></span>处采样的。由于被忽略的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>的最低幂是二阶的，所以中心差分被称为具有二阶精度或二阶行为。这意味着如果将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>减小10倍，近似值中的误差应该减小100倍（至少近似地）。当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>趋于零时，近似值变得精确。</p><p>可以构建更高阶的中心差分。为了获得更高阶的行为，必须使用更多的项，即更多的采样点。附录A介绍了构建第四阶中心差分的方法。在FDTD方案中使用更高阶的中心差分是完全可能的，但由于差分算子的“模板”增加而引起了一些复杂性。例如，当存在PEC时，差分算子可能会过早地延伸到PEC内部，或者可能延伸到PEC片的另一侧。由于这些问题，我们只考虑使用二阶中心差分。</p><h2 id="Yee算法">Yee算法</h2><p>1966年由Kane Yee首次提出的FDTD算法采用了二阶中心差分。该算法可以总结如下：</p><ol><li>将安培定律和法拉第定律中的所有导数替换为有限差分。将空间和时间离散化，以使电场和磁场在空间和时间上都错开。</li><li>解决得到的差分方程，得到“更新方程”，以过去已知的场表示未来的未知场。</li><li>将磁场评估到未来的一个时间，这样它们就变成已知的（实际上它们变成了过去的场）。</li><li>将电场评估到未来的一个时间，这样它们就成为已知的（实际上它们变成了过去的场）。</li><li>重复前两个步骤，直到获得所需持续时间内的场。</li></ol><h2 id="一维更新方程">一维更新方程</h2><p>考虑一个只有在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 方向上有变化的一维空间。假设电场只有一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 分量。在这种情况下，法拉第定律可以写成：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mi>μ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="bold">H</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mi mathvariant="normal">∇</mi><mo>×</mo><mi>E</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>E</mi><mi>z</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>=</mo><mo>−</mo><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>y</mi></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>z</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">-\mu\frac{\partial\mathbf{H}}{\partial{t}}=\nabla\times{E}=\begin{vmatrix}\hat{a}_{x} &amp; \hat{a}_{y} &amp; \hat{a}_{z}\\\frac{\partial}{\partial{x}} &amp; 0 &amp; 0 \\0 &amp; 0 &amp; E_{z} \\\end{vmatrix}=-\hat{a}_{y}\frac{\partial{E_{z}}}{\partial{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord mathnormal">μ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathbf">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">∇</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6401em;vertical-align:-1.5701em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.3333em' height='2.416em' style='width:0.3333em' viewBox='0 0 333.33000000000004 2416' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z'/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.3333em' height='2.416em' style='width:0.3333em' viewBox='0 0 333.33000000000004 2416' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z'/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>因此，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">H_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>必须是随时间变化的磁场中的唯一非零分量。（由于该方程的右侧仅有一个y分量，磁场可能在x和z方向上有非零分量，但它们必须是静态的，我们不关心静态场），安培定律可以写为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ϵ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="bold">E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mi mathvariant="normal">∇</mi><mo>×</mo><mi mathvariant="bold">H</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>H</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>=</mo><msub><mover accent="true"><mi>a</mi><mo>^</mo></mover><mi>z</mi></msub><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>H</mi><mi>y</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\epsilon\frac{\partial{\mathbf{E}}}{\partial{t}}=\nabla\times{\mathbf{H}}=\begin{vmatrix}\hat{a}_{x} &amp; \hat{a}_{y} &amp; \hat{a}_{z}\\\frac{\partial}{\partial{x}} &amp; 0 &amp; 0 \\0 &amp; H_{y} &amp; 0 \\\end{vmatrix}=\hat{a}_{z}\frac{\partial{H_{y}}}{\partial{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathbf">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">∇</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord"><span class="mord mathbf">H</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6401em;vertical-align:-1.5701em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.3333em' height='2.416em' style='width:0.3333em' viewBox='0 0 333.33000000000004 2416' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z'/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0701em;"><span style="top:-4.2301em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.7899em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5701em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.062em;"><span style="top:-2.866em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.464em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.3333em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.3333em' height='2.416em' style='width:0.3333em' viewBox='0 0 333.33000000000004 2416' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V2416 H145z M145 0 H188 V2416 H145z'/></svg></span></span><span style="top:-5.872em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>从3.7、3.8得到的两个标量方程是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>μ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>H</mi><mi>y</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>z</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mn>3.9</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>ϵ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>z</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>H</mi><mi>y</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">(</mo><mn>3.10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu{\frac{\partial{H_{y}}}{\partial{t}}}=\frac{\partial{E_{z}}}{\partial{x}}(3.9)\\\epsilon\frac{\partial{E_{z}}}{\partial{t}}=\frac{\partial{H_{y}}}{\partial{x}}(3.10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">μ</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">3.9</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">3.10</span><span class="mclose">)</span></span></span></span></span></p><p>第一个方程用电场的空间导数表示磁场的时间导数。相反，第二个方程用磁场的空间导数表示电场的时间导数。正如将要展示的，第一个方程将用于推进磁场，而第二个方程将用于推进电场。一种先推进一个场，然后推进另一个场，然后重复此过程的方法称为跃迁方法。</p><p>下一步是用有限差分替换(3.9)和(3.10)中的导数。为此，需要对空间和时间进行离散化，将使用以下符号表示在空间和时间中对场进行采样的位置。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>m</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>q</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><msub><mi>H</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>H</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>m</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>q</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>H</mi><mi>y</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}(x,t)=E_{z}(m\triangle_{x},q\triangle_{t})=E_{z}^{q}[m]\\H_{y}(x,t)=H_{y}(m\triangle_{x},q\triangle_{t})=H_{y}^{q}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1331em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\triangle{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span>是样本点在空间的偏移，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\triangle{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span></span>是空间的偏移。</p><p>索引m对应于空间步长，实际上是空间位置，而索引q对应于时间步长，当写为上标时，q仍表示时间步长，在实现时域有限差分算法时，我们看到空间索引被用作数组索引，而时间索引，实质上是全局参数，不会为每个场位置显示指定，因此，将空间索引保留为显式参数。同时单独指定时间索引是合理的。</p><p>虽然，我们只有一个空间维度，但时间可以被视为另一个维度，因此，这实际上是一个二维问题的形式。现在的问题是：电场和磁场采样点，也被叫做节点，应该如何在空间和时间中排列，答案如下图所示，电场节点表示圆圈，磁场节点表示为三角形，假设所有在虚线下方的场都是已知的，他们被认为是过去的场，而在虚线上方的场是未来的场，因此是未知的，时域有限差分提供了一种从过去场获取未来场的方法。</p><p><img src="C:%5CUsers%5CAdmin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240329212335607.png" alt="image-20240329212335607"></p><p>如上图所示，我们可以计算在时间-空间域<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>q</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((m+1/2)\triangle_{x},q\triangle_{t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">((</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">)</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>μ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>H</mi><mi>y</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>q</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>z</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mi>q</mi><mi mathvariant="normal">△</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mu\frac{\partial{H}_{y}}{\partial{t}}|_{(m+1/2)\triangle_{x},q\triangle_{t}}=\frac{\partial{E_{z}}}{\partial{x}}|_{(m+1/2)\triangle_{x},q\triangle{t}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">μ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">△</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>时间导数被一个涉及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H_{y}^{q+1/2}[m+\frac{1}{2}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2975em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H^{q-1/2}_{y}[m+1/2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2975em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span></span></span></span>的有限差分替代（在一个固定位置的磁场，但在两个不同的时刻）。而空间导数被涉及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q}[m+1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>的有限差分替换（电场在两个不同位置但是同一时间）。可以得到下式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>μ</mi><mfrac><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mfrac><mo>=</mo><mfrac><mrow><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\mu\frac{H^{q+1/2}_{y}[m+1/2]-H^{q-1/2}_{y}[m+1/2]}{\triangle_{t}}=\frac{E^{q}_{z}[m+1]-E_{z}^{q}[m]}{\triangle_{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6022em;vertical-align:-0.8804em;"></span><span class="mord mathnormal">μ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7218em;"><span style="top:-2.3588em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7218em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1/2</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3074em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>我们可以求解得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>+</mo><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mrow><mi>μ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo stretchy="false">(</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.15)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">H_{y}^{q+1/2}[m+1/2]=H_{y}^{q-1/2}[m+1/2]+\frac{\triangle_{t}}{\mu{\triangle_{x}}}(E_{z}^{q}[m+1]-E_{z}^{q}[m]) \tag{3.15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3211em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3211em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">])</span></span><span class="tag"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.15</span></span><span class="mord">)</span></span></span></span></span></span></p><p>这被称为更新方程，具体来说是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">H_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>场，这是一个通用的方程，适用于任意的磁场节点，它表示了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">H_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的未来值取决于过去的磁场和相邻的电场，将上式应用于所有的磁场节点后，过去和未来值之间的分界线已经推进了半个时间波长。因此，时间-空间网格如下图所示，它与上图相同，只是过去/未来分界线不同。</p><p><img src="C:%5CUsers%5CAdmin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240329214916886.png" alt="image-20240329214916886"></p><p>现在考虑在空间-时间点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mi mathvariant="normal">△</mi><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mi mathvariant="normal">△</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m\triangle{x},(q+1/2)\triangle{t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord">△</span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">)</span><span class="mord">△</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mclose">)</span></span></span></span>处应用安培定律：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ϵ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>E</mi><mi>z</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mi>m</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>H</mi><mi>y</mi></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><msub><mi mathvariant="normal">∣</mi><mrow><mi>m</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">\epsilon\frac{\partial{E_{z}}}{\partial{t}}|_{m\triangle_{x},(q+1/2)\triangle_{t}}=\frac{\partial{H_{y}}}{\partial{x}}|_{m\triangle_{x},(q+1/2)\triangle_{t}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将左式时间导数换为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q+1}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>，将右式的空间导数替换为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H_{y}^{q+1/2}[m+1/2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2975em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H_{y}^{q+1/2}[m-1/2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2975em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span></span></span></span>可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ϵ</mi><mfrac><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mfrac><mo>=</mo><mfrac><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\epsilon\frac{E^{q+1}_{z}[m]-E_{z}^{q}[m]}{\triangle_{t}}=\frac{H_{y}^{q+1/2}[m+1/2]-H_{y}^{q+1/2}[m-1/2]}{\triangle_{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3715em;vertical-align:-0.8804em;"></span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6022em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7218em;"><span style="top:-2.3588em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7218em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1/2</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q+1}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>可以得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>+</mo><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mrow><mi>ϵ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo stretchy="false">(</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.18)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">E_{z}^{q+1}[m]=E_{z}^{q}[m]+\frac{\triangle_{t}}{\epsilon{\triangle_{x}}}(H_{y}^{q+1/2}[m+1/2]-H_{y}^{q+1/2}[m-1/2]) \tag{3.18}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3211em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">])</span></span><span class="tag"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.18</span></span><span class="mord">)</span></span></span></span></span></span></p><p>方程(3.18)是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>场的更新方程，此方程的指标是通用的，因此，对于每个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>节点都适用于相同的方程，类似与磁场的更新方程，这里我们看到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的未来值仅取决与其过去值和相邻磁场的值。</p><p>在将(3.18)应用于网格中的每个电场节点后，已知和未知之间的分界线再次向前移动了半个时间步长，实质上，回到了图3.1的情况，靠近未来和过去之间分界线的最接近的未来场是磁场，然后它们将再次更新，然后更新电场，依次类推。</p><p>通常方便地将更新系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mi>ϵ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">\triangle_{t}/\epsilon{\triangle_{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mi>μ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">\triangle_{t}/\mu{\triangle_{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal">μ</span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>表示为能量在单个时间步长中传播的距离与空间步长之比。电磁能量能够传播的最大速度是自由空间中的光速<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt></mrow><annotation encoding="application/x-tex">c=1/\sqrt{\epsilon_{0}{\mu_{0}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0869em;vertical-align:-0.3369em;"></span><span class="mord">1/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span></span></span></span>。因此，能量在一个时间步长内能够传播的最大距离是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">c\triangle_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。比值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">c\triangle_{t}/\triangle_{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通常为常数。我们将其标记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">S_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><msub><mi>μ</mi><mi>r</mi></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\mu=\mu_{r}\mu_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><msub><mi>ϵ</mi><mi>r</mi></msub><msub><mi>ϵ</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\epsilon=\epsilon_{r}\epsilon_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。因此(3.15)和(3.18)式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mi>ϵ</mi></mfrac><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>ϵ</mi><mi>r</mi></msub><msub><mi>ϵ</mi><mn>0</mn></msub></mrow></mfrac><mfrac><mrow><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><mrow><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo>=</mo><mfrac><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><mrow><msub><mi>ϵ</mi><mi>r</mi></msub><msub><mi>ϵ</mi><mn>0</mn></msub></mrow></mfrac><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><msub><mi>ϵ</mi><mi>r</mi></msub></mfrac><msqrt><mfrac><msub><mi>μ</mi><mn>0</mn></msub><msub><mi>ϵ</mi><mn>0</mn></msub></mfrac></msqrt><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><msub><mi>η</mi><mn>0</mn></msub><msub><mi>ϵ</mi><mi>r</mi></msub></mfrac><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><msub><mi>η</mi><mn>0</mn></msub><msub><mi>ϵ</mi><mi>r</mi></msub></mfrac><msub><mi>S</mi><mi>c</mi></msub><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>μ</mi></mfrac><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>μ</mi><mi>r</mi></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></mfrac><mfrac><mrow><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><mrow><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo>=</mo><mfrac><msqrt><mrow><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></msqrt><mrow><msub><mi>μ</mi><mi>r</mi></msub><msub><mi>μ</mi><mn>0</mn></msub></mrow></mfrac><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><msub><mi>μ</mi><mi>r</mi></msub></mfrac><msqrt><mfrac><msub><mi>ϵ</mi><mn>0</mn></msub><msub><mi>μ</mi><mn>0</mn></msub></mfrac></msqrt><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>μ</mi><mi>r</mi></msub><msub><mi>η</mi><mn>0</mn></msub></mrow></mfrac><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>μ</mi><mi>r</mi></msub><msub><mi>η</mi><mn>0</mn></msub></mrow></mfrac><msub><mi>S</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\frac{1}{\epsilon}\frac{\triangle_{t}}{\triangle_{x}}=\frac{1}{\epsilon_{r}\epsilon_{0}}\frac{\sqrt{\epsilon_{0}\mu_{0}}{\triangle_{t}}}{\sqrt{\epsilon_{0}\mu_{0}}{\triangle_{x}}}=\frac{\sqrt{\epsilon_{0}\mu_{0}}}{\epsilon_{r}\epsilon_{0}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{1}{\epsilon_{r}}\sqrt{\frac{\mu_{0}}{\epsilon_{0}}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{\eta_{0}}{\epsilon_{r}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{\eta_{0}}{\epsilon_{r}}S_{c}\\\frac{1}{\mu}\frac{\triangle_{t}}{\triangle_{x}}=\frac{1}{\mu_{r}\mu_{0}}\frac{\sqrt{\epsilon_{0}\mu_{0}}{\triangle_{t}}}{\sqrt{\epsilon_{0}\mu_{0}}{\triangle_{x}}}=\frac{\sqrt{\epsilon_{0}\mu_{0}}}{\mu_{r}\mu_{0}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{1}{\mu_{r}}\sqrt{\frac{\epsilon_{0}}{\mu_{0}}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{1}{\mu_{r}\eta_{0}}\frac{c\triangle_{t}}{\triangle_{x}}=\frac{1}{\mu_{r}\eta_{0}}S_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4529em;vertical-align:-1.0229em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.43em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7269em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0229em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3104em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.43em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7269em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.9703em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4697em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.4297em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9436em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">μ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4529em;vertical-align:-1.0229em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.43em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7269em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0229em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3104em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.43em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7269em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7031em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6631em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3369em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.9926em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4474em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.4074em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9926em;"><span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2019em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>在FDTD模拟中，有关时间步长可以有多大的限制，如果太大，算法则会产生不稳定的结果（即所得到的数字完全没有意义，并且通常会迅速趋向于无穷大）。在这个阶段，我们不会对稳定性进行严格分析，然而，考虑到在FDTD网格中场的传播方式，能量在每个时间步长都不应该传播得比一个空间步长更远。即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mo>≤</mo><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">c\triangle_{t}\leq{\triangle_{x}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>。这是因为在FDTD中，每个节点只影响最近的节点，在更新场的一个周期中，扰动能够传播的最远距离是一个空间步长。事实证明，对于最初的一维模拟，我们将使用：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>c</mi></msub><mo>=</mo><mfrac><mrow><mi>c</mi><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub></mrow><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">S_{c}=\frac{c\triangle_{t}}{\triangle_{x}}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>在首次获取FDTD算法的更新方程时，以空间-时间的方式思考是有帮助的，然而将时间视为额外的维度可能有些不好，更方便的是以单一空间维度的方式思考，其中电场和磁场彼此相差半个空间步长。这在图3.3中有所描述，电场和磁场之间的时间偏移是可以理解的。</p><h2 id="实现一维FDTD算法">实现一维FDTD算法</h2><p>我们现在的目标是将更新方程(3.15)和(3.18)转换为计算机程序，第一步是至少在一定程度上放弃上标，时间是一个全局参数，记录在一个整数变量中，时间不是每个节点都需要关注的事。</p><p>当使用计算机程序实现FDTD算法时，不需要费力构建一个显式使用半个偏移量的程序，节点被存储在数组中，使用整数索引来指定单个数组元素，因此，计算机程序隐含地将电场和磁场的偏移量纳入考虑，同时仅使用整数索引来指定位置。空间位置和数组索引是相同的。</p><p>例如，声明了两个数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">e_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">h_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，它们将包含200个节点处的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">H_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>场。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> ez[<span class="number">200</span>], hy[<span class="number">200</span>], imp0=<span class="number">377.0</span></span><br></pre></td></tr></table></figure><p>变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>m</mi><mi>p</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">imp0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">im</span><span class="mord mathnormal">p</span><span class="mord">0</span></span></span></span>是自由空间的特征阻抗，并将接下来的讨论中使用。尽管数组将使用整数索引访问，但应将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">e_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">h_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>数组中的元素视为彼此相差半个空间步长。</p><p>无论最初希望将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 数组元素视为与具有相同索引的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">h_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 元素存在于右侧还是左侧都是任意的（我们假设“左”对应于 x 值减小，而“右”对应于增大的值）。在这里，我们假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 节点位于具有相同索引的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">h_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 节点的左侧。</p><p>这在图 3.4 中有所说明，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 的左侧，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 的左侧，依此类推。一般来说，当使用 Courier 字体时，例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>，我们正在考虑一个数组，并且该数组相关的任何一半的偏移都被隐含地理解。而当使用Times-Italic 字体时，例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H_{y}^{q+\frac{1}{2}}[m+\frac{1}{2}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4293em;vertical-align:-0.2527em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1766em;"><span style="top:-2.8834em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.5856em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2527em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span></span>，我们正在讨论场本身，并且偏移将被明确给出。</p><p>假设Courant数为单位（Sc = 1），节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>可以使用如下语句更新：</p><p>注：Courant 是一个数值计算中常用的参数，通常用于描述时间步长与空间步长之间的关系。在有限差分时间域（FDTD）方法中，Courant 数通常表示为 ( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi></mrow><mo>=</mo><mfrac><mrow><mi>c</mi><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{Courant} = \frac{c\Delta t}{\Delta x} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">Courant</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，其中 ( c ) 是波在介质中传播的速度，($ \Delta t$ ) 是时间步长，( $\Delta x $) 是空间步长。Courant 数的大小对于模拟的稳定性和准确性至关重要。通常，Courant 数越小，模拟的结果越精确，但计算成本也越高。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hy[<span class="number">1</span>] = hy[<span class="number">1</span>] + (ez[<span class="number">2</span>] - ez[<span class="number">1</span>]) / imp0;</span><br></pre></td></tr></table></figure><p>一般来说，任何磁场节点都可以用以下方式更新：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hy[m] = hy[m] + (ez[m + <span class="number">1</span>] - ez[m]) / imp0;</span><br></pre></td></tr></table></figure><p>对于电场节点，更新方程可以写为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ez[m] = ez[m] + (hy[m] - hy[m - <span class="number">1</span>]) * imp0;</span><br></pre></td></tr></table></figure><p>这两个更新方程，放在适当的循环当中，是驱动FDTD的引擎，但是，下面的一些问题并没有解决：</p><ol><li>物理空间末端的节点一侧没有相邻节点。例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>节点在其更新方程中无法使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>节点。同样，如果数组声明为具有200个元素，则在其更新方程中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>无法使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>200</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[200]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">200</span><span class="mclose">]</span></span></span></span>（请记住，C数组中最后一个元素的索引比总元素数少一个——数组索引表示相对于数组第一个元素的偏移）。因此，在这些节点上无法使用标准的更新方程。</li><li>只使用恒定阻抗，因此只能建模均质介质（在本例中为自由空间）。</li><li>目前场中没有能量。如果场最初为零，它们将永远保持为零。</li></ol><p>第一个问题可以通过吸收边界条件（ABC）来解决。有许多可以使用的实现方式。在后续材料中，我们将只考虑一些较为流行的技术。</p><p>第二个限制可以通过允许介电常数和磁导率从节点到节点的变化来消除。然而，为了简单起见，我们将继续使用恒定阻抗一段时间。</p><p>第三个问题可以通过将场初始化为非零状态来解决。然而，这样做很麻烦，通常不是一个好的方法。更好的解决方案是通过引入能量，可以是通过<font style="color:red">硬连线源、加性源或总场/散射场（TFSF）边界来实现</font>。我们将考虑实施这些方法中的每一种。</p><h2 id="基本仿真">基本仿真</h2><p>让我们考虑一个在自由空间中传播的波的仿真，其中有200个电场和磁场节点。代码如程序3.1所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by 86185 on 2024-04-08.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">#define SIZE <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ez[SIZE] = &#123;<span class="number">0.</span>&#125;, hy[SIZE] = &#123;<span class="number">0.</span>&#125;, imp0 = <span class="number">377.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> qTime, maxTime = <span class="number">250</span>, mm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 进行时间步进</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span> (qTime = <span class="number">0</span>; qTime &lt; maxTime; qTime++) &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 更新磁场</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (mm = <span class="number">0</span>; mm &lt;  - <span class="number">1</span>; mm++)</span><br><span class="line">            hy[mm] = hy[mm] + (ez[mm + <span class="number">1</span>] - ez[mm]) / imp0;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 更新电场</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (mm = <span class="number">1</span>; mm &lt; SIZE; mm++) &#123;</span><br><span class="line">            ez[mm] = ez[mm] + (hy[mm] - hy[mm - <span class="number">1</span>]) * imp0;</span><br><span class="line"></span><br><span class="line">            ez[<span class="number">0</span>] = exp(-(qTime - <span class="number">30.</span>) * (qTime - <span class="number">30.</span>) / <span class="number">100.</span>);</span><br><span class="line"></span><br><span class="line">            printf(<span class="string">&quot;%g\n&quot;</span>, ez[<span class="number">50</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在第10行的字段数组声明中，添加了“={0.}”以确保这些数组被初始化为零。（对于较大的数组，这不是一种有效的初始化数组的方法，我们稍后会解决这个问题。）变量 qTime 是一个整数计数器，用作时间指标或时间步长。模拟中的总时间步数由变量 maxTime​ 决定，在第11行设置为250（250是任意选择的值，可以是任何所需值）。</p><p>时间步进是通过从第14行开始的for循环完成的。嵌套在这个时间步进循环中的是两个额外的（空间）循环——一个用于更新磁场，另一个用于更新电场。从第17行开始的磁场更新循环排除了数组中的最后一个磁场节点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>，因为这个节点缺少一个相邻的电场。目前我们将保持这个节点为零。从第21行开始的电场更新循环，空间索引m从1开始，即它不包括<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>，这是网格中的第一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>节点。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>的值由第25行确定，这是一个高斯函数，当时间计数器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mi>T</mi><mi>i</mi><mi>m</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">qTime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">qT</span><span class="mord mathnormal">im</span><span class="mord mathnormal">e</span></span></span></span>为30时，其最大值为1。第一次循环时，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mi>T</mi><mi>i</mi><mi>m</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">qTime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">qT</span><span class="mord mathnormal">im</span><span class="mord mathnormal">e</span></span></span></span>为零时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>将被设置为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mn>9</mn><mo stretchy="false">)</mo><mo>≈</mo><mn>1.2341</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">exp(−9) ≈ 1.2341 × 10^{−4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1.2341</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>，相对于源的最大值来说，这是很小的。第27行将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>50</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[50]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">50</span><span class="mclose">]</span></span></span></span>的值打印到屏幕上，每个时间步进一次。这个程序生成的输出的图表如图3.5所示。</p><p>注意，输出是一个高斯函数，激励在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>引入，但场在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>50</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[50]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">50</span><span class="mclose">]</span></span></span></span>处记录，因为在模拟<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>=</mo><mi mathvariant="normal">Δ</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">c\Delta{t}=\Delta{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">c</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span>。场在每个时间步长上移动空间步长。源点和观测点之间的分离导致观测到的信号比源点延迟了50个时间步长。源函数在30个时间步长处达到峰值。但从图3.5可以看出，观测点处的场在第80个时间步长时达到最大值。</p><p>对上面程序进行修改，将模拟运行时间增加到1000个时间步长，而不是250个。在这种情况下获得的输出如图3.6所示。</p><p>网格中的最后一个磁场节点最初为0，并在整个模拟过程中保持为0，当场遇到此节点时，它实际上看到了一个完美的磁导体。为了满足该节点的边界条件，即总磁场趋于0，会产生一个反射波，它会改变磁场的符号，但保持电场的符号不变，这种现象将在下一节中讨论。图3.6中的第二个峰值就是这个反射波。反射波会继续沿着负方向传播，直到遇到第一个电场节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>。该节点的值由源函数设置，并不知道网格内部发生的情况。在这种特殊情况下，当反射场到达网格左端时，源函数基本上已经趋于零，没有任何事情可以改变这一点。因此，节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>的行为类似于完美的电导体（PEC）。为了满足此节点的边界条件，波再次反射，但这次电场改变符号，而磁场的符号保持不变。通过这种方式，引入网格中的场会持续来回反弹，直到模拟结束。这个模拟是一个具有一个PMC墙和一个PEC墙的谐振器。（请注意，无论源函数是否趋于零，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>处的边界条件都是相同的。任何传入的场都无法改变<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>处的值，因此必须生成一个反射波，其大小与传入场相等但符号相反。）</p><h2 id="一维PMC边界">一维PMC边界</h2><p>在程序3.1中，网格的一侧（“右侧”）由一个始终为零的磁场终止。观察到这个节点充当了一个完美的磁导体（PMC），产生了一个反射波，其中电场没有翻转，而磁场翻转了。</p><p>为了充分理解为什么会出现这种情况，让我们考虑一维域的右侧，其中使用200个电场和磁场节点来模拟自由空间。假设Courant数为1，自由空间的阻抗为377。网格中的最后一个节点是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>，它将始终保持为零。使用以下C语言表示法更新网格中的其他节点：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>∗</mo><mn>377</mn><mspace linebreak="newline"></mspace></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.22)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">e_{z}[m] = e_{z}[m] + (h_{y}[m] - h_{y}[m-1]) * 377 \\ \tag{3.22}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">377</span></span><span class="mspace newline"></span><span class="tag"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.22</span></span><span class="mord">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>377</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.23)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">h_{y}[m] = h_{y}[m] + (e_{z}[m+1] - e_{z}[m]) / 377 \tag{3.23}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">])</span><span class="mord">/377</span></span><span class="tag"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.23</span></span><span class="mord">)</span></span></span></span></span></span></p><p>假设一个Dirac delta脉冲，即一个在空间-时间中存在于单个电场节点上的单位幅度脉冲，即将接近网格的末端。表3.1显示了当脉冲到达节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>198</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[198]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">198</span><span class="mclose">]</span></span></span></span>时，从时间q开始的渐进时间步场中的场值。</p><p>在时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>时，节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>198</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[198]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">198</span><span class="mclose">]</span></span></span></span>为1，而在磁场上一次更新时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>197</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[197]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">197</span><span class="mclose">]</span></span></span></span>被设置为-1/377。当在时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">q+1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span></span></span></span>时更新磁场时，更新方程(3.23)规定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>197</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[197]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">197</span><span class="mclose">]</span></span></span></span>被设置为零（磁场的“旧”值抵消了电场的贡献）。与此同时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>198</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[198]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">198</span><span class="mclose">]</span></span></span></span>变为−1/377。所有其他磁场节点都将为零。</p><p>在时间步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>时更新电场导致<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>198</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[198]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">198</span><span class="mclose">]</span></span></span></span>被设置为零，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>被设置为1——脉冲向右移动一个空间步长。如果在节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>处可以使用正常的更新方程，在时间步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>3</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">q + 3/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3/2</span></span></span></span>时，它将被设置为−1/377。然而，因为在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>的右侧没有邻近的电场，所以无法使用更新方程，缺乏替代的计算方法，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>被保留为零。因此，在时间步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>3</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">q + 3/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3/2</span></span></span></span>时，网格中的所有磁场节点都为零。</p><p>当在时间步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">q + 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>时更新电场时，基本上什么也没有发生。电场从它们的旧值和周围磁场的差异进行更新。然而所有磁场都为零。因此，新的电场与旧的电场相同。</p><p>在时间步<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>+</mo><mn>5</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">q + 5/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5/2</span></span></span></span>，存在于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>z</mi></msub><mo stretchy="false">[</mo><mn>199</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">e_{z}[199]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">199</span><span class="mclose">]</span></span></span></span>处的单位脉冲导致<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">[</mo><mn>198</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">h_{y}[198]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">198</span><span class="mclose">]</span></span></span></span>变为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>377</mn></mrow><annotation encoding="application/x-tex">1/377</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/377</span></span></span></span>，这与两个时间步之前的值相反。从这个时刻开始，脉冲向左传播，而电场保持单位幅度。</p><p>这个讨论是针对单个脉冲的，但任何入射场都可以被视为一串脉冲，然后只需叠加它们的值。这个讨论进一步假设Courant数为1。当Courant数不是1时，网格的终止仍然表现为一个PMC墙，但脉冲将不会没有失真地传播（它会因为网格本身的特性而遭受色散，这将在7.4节中更详细地讨论）。</p><p>如果网格终止在一个始终设置为零的电场节点上，那个节点将表现为一个完美的电导体。在这种情况下，反射的电场将与入射场的符号相反，而磁场将保持其符号。这就是在程序3.1中任何入射到网格左侧的场所发生的情况。</p><h2 id="场的快照">场的快照</h2><p>在程序3.1中，将单个点的场记录到文件中。另外，通常有必要在一个时间点上查看整个计算域中的场，即，获取一个显示整个空间中场的“快照”。这里我们描述一种在C中方便实现这一点的方式。</p><p>这里采用的方法是为每个快照打开一个单独的文件。每个文件都将有一个共同的基本名称，然后是一个点，然后是一个序列号，称为帧号。因此，例如，文件可以称为sim.0，sim.1，sim.2等等。为了实现这一点，将在程序（如程序3.1）中添加Fragments 3.2和3.3中显示的片段。</p><p>程序片段3.2 与拍摄快照相关的变量声明。基本名称存储在字符数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">basename</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ba</span><span class="mord mathnormal">se</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span></span></span></span>中，每个帧的完整文件名存储在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>i</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">filename</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span></span></span></span>中。这里基本名称初始化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">im</span></span></span></span>，但如果需要，用户可以提示输入基本名称。整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">frame</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span></span></span></span>是每个快照的帧号，初始化为零。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> basename[<span class="number">80</span>] = <span class="string">&quot;sim&quot;</span>, filename[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> frame = <span class="number">0</span>;</span><br><span class="line">FILE *snapshot;</span><br></pre></td></tr></table></figure><p>程序片段3.3 生成快照的代码。这将放置在时间步进循环内部。初始的if语句确保每隔十个时间步记录一次电场。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* write snapshot if time-step is a multiple of 10 */</span></span><br><span class="line"><span class="keyword">if</span> (qTime % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/* construct complete file name and increment frame counter */</span></span><br><span class="line">sprintf(filename, <span class="string">&quot;%s.%d&quot;</span>, basename, frame++);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* open file */</span></span><br><span class="line">snapshot = fopen(filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* write data to file */</span></span><br><span class="line"><span class="keyword">for</span> (mm = <span class="number">0</span>; mm &lt; SIZE; mm++)</span><br><span class="line">fprintf(snapshot, <span class="string">&quot;%g\n&quot;</span>, ez[mm]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* close file */</span></span><br><span class="line">fclose(snapshot);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在片段3.2中，基本名称初始化为sim，但是用户可以输入，整数变量frame是快照（或帧）计数器，每次拍摄快照都会递增，它被初始化为0，文件指针snapshot用于输出文件</p><p>在程序3.1的时间步进循环中，片段3.3中显示的代码将被放置。第2行使用取模运算符(%)检查时间步长是否是10的倍数。（10是相对任意选择的。如果希望更频繁的进行快照，可以使用较小的值。如果希望更少地进行快照，可以使用较大的值。）如果时间步长是10的倍数，则在第4行通过将文件名写入字符串变量filename来构造完整的输出文件名。（由于零是10的倍数，第一个拍摄到的快照对应于时间为0时的场）。这些数据将被写入文件sim.0中，请注意，在第四行中，每次创建文件名时，帧号都会递增。在第7行打开文件并在从第10行开始的循环中写入数据。最后，在第14行关闭文件。</p><p>图3.7显示了在时间步长20，30和40处的场的快照，基本上使用了与程序3.1相同的代码，唯一的区别是添加了用于拍摄快照的代码，相应的文件是sim.2、sim3和sim.4。在这些快照中，可以看到场从左侧进入计算域并向右传播。</p><h2 id="叠加源">叠加源</h2><p>将源硬连线，就像在程序3.1中所做的那样，存在一个严重缺陷，即能量无法通过源节点传递。这个问题可以通过使用叠加源来解决。考虑安培定律与电流密度项：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">△</mi><mo lspace="0em" rspace="0em">×</mo><mi>H</mi><mo>=</mo><mi>J</mi><mo>+</mo><mi>ϵ</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.24)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\triangle{\times}H = J + \epsilon\frac{\partial{E}}{\partial{t}} \tag{3.24}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">△</span><span class="mord"><span class="mord">×</span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.24</span></span><span class="mord">)</span></span></span></span></span></span></p><p>电流密度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span>可以表示由于电场影响下材料中电荷流动而产生的传导电流，即由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">σE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>给出的电流，以及与任何源相关的电流，即“施加的电流”。在这一点上，我们只关注J的源方面，并将在3.12节和5.7节中回到有限导电性的问题。稍微重排（3.24）得到:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>ϵ</mi></mfrac><mi mathvariant="normal">△</mi><mo>×</mo><mi>H</mi><mo>−</mo><mfrac><mn>1</mn><mi>ϵ</mi></mfrac><mi>J</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.25)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\frac{\partial{E}}{\partial{t}} = \frac{1}{\epsilon}\triangle\times{H}-\frac{1}{\epsilon}J \tag{3.25}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">△</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span><span class="tag"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.25</span></span><span class="mord">)</span></span></span></span></span></span></p><p>这个方程给出了电场的时间导数，与磁场的空间导数以及一个额外的项有关，这个额外的项可以被视为系统的外力函数。这个电流可以被指定为任何所需的形式。</p><p>要将(3.25)转换为适用于FDTD算法的形式，空间导数再次以有限差分的形式表达，然后通过解出未来常量来表示过去场量。回想一下，对于安培定律，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span>的更新方程是通过在空间-时间点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m\triangle_{x},(q+1/2)\triangle_{t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">)</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>应用有限差分得到的。经过完全相同的过程，但添加源项，得到的更新方程为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>+</mo><mfrac><msub><mi mathvariant="normal">Δ</mi><mi>t</mi></msub><mrow><mi>ϵ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo stretchy="false">(</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>−</mo><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi>ϵ</mi></mfrac><msubsup><mi>J</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">E_{z}^{q+1}[m] = E_{z}^{q}[m] + \frac{\Delta_{t}}{\epsilon{\triangle_{x}}}(H_{y}^{q+1/2}[m+1/2] - H_{y}^{q+1/2}[m-1/2])-\frac{\triangle_{t}}{\epsilon}J_{z}^{q+1/2}[m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3211em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span></span></span></span></p><p>源电流可能分布在多个节点上，但为了向网格引入能量，将其应用于单个节点就足够了。</p><p>为了保留原始的更新方程，可以将(3.26)分为两个步骤：首先应用常规的更新，然后添加源项：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msubsup><mi>E</mi><mi>z</mi><mi>q</mi></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>+</mo><mfrac><msub><mi mathvariant="normal">Δ</mi><mi>t</mi></msub><mrow><mi>ϵ</mi><msub><mi mathvariant="normal">△</mi><mi>x</mi></msub></mrow></mfrac><mo stretchy="false">(</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo>−</mo><msubsup><mi>H</mi><mi>y</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.27)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">E_{z}^{q+1}[m]=E_{z}^{q}[m] + \frac{\Delta_{t}}{\epsilon\triangle_{x}}(H_{y}^{q+1/2}[m+1/2]-H_{y}^{q+1/2}[m-1/2]) \tag{3.27}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">Δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3211em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mclose">])</span></span><span class="tag"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.27</span></span><span class="mord">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>=</mo><msubsup><mi>E</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo><mo>−</mo><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi>ϵ</mi></mfrac><msubsup><mi>J</mi><mi>z</mi><mrow><mi>q</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3.28)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">E_{z}^{q+1}[m]=E_{z}^{q+1}[m]-\frac{\triangle_{t}}{\epsilon}J_{z}^{q+1/2}[m] \tag{3.28}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.453em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1/2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mclose">]</span></span><span class="tag"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3.28</span></span><span class="mord">)</span></span></span></span></span></span></p><p>实际上，源电流可能只存在于一维网格中的单个节点（在即将出现的示例中将是这种情况）。因此，（3.28）只会应用在源电流非零的节点上。</p><p>通常，源函数的幅度和符号并不是一个问题。在计算诸如散射截面或反射系数等物理量时，我们总是通过入射场进行归一化。因此，在（3.28）中我们不需要明确指定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msub><mi mathvariant="normal">△</mi><mi>t</mi></msub><mi>ϵ</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{\triangle_{t}}{\epsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2772em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϵ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">△</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>的值，只需将该系数视为源函数本身的一部分即可。</p><p>程序3.4展示了一个实现叠加源并拍摄电场快照的程序。与程序3.1相比的更改以粗体显示。源函数与以前完全相同，只是现在，不再将ez[0]的值设置为此函数的值，而是将源函数添加到ez[50]。源在第29行引入，更新方程与以前相同。（请注意，在本章中，程序会有些冗长、简单和重复。一旦我们对FDTD算法感到满意，我们将更加关注更好的编码实践。）</p><p>程序3.4：1Dadditive.c：一维FDTD程序，带有叠加源。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1D FDTD simulation with an additive source. */</span></span><br><span class="line"></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> SIZE 200</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> ez[SIZE] = &#123;<span class="number">0.</span>&#125;, hy[SIZE] = &#123;<span class="number">0.</span>&#125;, imp0 = <span class="number">377.0</span>;</span><br><span class="line"><span class="keyword">int</span> qTime, maxTime = <span class="number">200</span>, mm;</span><br><span class="line"><span class="keyword">char</span> basename[<span class="number">80</span>] = <span class="string">&quot;sim&quot;</span>, filename[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> frame = <span class="number">0</span>;</span><br><span class="line">FILE *snapshot;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* do time stepping */</span></span><br><span class="line"><span class="keyword">for</span> (qTime = <span class="number">0</span>; qTime &lt; maxTime; qTime++) &#123;</span><br><span class="line"><span class="comment">/* update magnetic field */</span></span><br><span class="line"><span class="keyword">for</span> (mm = <span class="number">0</span>; mm &lt; SIZE - <span class="number">1</span>; mm++)</span><br><span class="line">hy[mm] = hy[mm] + (ez[mm + <span class="number">1</span>] - ez[mm]) / imp0;</span><br><span class="line"><span class="comment">/* update electric field */</span></span><br><span class="line"><span class="keyword">for</span> (mm = <span class="number">1</span>; mm &lt; SIZE; mm++)</span><br><span class="line">ez[mm] = ez[mm] + (hy[mm] - hy[mm - <span class="number">1</span>]) * imp0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* use additive source at node 50 */</span></span><br><span class="line">ez[<span class="number">50</span>] += <span class="built_in">exp</span>(-(qTime - <span class="number">30.</span>) * (qTime - <span class="number">30.</span>) / <span class="number">100.</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* write snapshot if time a multiple of 10 */</span></span><br><span class="line"><span class="keyword">if</span> (qTime % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">sprintf</span>(filename, <span class="string">&quot;%s.%d&quot;</span>, basename, frame++);</span><br><span class="line">snapshot=<span class="built_in">fopen</span>(filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (mm = <span class="number">0</span>; mm &lt; SIZE; mm++)</span><br><span class="line"><span class="built_in">fprintf</span>(snapshot, <span class="string">&quot;%g\n&quot;</span>, ez[mm]);</span><br><span class="line"><span class="built_in">fclose</span>(snapshot);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">/* end of time-stepping */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图3.8显示了在时间步骤20，30，40处拍摄的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">E_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的快照，请注意，场起源于节点50，并且向该节点的两侧传播。还请注意，峰值幅度仅为将源函数实现为硬连接源时的一半。</p><p>在程序3.4中，需要注意的是，拍摄电场快照的代码被放置在时间步进的更新方程之后，人们可能会问：快照文件sim.0的内容包含时间0时的场还是时间1时的场？而其他快照是否对应于10的倍数的时间，还是对应于10的倍数加一的时间？在几乎所有实际情况下，这并不重要。时间t = 0的精确位置相当任意。因此，当查看快照时，通常只需知道快照序列是从“模拟开始”开始的，然后每隔10个时间步拍摄一次快照。然而，如果想要更加精确，绝对时间通常由源函数确定。现在，考虑硬源实现而不是叠加源。我们已经实现了一个高斯源，在时间步30处达到峰值幅度。代码的编写方式是，源函数在更新方程之后应用，然后最后进行拍摄快照，我们会在帧sim.1中看到源节点处的峰值。换句话说，快照确实对应于10的倍数的时间。因此，在某种意义上，电场从时间步-1开始。第一个更新循环将它们更新到时间步0，然后在时间步0应用源函数以设置源节点处的场。然而，这实际上是一个微不足道的细节，在后续讨论中我们不会过多担心。引入源的代码是在更新循环之前还是之后出现，以及生成输出的代码是在更新循环之前还是之后出现，通常并不重要——一般重要的是这些内容都包含在时间步进循环中。</p><h2 id="终止网格">终止网格</h2><p>在大多数情况下，人们感兴趣的是对存在于开放域的问题进行建模，即，一个无限空间。即使在特定感兴趣的区域，比如存在散射体的区域，可能很小的情况下也是如此。那个散射体位于一个无界空间中。到目前为止，我们编写的代码只适用于建模谐振器，因为网格末端的节点会反射到达它们的任何场。我们现在希望纠正这个缺点。吸收边界条件（ABC）将被使用，以便包含有限数量的节点的网格能够表现得像是无限的一样。在一维情况下，当运行在Courant极限为1时，可以实现精确的ABC。不幸的是，在更高维度，或者甚至在一维情况下当不处于Courant极限时，ABC只是近似的。ABC越好，反射回网格内部的能量就越少。</p><p>在实现吸收边界条件之前，让我们再次考虑程序3.4中显示的代码，但将最大时间步数设置为450。使用有限差分时间域（FDTD）方法，可以以更多的方式可视化场的变化，这样做更好。观察场在时域中的传播可以提供对系统行为的洞察。此外，场的传播可视化在调试FDTD代码时可以是一种非常宝贵的辅助工具。场的动画特别有用，不同的显示策略将在后续讨论中进行探讨。</p><p>由于我们无法在这里包含动画，我们将在一维域中使用“瀑布图”来表示电场。瀑布图是一组标准的“x vs. y”图，其中每个图与下一个略有偏移（在这里将使用直接的垂直偏移）。这可以看作是将动画的所有帧堆叠在一起，依次排列。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;时域有限微分：一维FDTD&lt;/h1&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;时域有限差分算法(FDTD)方法可以说是最简单的全波方法，FDTD方法可以解决复杂的问题，但通常计算成本较高。解决方案可能需要大量的内存和计算时间。FDTD算法大致属于&amp;quot;谐振区域</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/FDTD/"/>
    <id>http://example.com/2024/06/25/FDTD/</id>
    <published>2024-06-25T14:57:58.514Z</published>
    <updated>2024-05-30T15:07:12.134Z</updated>
    
    <content type="html"><![CDATA[<h1>概述</h1><p>正如我们所见，FDTD方法提供了空间有限区域内的场，即计算域内的场。然而，在实践中，我们常常对我们建模区域远处的场感兴趣。例如，一个FDTD实现可能已经对天线或某些散射体进行了建模。但是，天线或散射体附近的场可能并不是主要关注的对象。相反，远处或“远场”可能是主要关注的对象。在本章中，我们将展示如何利用近场（基本上是FDTD网格内的场）来获得远场。我们首先简要回顾适用于连续世界的基本理论，然后讨论FDTD方法的实现细节。</p><h1>等效原理</h1><p>界面上电场和磁场切向有关的边界条件：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mover accent="true"><mi>n</mi><mo>^</mo></mover><mtext>’</mtext></msup><mo>×</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>−</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>M</mi><mi>s</mi></msub><mspace linebreak="newline"></mspace><msup><mover accent="true"><mi>n</mi><mo>^</mo></mover><mtext>’</mtext></msup><mo>×</mo><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo>−</mo><msub><mi>H</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>J</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\hat{n}^{’}\times(E_{1}-E_{2})=-M_{s}\\\hat{n}^{’}\times(H_{1}-H_{2})=J_{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9824em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">’</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9824em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">’</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;概述&lt;/h1&gt;
&lt;p&gt;正如我们所见，FDTD方法提供了空间有限区域内的场，即计算域内的场。然而，在实践中，我们常常对我们建模区域远处的场感兴趣。例如，一个FDTD实现可能已经对天线或某些散射体进行了建模。但是，天线或散射体附近的场可能并不是主要关注的对象。相反，远处或“远</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2024/06/25/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91/</id>
    <published>2024-06-25T14:57:58.506Z</published>
    <updated>2024-05-30T15:07:12.167Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>音视频开发</h1><h2 id="音视频录制原理">音视频录制原理</h2><p><img src=".%5Cassets%5C%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BD%95%E5%88%B6%E5%8E%9F%E7%90%86.png" alt=""></p><h2 id="音视频播放原理">音视频播放原理</h2><p><img src=".%5Cassets%5C%E9%9F%B3%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%8E%9F%E7%90%86.png" alt=""></p><h2 id="图像基础概念">图像基础概念</h2><ul><li>像素：像素是一个图片的基本单位，pix是英语单词picture的简写，加上英语单词&quot;元素element&quot;，就得到了&quot;pixel&quot;，简称px，所以&quot;像素&quot;有&quot;图像元素&quot;之意。</li><li>分辨率：是指图像的大小或者尺寸。比如1920*1080</li><li>位深：是指在记录数字图像的颜色时，计算机实际上使用每个像素需要的位深来表示的。比如红色分量用8bit。</li><li>帧率：在1秒种时间内传输的图片的帧数，也可以理解为图形处理器每秒钟能够刷新几次。比如25fps表示一秒有25张图片。</li><li>码率：视频文件在单位时间内使用的数据流量。比如1Mbps</li><li>Stride：指在内存中每行像素所占的空间。为了实现内存对齐每行像素在内存中所占的空间并不一定是图像的宽度</li></ul><p>像素是一个图片的基本单位，pix是英语单词picture的简写：</p><p>例如2500*2000的图片就是指横向有2500个像素点，竖向有2000个像素点，总共是500万个像素，也俗称500万像素照片。</p><ul><li>分辨率</li></ul><p>图像（或视频）的分辨率是指图像的大小或尺寸，我们通常用像素来表示图像的尺寸。</p><p>例如2500*2000的照片就是指横向（宽）有2500个像素点，竖向（高）有2000个像素点。</p><p>常见的分辨率：</p><p>360P(640*360)、720P(1280*720)、1080P(1920*1080)、4K(3840*2160)、8K(7680*4320)</p><ul><li>位深：</li></ul><p>我们看到的彩色图片，都有三个通道，分别为红®、绿(G)、蓝(B)通道。（如果需要透明度则还有alpha分量）</p><p>通常每个通道用8bit表示，8bit能表示256中颜色，所以可以组成256*256*256=16777216=1677万种颜色</p><p>这里的8bit就是我们讲的位深</p><p>每个通道的位深越大，能够表示的颜色值就越大，比如现在高端电视说的10bit色彩，即是每个通道用10bit表示，每个通道有1024种颜色。1024*1024*1024约为107374万色，是8bit的64倍。</p><p>常见的颜色还是8bit居多</p><ul><li>帧率</li></ul><p>帧率即FPS(每秒有多少帧画面)，经常玩游戏的同学应该对这个词会很熟悉。我们玩游戏时，FPS帧率越高就代表游戏画面越流畅，越低则越卡顿。视频也是如此。</p><p>由于视觉图像在视网膜的暂时停留，一般图像帧率能达到24帧，我们就认为图像是连续动态的。</p><p>电影帧率一般是24fps</p><p>电视剧一般是25fps</p><p>监控行业常用25fps</p><p>音视频通话常用15fps</p><p>帧率越高，画面越流畅，需要的设备性能越高。</p><ul><li>码率</li></ul><p>视频文件在单位时间内使用的数据流量。比如1Mbps</p><p>大多数情况下码率越高，分辨率越高，也就越清晰。但模糊的视频文件大小（码率）也可以很大，分辨率小的视频文件可能也比分辨率大的视频文件清晰。</p><p>对于同一个原始图像源时，同样的编码算法，则码率越高，图像的失真就会越小，视频画面就会越清晰</p><ul><li>RGB</li></ul><p>我们前面已经讲过RGB色彩表示，这里我们重点讲RGB的排列。通常的图像像素是按RGB顺序进行排列，但有些图像处理要转成其他顺序，比如openCV经常转成BGR的排列方式</p><h2 id="YUV">YUV</h2><ul><li>与我们熟知RGB类似，YUV也是一种颜色编码方法，它是指将亮度参量（Y: Luminance或Luma）和色度参量（UV：Chrominance或Chroma）分开进行表示的像素编码格式。</li><li>这样分开的好处就是不但可以避免相互干扰，没有UV信息一样可以显示完整图像，从而解决了彩色电视和黑白电视的兼容问题</li></ul><p>YUV格式：有两大类：planar和packed。</p><ul><li>对于planar的YUV格式，先连续存储所有像素点的Y，紧接着存储所有像素点的U，随后是所有像素点的V。</li><li>对于packed的YUV格式，每个像素点的Y,U,V是连续交叉存储的。</li></ul><h2 id="音视频应用场景">音视频应用场景</h2><ul><li>互动直播系统</li><li>娱乐直播系统</li><li>音视频特效</li><li>音视编辑</li></ul><p>常用工具</p><ul><li>ffmpeg</li><li>ffplay</li><li>vlc</li></ul><h2 id="编译ffmpeg与ffplay">编译ffmpeg与ffplay</h2><h3 id="Window10下安装FFmpeg">Window10下安装FFmpeg</h3><ol><li>FFmpeg命令行</li><li>安装QT</li></ol><h3 id="Linux基础">Linux基础</h3><p>Linux的一些命令</p><ul><li>ls</li><li>cd</li><li>pwd</li><li>mkdir</li><li>cp</li><li>rm</li><li>sudo</li><li>pkg-config</li></ul><p>Linux中环境变量的配置</p><ul><li>环境变量</li></ul><p>PATH、PKG_CONFIG_PATH</p><ul><li>环境变量的变更</li></ul><p>~/.bashrc  |  ~/.bash_profile</p><blockquote><p>记得在配置环境变量结束后要source ~/.bashrc</p></blockquote><p>我们可以通过<code>which</code>来查看命令所在路径</p><h3 id="Linux-Mac下编译ffmpeg-ffplay">Linux/Mac下编译ffmpeg/ffplay</h3><p>先使用git下载ffmpeg代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg</span><br></pre></td></tr></table></figure><p>在初次编译时可能需要下载yasm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载：wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz</span><br><span class="line">解压：tar zxvf yasm-1.3.0.tar.gz</span><br><span class="line">切换路径： cd yasm-1.3.0</span><br><span class="line">执行配置： ./configure</span><br><span class="line">编译：make</span><br><span class="line">安装：make install</span><br></pre></td></tr></table></figure><p>然后编译ffmpeg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/ffmpeg --enable-debug=3</span><br><span class="line">make -j 4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>其中–prefix的参数是安装路径</p><h3 id="Windows下编译ffmpeg和ffplay">Windows下编译ffmpeg和ffplay</h3><ul><li>Cygwin</li><li>MinGW</li><li>VS</li></ul><p>Cygwin(Cygnus Windows)</p><ul><li><p>Cygin直接安装使用</p></li><li><p>MinGW + MSYS2（推荐）</p></li></ul><h3 id="ffmpeg-ffplay-ffprobe区别">ffmpeg/ffplay/ffprobe区别</h3><p>ffmpeg</p><p>Hyper fast Audio and Video encoder：超快音视频编码器</p><p>ffplay</p><p>Simple Media player：简单媒体播放器</p><p>ffprobe</p><p>Simple multimedia streams analyzer：简单多媒体流分析器</p><h3 id="ffmpeg命令查看帮助文档">ffmpeg命令查看帮助文档</h3><p>基本信息：ffmpeg -h</p><p>高级信息： ffmpeg -h long</p><p>所有信息： ffmpeg -h full</p><h3 id="ffmpeg音视频处理流程">ffmpeg音视频处理流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![ffmpeg音视频处理流程](D:\code\docs\blogdocs\音视频开发\assets\ffmpeg音视频处理流程.png)ffmpeg -i test_1920x1080.mp4 -acodec copy -vcodec libx264 -s 1280x720 test_1280x720.flv</span><br><span class="line">ffmpeg -i test_1920x1080.mp4 -acodec copy -vcodec libx265 -s 1280x720 test_1280x720.mkv</span><br></pre></td></tr></table></figure><p><img src="D:%5Ccode%5Cdocs%5Cblogdocs%5C%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BC%80%E5%8F%91%5Cassets%5Cffmpeg%E9%9F%B3%E8%A7%86%E9%A2%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.png" alt=""></p><h2 id="WebRTC">WebRTC</h2><h3 id="WebRTC概述">WebRTC概述</h3><ul><li>音视频处理+即时通讯的开源库</li><li>2010年Google将其开源</li><li>它是一个非常优秀的多媒体框架，跨平台</li><li>音视频实时互动</li><li>游戏、即时通讯、文件传输</li><li>它是一个百宝箱，传输，音视频处理</li></ul><p><img src="https://ask.qcloudimg.com/http-save/yehe-3891894/ur39516uox.png" alt="img"></p><h3 id="WebRTC的目录结构">WebRTC的目录结构</h3><table><thead><tr><th>目录</th><th>功能</th></tr></thead><tbody><tr><td>api</td><td>WebRTC接口层，浏览器都是通过该接口调用WebRTC</td></tr><tr><td>call</td><td>数据流的管理层，Call代表同一个端点的所有数据的流入流出</td></tr><tr><td>video</td><td>与视频相关的逻辑</td></tr><tr><td>audio</td><td>与音频相关的逻辑</td></tr><tr><td>common_audio</td><td>音频算法相关</td></tr><tr><td>common_video</td><td>视频算法相关</td></tr><tr><td>media</td><td>与多媒体相关的逻辑处理，如编解码的逻辑处理</td></tr><tr><td>logging</td><td>日志相关</td></tr><tr><td>module</td><td>最重要的目录，子模块</td></tr><tr><td>pc</td><td>Peer Connection，连接相关的逻辑层</td></tr><tr><td>p2p</td><td>端对端相关代码，stun，turn</td></tr><tr><td>rtc_base</td><td>基础代码，如线程，锁相关的统一接口代码</td></tr><tr><td>rtc_tool</td><td>音视频分析相关的工具代码</td></tr><tr><td>tool_webrtc</td><td>WebRTC测试相关的工具代码，如网络模拟器</td></tr><tr><td>system_wrappers</td><td>与具体操作系统相关的代码，如CPU特性，原子操作等</td></tr><tr><td>stats</td><td>存放各种数据统计相关的类</td></tr><tr><td>sdk</td><td>存放与Android和IOS层的代码，如视频采集与渲染</td></tr></tbody></table><h4 id="WebRTC-Modules目录">WebRTC Modules目录</h4><table><thead><tr><th>目录</th><th>功能</th></tr></thead><tbody><tr><td>audio_coding</td><td>音频编解码相关代码</td></tr><tr><td>audio_device</td><td>音频采集与音频播放相关代码</td></tr><tr><td>audio_mixer</td><td>混音相关代码</td></tr><tr><td>audio_processing</td><td>音视频前后处理的相关代码</td></tr><tr><td>bitrate_controller</td><td>码率控制相关代码</td></tr><tr><td>congestion_controller</td><td>流控相关代码</td></tr><tr><td>desktop_capture</td><td>桌面采集相关的代码</td></tr><tr><td>pacing</td><td>码率探测以及平滑处理相关代码</td></tr><tr><td>remote_bitrate_estimator</td><td>远端码率估算相关的代码</td></tr><tr><td>rtp_rtcp</td><td>rtp/rtcp协议相关代码</td></tr></tbody></table><h3 id="WebRTC重要类">WebRTC重要类</h3><ul><li>MediaStream</li><li>RTCPeerConnection</li><li>RTCDataChannel</li></ul><h3 id="PeerConnection调用过程">PeerConnection调用过程</h3><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ec05fc2f0964e9fb79328481835c45f~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="img"></p><h3 id="Web服务器">Web服务器</h3><ul><li>Nodejs</li><li>Nginx</li><li>Apache</li></ul><h2 id="WebRTC设备管理">WebRTC设备管理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var ePromise = navigator.mediaDevices.enumerateDevices();</span><br></pre></td></tr></table></figure><ul><li>MediaDevicesInfo</li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>deviceID</td><td>设备ID</td></tr><tr><td>label</td><td>设备的名字</td></tr><tr><td>kind</td><td>设备的种类</td></tr><tr><td>groupID</td><td>两个设备groupID相同，说明是同一个设备</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> audioSource = <span class="built_in">document</span>.querySelector(<span class="string">&quot;select#audioSource&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> audioOutput = <span class="built_in">document</span>.querySelector(<span class="string">&quot;select#audioOutput&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> vedioSource = <span class="built_in">document</span>.querySelector(<span class="string">&quot;select#videoSource&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(!navigator.mediaDevices ||</span><br><span class="line">        !navigator.mediaDevices.enumerateDevices)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;enumerateDevices is not supported!&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        navigator.mediaDevices.enumerateDevices()</span><br><span class="line">        .then(gotDevices)</span><br><span class="line">        .catch(handleError);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gotDevices</span>(<span class="params">deviceInfos</span>)</span>&#123;</span><br><span class="line">        deviceInfos.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">deviceInfo</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(deviceInfo.kind + <span class="string">&quot;: label = &quot;</span></span><br><span class="line">                + deviceInfo.label + <span class="string">&quot;: id = &quot;</span></span><br><span class="line">                + deviceInfo.deviceId + <span class="string">&quot;: groupId = &quot;</span></span><br><span class="line">                + deviceInfo.groupId);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">var</span> option = <span class="built_in">document</span>.createElement(<span class="string">&#x27;option&#x27;</span>);</span><br><span class="line">        option.text = deviceInfo.label;</span><br><span class="line">        option.value = deviceInfo.deviceId;</span><br><span class="line">        <span class="keyword">if</span>(deviceInfo.kind === <span class="string">&#x27;audioinput&#x27;</span>)&#123;</span><br><span class="line">                audioSource.appendChild(option);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deviceInfo.kind === <span class="string">&#x27;audiooutput&#x27;</span>)&#123;</span><br><span class="line">                audioOutput.appendChild(option);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(deviceInfo.kind === <span class="string">&#x27;videoinput&#x27;</span>)&#123;</span><br><span class="line">                videoSource.appendChild(option);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleError</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err.name + <span class="string">&quot; : &quot;</span> + err.message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span> WebRTC get audio and video devices <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span>audio input device:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;audioSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span>audio output device:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;audioOutput&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span>video input device:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;videoSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;./js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="音视频采集API">音视频采集API</h3><p>基本格式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> promise = navigator.mediaDevices.getUserMedia(constraints);</span><br></pre></td></tr></table></figure><ul><li>MediaStreamConstraints</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span> WebRTC get audio and video devices <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span> <span class="attr">playsinline</span> <span class="attr">id</span> = <span class="string">&quot;player&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> videoPlayer = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;video#player&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gotMediaStream</span>(<span class="params">stream</span>) </span>&#123;</span><br><span class="line">    videoPlayer.srcObject = stream;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleError</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;getUserMedia error: &#x27;</span>, err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;getUserMedia is not support&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> constrants = &#123;</span><br><span class="line">        <span class="attr">video</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">audio</span> : <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    navigator.mediaDevices.getUserMedia(constrants)</span><br><span class="line">        .then(gotMediaStream)</span><br><span class="line">        .catch(handleError);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="getUserMedia的不同实现">getUserMedia的不同实现</h3><ul><li>getUserMedia</li><li>webkitGetUserMedia</li><li>mozGetUserMedia</li></ul><p>自己实现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getUserMedia = navigator.getUserMedia ||  navigator.webkitGetUserMedia || navigator.mozGetUserMedia</span><br></pre></td></tr></table></figure><h3 id="视频约束">视频约束</h3><ul><li>width：视频宽度</li><li>height：视频高度</li><li>aspectRatio：</li><li>frameRate：帧率</li><li>facingMode<ul><li>user：前置摄像头</li><li>environment：后置摄像头</li><li>left：前置左侧摄像头</li><li>right：前置右侧摄像头</li></ul></li><li>resizeMode</li></ul><h3 id="音频约束">音频约束</h3><ul><li>volume</li><li>sampleRate</li><li>sampleSize</li><li>echoCancellation：开启回音消除</li><li>autoGainControl</li><li>noiseSuppression：降噪</li><li>latency：延迟</li><li>channelCount：单声道还是双声道</li><li>deviceID：设备切换</li><li>groupID</li></ul><h3 id="视频渲染特效">视频渲染特效</h3><p>浏览器特效</p><ul><li>CSS filter，-webkit-filter/filter</li><li>如何将video和filter关联</li><li>OpenGL/Metal</li></ul><p>支持的特效种类</p><table><thead><tr><th>特效</th><th>说明</th></tr></thead><tbody><tr><td>grayscale</td><td>灰度</td></tr><tr><td>opacity</td><td>透明度</td></tr><tr><td>sepia</td><td>褐色</td></tr></tbody></table><h3 id="视频中获取图片">视频中获取图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>WebRTC学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- autoplay属性表示视频流字节处理完后会自动播放 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">autoplay</span> <span class="attr">playsinline</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;capture&quot;</span>&gt;</span>拍照<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> video = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;video&#x27;</span>);   </span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia())&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;您的浏览器不支持getUserMedia&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> constraints = &#123;                </span></span><br><span class="line"><span class="javascript">                <span class="attr">audio</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">video</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            navigator.mediaDevices.getUserMedia(constraints)</span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span>(<span class="params">stream</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                video.srcObject = stream;</span></span><br><span class="line"><span class="javascript">            &#125;)</span></span><br><span class="line"><span class="javascript">            .catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(err.name + <span class="string">&quot;: &quot;</span> + err.message);</span></span><br><span class="line"><span class="javascript">            &#125;);    </span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> capture = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;capture&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;canvas&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        canvas.width = <span class="number">320</span>;</span></span><br><span class="line"><span class="javascript">        canvas.height = <span class="number">240</span>;</span></span><br><span class="line"><span class="javascript">        capture.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            canvas.getContext(<span class="string">&#x27;2d&#x27;</span>).drawImage(video, <span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="WebRTC只采集音频数据">WebRTC只采集音频数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>WebRTC学习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span> <span class="attr">controls</span> <span class="attr">id</span>=<span class="string">&quot;audioplayer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> audioplayer=<span class="built_in">document</span>.querySelector(<span class="string">&#x27;audio#audioplayer&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gotMediaStream</span>(<span class="params">stream</span>)</span>&#123;</span><br><span class="line">audioplayer.srcObject=stream;</span><br><span class="line"><span class="keyword">return</span> navigator.mediaDevices.enumerateDevices();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleError</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;getUserMedia  error:&quot;</span>,err);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!navigator.mediaDevices||</span><br><span class="line">!navigator.mediaDevices.getUserMedia) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;getUserMedia is not supported!&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> constraints=&#123;</span><br><span class="line"><span class="attr">video</span>:<span class="literal">false</span>,</span><br><span class="line"><span class="attr">audio</span>:<span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line">navigator.mediaDevices.getUserMedia(constraints)</span><br><span class="line">  .then(gotMediaStream)</span><br><span class="line">  .catch(handleError)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start();</span><br></pre></td></tr></table></figure><h3 id="MediaStream中的方法和事件">MediaStream中的方法和事件</h3><ul><li>MediaStream.addTrack：添加媒体轨</li><li>MediaStream.removeTrack：移除媒体轨</li><li>MediaStream.getVideoTracks：获取媒体轨</li><li>MediaStream.getAudioTracks：获取音频轨</li><li>MediaStream.onaddtrack：当添加媒体轨的事件</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;音视频开发&lt;/h1&gt;
&lt;h2 id=&quot;音视频录制原理&quot;&gt;音视频录制原理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;.%5Cassets%5C%E9%9F%B3%E8%A7%86%E9%A2%91%E5%BD%95%E5%88%B6%E5%8E%9F%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/"/>
    <id>http://example.com/2024/06/25/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/</id>
    <published>2024-06-25T14:57:58.466Z</published>
    <updated>2024-06-11T15:18:02.631Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>Redis</h1><h2 id="Redis快速入门">Redis快速入门</h2><p>Redis是一个<code>键值型</code>数据库，通常称为<code>NoSQL</code></p><h3 id="什么是NoSQL">什么是NoSQL</h3><p>关系型数据库VS非关系型数据库</p><ol><li><p>结构化VS非结构化</p></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;Redis&lt;/h1&gt;
&lt;h2 id=&quot;Redis快速入门&quot;&gt;Redis快速入门&lt;/h2&gt;
&lt;p&gt;Redis是一个&lt;code&gt;键值型&lt;/code&gt;数据库，通常称为&lt;code&gt;NoSQL&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是NoSQL&quot;&gt;什么</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E7%9F%AD%E8%A7%86%E9%A2%91app/"/>
    <id>http://example.com/2024/06/25/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E7%9F%AD%E8%A7%86%E9%A2%91app/</id>
    <published>2024-06-25T14:57:58.420Z</published>
    <updated>2024-06-25T14:08:05.298Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>JetPack项目</h1><h2 id="客户端环境搭建">客户端环境搭建</h2><ul><li>Android Studio</li><li>jdk8</li><li>jetpack</li></ul><h2 id="Navigation">Navigation</h2><p>JetPack Navigation是Android JetPack组件中的一个组件，用于简化Android应用中的导航和页面中的跳转。它提供了一种统一的方式来管理应用中的导航结构。帮助开发者容易的实现页面间跳转和管理，Navigation是管理Fragment之间导航的组件库，特别是在单个Activity和多个Fragment的管理模式中非常灵活</p><h3 id="核心概念与组件">核心概念与组件</h3><table><thead><tr><th>概念</th><th>描述</th></tr></thead><tbody><tr><td>Navigation Graph（导航图）</td><td>导航图是一个XML文件，用于定义应用中的导航结构，包含了应用中所有页面之间的导航关系，通过导航图，可以清晰的看到应用的整体导航结构，方便管理和维护</td></tr><tr><td>NavHostFragment（导航宿主Fragment）</td><td>NavHostFragment是一个特殊的Fragment，用于承载应用中所有Fragment，并负责管理这些Fragment之间的导航，每个NavHostFragment都会关联一个导航图，用于指定该NavHostFragment中页面的导航规则</td></tr><tr><td>NavController（导航控制器）</td><td>NavController是用于管理页面导航的控制器，负责处理页面之间的跳转，返回栈管理，深层链接等操作，可以通过NavController来执行页面间的跳转操作</td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;JetPack项目&lt;/h1&gt;
&lt;h2 id=&quot;客户端环境搭建&quot;&gt;客户端环境搭建&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio&lt;/li&gt;
&lt;li&gt;jdk8&lt;/li&gt;
&lt;li&gt;jetpack&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Navi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2024/06/25/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91/</id>
    <published>2024-06-25T14:57:58.419Z</published>
    <updated>2024-06-24T13:59:37.944Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="handler">handler</h2><h3 id="handler的原理">handler的原理</h3><p>handler主要用来做线程通信。handler的核心是解决线程切换。</p><p>接下来，我们去实现一个Handler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;MainActivity&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button registHandler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        registHandler = findViewById(R.id.button);</span><br><span class="line">        registHandler.setOnClickListener(<span class="keyword">this</span>::onClick);</span><br><span class="line">        mHandler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">                Log.d(TAG, <span class="string">&quot;---&gt;&quot;</span> + msg.obj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.button:</span><br><span class="line">                mHandler.sendMessage(<span class="keyword">new</span> Message(<span class="string">&quot;haoyu &quot;</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        handleMessage(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> </span>&#123;</span><br><span class="line">    String obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Message</span><span class="params">(String obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Message</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;发送消息&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/button2&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;发送消息&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/button&quot;</span> /&gt;</span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><p>但是，如果发送多条消息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;MainActivity&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button registHandler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        registHandler = findViewById(R.id.button);</span><br><span class="line">        registHandler.setOnClickListener(<span class="keyword">this</span>::onClick);</span><br><span class="line">        mHandler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">                Log.d(TAG, <span class="string">&quot;---&gt;&quot;</span> + msg.obj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.button:</span><br><span class="line">                mHandler.sendMessage(<span class="keyword">new</span> Message(<span class="string">&quot;david &quot;</span>));</span><br><span class="line">                mHandler.sendMessage(<span class="keyword">new</span> Message(<span class="string">&quot;david &quot;</span>));</span><br><span class="line">                mHandler.sendMessage(<span class="keyword">new</span> Message(<span class="string">&quot;david &quot;</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果一条消息特别大，那么就会造成阻塞。我们可以使用生产者消费者模式进行优化：</p><p>我们可以在Handler中创建MessageQueue,并定义looper方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">    MessageQueue messageQueue = <span class="keyword">new</span> MessageQueue();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Handler</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">looper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Message msg = messageQueue.next();</span><br><span class="line">            handleMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        messageQueue.enqueueMessage(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MessageQueue的实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    BlockingQueue&lt;Message&gt; queue = <span class="keyword">new</span> ArrayBlockingQueue&lt;Message&gt;(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * put = enqueueMessage</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueueMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queue.put(msg);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Message <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Message msg = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            msg = queue.take();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的话，就可以解决在大量消息过来时，线程阻塞的问题了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;MainActivity&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button registHandler;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Handler[] mHandler = &#123;<span class="keyword">null</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        registHandler = findViewById(R.id.button);</span><br><span class="line">        registHandler.setOnClickListener(<span class="keyword">this</span>::onClick);</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            mHandler[<span class="number">0</span>] = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;---&gt;&quot;</span> + msg.obj);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            mHandler[<span class="number">0</span>].looper();</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.button:</span><br><span class="line">                <span class="comment">// 处理不及时</span></span><br><span class="line">                <span class="comment">// 大量的消息过来，容易阻塞 oom</span></span><br><span class="line">                <span class="comment">// 不能做到线程通信</span></span><br><span class="line">                mHandler[<span class="number">0</span>].sendMessage(<span class="keyword">new</span> Message(<span class="string">&quot;david &quot;</span>));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="binder">binder</h2><h3 id="为什么使用binder">为什么使用binder</h3><p>Linux中的进程通信有哪些：<strong>管道</strong>，<strong>共享内存</strong>，<strong>Socket</strong>，<strong>File</strong></p><table><thead><tr><th></th><th>管道</th><th>binder</th><th>socket</th><th>共享内存</th></tr></thead><tbody><tr><td>效率</td><td>不高</td><td></td><td>不高</td><td>最高</td></tr><tr><td>安全</td><td>安全</td><td></td><td>安全</td><td>不安全</td></tr><tr><td>模型</td><td>一对一</td><td></td><td></td><td>N对N</td></tr></tbody></table><ol start="2"><li>什么是用户空间，什么是内核空间<br>应用程序运行在用户空间。两者不能简单地使用指针传递数据，<br>因为Linux使用的虚拟内存机制，用户空间的数据可能被换出，<br>当内核空间使用用户空间指针时，对应的数据可能不在内存中。用户空间的内存映射采用段页式</li></ol><h2 id="Framework">Framework</h2><h3 id="如何编译Android源码">如何编译Android源码</h3><ol><li>运行下面的脚本</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. build/envsetup.sh</span><br></pre></td></tr></table></figure><ol start="2"><li>lunch，选择6 aosp_x86_64</li><li>make ANDROID_COMPILE_WITH_JACK=false</li><li>执行emulator就可以出现安卓模拟器</li></ol><h3 id="哪些代码是运行在App进程的">哪些代码是运行在App进程的</h3><p>​一般Android SDK里面的代码都是运行在我们APP进程的，一般SDK里面是android.jar。其实也就是我们编译出的framwork.jar，因为我们app需要依赖sdk才可以编译通过，说明各个app肯定会使用sdk中的代码，这个块代码属于所有app共用，故修改其中一个类就会影响所有的应用进程。</p><p>​一般com.android.server.*相关的类都是运行在system_server，这一部分代码平时是接触不太到的，因为普通应用根本无法引入相关的server代码，因为这些代码属于system_server特殊应用自己的代码，普通应用只能通过跨进程通信的方式与其通信获取相关数据及接受控制，一般java代码对应的是services.jar。</p><h3 id="framework的编译产物">framework的编译产物</h3><p>在<code>/out/target/product/generic_x86_64/system/framework</code>该路径下，我们可以找到下面的jar包</p><ul><li>framework-res.apk：安卓系统资源库</li><li>framework.jar：android的sdk中核心代码</li><li>services.jar：框架层服务端的编译后jar包</li></ul><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Cframework-jar%E5%8C%85.png" alt=""></p><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Capp-system_server.png" alt=""></p><h3 id="Activity的启动">Activity的启动</h3><p>我们应该如何分析framework层代码的调用链呢，我们可以采用日志分析法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Log.i(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;onCreate&quot;</span>, <span class="keyword">new</span> Exception());</span><br></pre></td></tr></table></figure><p>在<code>/frameworks/base/core/java/android/app</code>路径下，我们可以找到<code>Activity.java</code>文件，我们在该类的<code>onCreate</code>方法中第一行打印上面的日志。</p><p>然后我们编译后，在命令行输入下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logcat | grep test</span><br></pre></td></tr></table></figure><p>随便点一个app，就会出现下面的日志：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">02-01 22:05:53.256  2169  2169 I test    : java.lang.Exception</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.Activity.onCreate(Activity.java:990)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.support.v4.app.SupportActivity.onCreate(SupportActivity.java:66)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.support.v4.app.FragmentActivity.onCreate(FragmentActivity.java:290)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:84)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at com.android.contacts.activities.AppCompatTransactionSafeActivity.onCreate(AppCompatTransactionSafeActivity.java:33)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at com.android.contacts.AppCompatContactsActivity.onCreate(AppCompatContactsActivity.java:81)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at com.android.contacts.activities.PeopleActivity.onCreate(PeopleActivity.java:352)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.Activity.performCreate(Activity.java:7000)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.Activity.performCreate(Activity.java:6991)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1214)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2731)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2856)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.ActivityThread.access$1300(ActivityThread.java:176)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.os.Handler.dispatchMessage(Handler.java:106)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.os.Looper.loop(Looper.java:164)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at android.app.ActivityThread.main(ActivityThread.java:6494)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)</span><br><span class="line">02-01 22:05:53.256  2169  2169 I test    :      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)</span><br></pre></td></tr></table></figure><p>我们从<code>ActivityThread</code>类的<code>handleLaunchActivity</code>入手进行分析：</p><p>分析后可以知道，在ActivityThread中，<code>handleLaunchActivity</code>方法调用了<code>performLaunchActivity</code>方法。而在<code>performLaunchActivity</code>方法中，调用了<code>Instrumentation</code>类的<code>callActivityOnCreate</code>方法。而在<code>callActivityOnCreate</code>方法中就会调用到<code>activity</code>的<code>performCreate</code>方法。</p><p>那么是谁调用了<code>handleLaunchActivity</code>方法？</p><p>我们重新查看<code>ActivityThread</code>类，在<code>ActivityThread</code>类中的<code>handleMessage</code>方法中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">case LAUNCH_ACTIVITY: &#123;</span><br><span class="line">Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, &quot;activityStart&quot;);</span><br><span class="line">final ActivityClientRecord r = (ActivityClientRecord) msg.obj;</span><br><span class="line"></span><br><span class="line">r.packageInfo = getPackageInfoNoCheck(</span><br><span class="line">r.activityInfo.applicationInfo, r.compatInfo);</span><br><span class="line">handleLaunchActivity(r, null, &quot;LAUNCH_ACTIVITY&quot;);</span><br><span class="line">Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);</span><br><span class="line">&#125; break;</span><br></pre></td></tr></table></figure><p>然后再根据<code>LAUNCH_ACTIVITY</code>定位，可以找到<code>scheduleLaunchActivity</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">scheduleLaunchActivity</span><span class="params">(Intent intent, IBinder token, <span class="keyword">int</span> ident,</span></span></span><br><span class="line"><span class="params"><span class="function">                ActivityInfo info, Configuration curConfig, Configuration overrideConfig,</span></span></span><br><span class="line"><span class="params"><span class="function">                CompatibilityInfo compatInfo, String referrer, IVoiceInteractor voiceInteractor,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">int</span> procState, Bundle state, PersistableBundle persistentState,</span></span></span><br><span class="line"><span class="params"><span class="function">                List&lt;ResultInfo&gt; pendingResults, List&lt;ReferrerIntent&gt; pendingNewIntents,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">boolean</span> notResumed, <span class="keyword">boolean</span> isForward, ProfilerInfo profilerInfo)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            updateProcessState(procState, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            ActivityClientRecord r = <span class="keyword">new</span> ActivityClientRecord();</span><br><span class="line"></span><br><span class="line">            r.token = token;</span><br><span class="line">            r.ident = ident;</span><br><span class="line">            r.intent = intent;</span><br><span class="line">            r.referrer = referrer;</span><br><span class="line">            r.voiceInteractor = voiceInteractor;</span><br><span class="line">            r.activityInfo = info;</span><br><span class="line">            r.compatInfo = compatInfo;</span><br><span class="line">            r.state = state;</span><br><span class="line">            r.persistentState = persistentState;</span><br><span class="line"></span><br><span class="line">            r.pendingResults = pendingResults;</span><br><span class="line">            r.pendingIntents = pendingNewIntents;</span><br><span class="line"></span><br><span class="line">            r.startsNotResumed = notResumed;</span><br><span class="line">            r.isForward = isForward;</span><br><span class="line"></span><br><span class="line">            r.profilerInfo = profilerInfo;</span><br><span class="line"></span><br><span class="line">            r.overrideConfig = overrideConfig;</span><br><span class="line">            updatePendingConfiguration(curConfig);</span><br><span class="line"></span><br><span class="line">            sendMessage(H.LAUNCH_ACTIVITY, r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>scheduleLaunchActivity</code>方法中发送了<code>LAUNCH_ACTIVITY</code>消息，我们查找该方法发现，该方法是继承了<code>IApplicationThread.Stub</code>的内部类<code>ApplicationThread</code>中的方法，因此，有可能是通过跨进程通讯调用的该方法。</p><p>我们在<code>sendMessage</code>前加上一段log</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.util.Log.d(<span class="string">&quot;test1&quot;</span>, <span class="string">&quot;scheduleLaunchActivity&quot;</span>, <span class="keyword">new</span> Exception());</span><br></pre></td></tr></table></figure><p>运行后可以发现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">02-24 16:58:49.933  2509  2522 D test1   :      at android.app.ActivityThread$ApplicationThread.scheduleLaunchActivity(ActivityThread.java:787)</span><br><span class="line">02-24 16:58:49.933  2509  2522 D test1   :      at android.app.IApplicationThread$Stub.onTransact(IApplicationThread.java:196)</span><br><span class="line">02-24 16:58:49.933  2509  2522 D test1   :      at android.os.Binder.execTransact(Binder.java:697)</span><br></pre></td></tr></table></figure><p>但是，在堆栈上我们并不能找到是谁跨进程调用了<code>scheduleLaunchActivity</code>方法，我们可以在全局搜索是谁调用了<code>scheduleLaunchActivity</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;\.scheduleLaunchActivity&quot; ./ -rn</span><br></pre></td></tr></table></figure><p>我们可以得到以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./services/core/java/com/android/server/am/ActivityStackSupervisor.java:1457:                app.thread.scheduleLaunchActivity(new Intent(r.intent), r.appToken,</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.thread.scheduleLaunchActivity(<span class="keyword">new</span> Intent(r.intent), r.appToken,</span><br><span class="line">                        System.identityHashCode(r), r.info,</span><br><span class="line">                        <span class="comment">// <span class="doctag">TODO:</span> Have this take the merged configuration instead of separate global</span></span><br><span class="line">                        <span class="comment">// and override configs.</span></span><br><span class="line">                        mergedConfiguration.getGlobalConfiguration(),</span><br><span class="line">                        mergedConfiguration.getOverrideConfiguration(), r.compat,</span><br><span class="line">                        r.launchedFromPackage, task.voiceInteractor, app.repProcState, r.icicle,</span><br><span class="line">                        r.persistentState, results, newIntents, !andResume,</span><br><span class="line">                        mService.isNextTransitionForward(), profilerInfo);</span><br></pre></td></tr></table></figure><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5CApp%E8%BF%9B%E7%A8%8B%E6%B6%89%E5%8F%8A%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3%E8%BF%9B%E7%A8%8B.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">######联系人进程调用startActivity，会最后调用AMS的startActivity</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : client execStartActivity</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : java.lang.Exception</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.Instrumentation.execStartActivity(Instrumentation.java:1611)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.Activity.startActivityForResult(Activity.java:4493)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.support.v4.app.BaseFragmentActivityApi16.startActivityForResult(BaseFragmentActivityApi16.java:54)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.support.v4.app.FragmentActivity.startActivityForResult(Unknown Source:0)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.Activity.startActivityForResult(Activity.java:4451)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.support.v4.app.FragmentActivity.startActivityForResult(FragmentActivity.java:725)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.Activity.startActivity(Activity.java:4812)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.Activity.startActivity(Activity.java:4780)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at com.android.contacts.util.ImplicitIntentsUtil.startActivityInApp(ImplicitIntentsUtil.java:82)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at com.android.contacts.util.AccountFilterUtil.startEditorIntent(AccountFilterUtil.java:205)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at com.android.contacts.activities.PeopleActivity$5.onClick(PeopleActivity.java:542)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.view.View.performClick(View.java:6294)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.view.View$PerformClick.run(View.java:24770)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.os.Handler.handleCallback(Handler.java:790)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.os.Handler.dispatchMessage(Handler.java:99)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.os.Looper.loop(Looper.java:164)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at android.app.ActivityThread.main(ActivityThread.java:6494)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)</span><br><span class="line">07-18 16:56:49.770  2590  2590 I test1   : at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)</span><br><span class="line"></span><br><span class="line">##########System_server进程的AMS startActivity 打印，从方法堆栈在可以看出属于binder驱动调用，肯定无法看到联系人进程的堆栈</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : system_server startActivity callingPackage == com.android.contacts</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : java.lang.Exception</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : at com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:4519)</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : at android.app.IActivityManager$Stub.onTransact(IActivityManager.java:121)</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2919)</span><br><span class="line">07-18 16:56:49.774  1522  1533 I test1   : at android.os.Binder.execTransact(Binder.java:697)</span><br><span class="line"></span><br><span class="line">##########System_server进程的AMS一切处理完毕，需要通知联系人进程拉起新的Activity</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : system_server app.thread.scheduleLaunchActivity</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : java.lang.Exception</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStackSupervisor.realStartActivityLocked(ActivityStackSupervisor.java:1457)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStackSupervisor.startSpecificActivityLocked(ActivityStackSupervisor.java:1580)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStack.resumeTopActivityInnerLocked(ActivityStack.java:2726)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStack.resumeTopActivityUncheckedLocked(ActivityStack.java:2255)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStackSupervisor.resumeFocusedStackTopActivityLocked(ActivityStackSupervisor.java:2094)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStack.completePauseLocked(ActivityStack.java:1486)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityStack.activityPausedLocked(ActivityStack.java:1413)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityManagerService.activityPaused(ActivityManagerService.java:7442)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at android.app.IActivityManager$Stub.onTransact(IActivityManager.java:317)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2919)</span><br><span class="line">07-18 16:56:49.779  1522  1533 I test1   : at android.os.Binder.execTransact(Binder.java:697)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##########通过binder通信调用到了联系人进程的scheduleLaunchActivity方法</span><br><span class="line">07-18 16:56:49.800  2590  2703 D test1   : scheduleLaunchActivity</span><br><span class="line">07-18 16:56:49.800  2590  2703 D test1   : java.lang.Exception</span><br><span class="line">07-18 16:56:49.800  2590  2703 D test1   : at android.app.ActivityThread$ApplicationThread.scheduleLaunchActivity(ActivityThread.java:787)</span><br><span class="line">07-18 16:56:49.800  2590  2703 D test1   : at android.app.IApplicationThread$Stub.onTransact(IApplicationThread.java:196)</span><br><span class="line">07-18 16:56:49.800  2590  2703 D test1   : at android.os.Binder.execTransact(Binder.java:697)</span><br><span class="line"></span><br><span class="line">##########联系人应用的主线程调用Activity的onCreate方法</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : Activity onCreate</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : java.lang.Exception</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.Activity.onCreate(Activity.java:995)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.support.v4.app.SupportActivity.onCreate(SupportActivity.java:66)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.support.v4.app.FragmentActivity.onCreate(FragmentActivity.java:290)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:84)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at com.android.contacts.activities.AppCompatTransactionSafeActivity.onCreate(AppCompatTransactionSafeActivity.java:33)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at com.android.contacts.AppCompatContactsActivity.onCreate(AppCompatContactsActivity.java:81)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at com.android.contacts.activities.ContactEditorActivity.onCreate(ContactEditorActivity.java:315)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.Activity.performCreate(Activity.java:7005)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.Activity.performCreate(Activity.java:6996)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1214)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2731)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2856)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.ActivityThread.-wrap11(Unknown Source:0)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.os.Handler.dispatchMessage(Handler.java:106)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.os.Looper.loop(Looper.java:164)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at android.app.ActivityThread.main(ActivityThread.java:6494)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)</span><br><span class="line">07-18 16:56:49.808  2590  2590 I test1   : at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)</span><br></pre></td></tr></table></figure><h3 id="实战开发-去除广告页">[实战开发]去除广告页</h3><p>先开发一个倒计时跳转的app：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView = findViewById(R.id.tv_countdown);</span><br><span class="line">        <span class="keyword">new</span> CountDownTimer(<span class="number">10000</span>, <span class="number">1000</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTick</span><span class="params">(<span class="keyword">long</span> millisUntilFinished)</span> </span>&#123;</span><br><span class="line">                textView.setText(<span class="string">&quot;倒计时&quot;</span> + millisUntilFinished / <span class="number">1000</span> + <span class="string">&quot;秒&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, MainActivity2.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设倒计时页面是我们删除的广告页面：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity activities</span><br></pre></td></tr></table></figure><p>可以过滤一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dumpsys activity activities | grep &quot;Resumed&quot;</span><br></pre></td></tr></table></figure><p>可以得到广告页的Activity如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mResumedActivity: ActivityRecord&#123;fcb6ec3 u0 com.example.basic/.MainActivity t27&#125;</span><br><span class="line">ResumedActivity: ActivityRecord&#123;fcb6ec3 u0 com.example.basic/.MainActivity t27&#125;</span><br></pre></td></tr></table></figure><p>而我们可以找到主页的Activity如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mResumedActivity: ActivityRecord&#123;5ace1d u0 com.example.basic/.MainActivity2 t28&#125;</span><br><span class="line">ResumedActivity: ActivityRecord&#123;5ace1d u0 com.example.basic/.MainActivity2 t28&#125;</span><br></pre></td></tr></table></figure><p>dumpsys发现广告页面和主页面不是一个Activity，广告页面是第一个启动页面，然后会跳转到主页面。</p><p>故可以想到下面的去除广告页面的方式：</p><p>应用层 -&gt; 应用框架 -&gt; system_service顺序</p><ol><li>应用层：即启动广告页面的是Launcher这个应用，故是否可以考虑Launcher中修改。</li></ol><p>但是这里有一下两个问题：</p><ol><li><p>启动应用不一定在Launcher，在其他应用商店都是可以的</p></li><li><p>Launcher有可能装第三方的</p></li><li><p>应用框架：</p></li></ol><p>基本可以覆盖所有情况</p><p>优点：简单快捷，可以较快实现功能。</p><p>缺点：有可能破坏一些应用的初始化时序，故可能该方案不能针对所有带广告应用。</p><ol start="3"><li>发现广告页面一般会有一个触摸点击跳过</li></ol><p>优点：最大限度保证广告自身逻辑</p><p>缺点：还是可以看到短暂广告，而且每个应用不一定都有跳过，而且跳过按钮可能不一定位置一样，导致无法满足覆盖所有应用，需要一个一个适配。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ComponentName inject = new ComponentName(&quot;com.example.basic&quot;, &quot;com.example.basic.MainActivity&quot;);</span><br><span class="line">ComponentName destComponent = new ComponentName(&quot;com.example.basic&quot;,&quot;com.example.basic.MainActivity2&quot;);</span><br><span class="line">android.util.Log.i(&quot;test2&quot;, &quot;startActivityForResult getComponent = &quot; + intent.getComponent());</span><br><span class="line">if (intent.getComponent() != null &amp;&amp; intent.getComponent().equals(inject))&#123;</span><br><span class="line">intent.setComponent(destComponent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们还可以在Activity.java的dispatchTouchEvent方法中模拟ACTION_DOWN和ACTION_UP操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">injectClick</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        MotionEvent downMotion = MotionEvent.obtain(android.os.SystemClock.uptimeMillis(), android.os.SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, x, y, <span class="number">0</span>);</span><br><span class="line">        dispatchTouchEvent(downMotion);</span><br><span class="line">        MotionEvent upMotion = MotionEvent.obtain(android.os.SystemClock.uptimeMillis(), android.os.SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, x, y, <span class="number">0</span>);</span><br><span class="line">        mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                                 <span class="meta">@Override</span></span><br><span class="line">                                 <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                     dispatchTouchEvent(upMotion);</span><br><span class="line">                                 &#125;</span><br><span class="line">                             &#125;,<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后在Activity的onResume方法中添加下面的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ComponentName srcCom = <span class="keyword">new</span> ComponentName(<span class="string">&quot;com.example.basic&quot;</span>, <span class="string">&quot;com.example.basic.MainActivity&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (srcCom.equals(getComponentName())) &#123;</span><br><span class="line">    mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            injectClick(<span class="number">420</span>, <span class="number">52</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何将编译的系统放到Windows下执行">如何将编译的系统放到Windows下执行</h3><p>首先，我们需要知道编译的产物的路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/tanghaoyu/aosp/android-8.1.0_r1/out/target/product/generic_x86_64</span><br></pre></td></tr></table></figure><p>我们需要拷出下面的几个文件</p><ul><li>encryptionkey</li><li>kernel-ranchu</li><li>ramdisk.img</li><li>system-qemu.img</li><li>userdata.img</li><li>vendor-qemu.img</li></ul><p>利用Android Studio可以下载pixel的avd在下面的路径下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Admin\.android\avd\MyPhone.avd</span><br></pre></td></tr></table></figure><p>而下载的系统在下面的路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Admin\AppData\Local\Android\Sdk\system-images\android-27\default\x86_64</span><br></pre></td></tr></table></figure><h3 id="Android系统内置应用">Android系统内置应用</h3><p>系统定制的时候，经常会有遇到客户或者自己，想要集成某一个APP，但是又不想提供源码，只给APK。而且要做成不可卸载的app。</p><p>要将app做成系统app，需要以下三个步骤：</p><ul><li>在package/apps/目录下创建相应的文件夹如：MyAPP</li><li>在build/make/target/product/core.mk加入该Module名字</li><li>再进行整体的make就可以</li></ul><p>/packages/apps下存放着很多系统应用。</p><p>实战</p><p>Android系统内置APK作为系统应用分为两种情况：</p><ul><li><p>不带任何SO的应用</p></li><li><p>带有SO的应用</p></li><li><p>在/packages/apps放入Android.mk和MyApp.apk两个文件：</p></li></ul><p>其中Android.mk文件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_PATH:= $(call my-dir)</span><br><span class="line"></span><br><span class="line">include $(CLEAR_VARS)</span><br><span class="line">$(warning &quot;MyApp of LOCAL_PATH is $(LOCAL_PATH)&quot;)#打印输出</span><br><span class="line"># Module name should match apk name to be installed</span><br><span class="line">LOCAL_MODULE := MyApp</span><br><span class="line">LOCAL_MODULE_TAGS := optional </span><br><span class="line">#不管是user 还是eng 版本都会编译此app</span><br><span class="line">LOCAL_SRC_FILES := $(LOCAL_MODULE).apk</span><br><span class="line">LOCAL_MODULE_CLASS := APPS</span><br><span class="line">LOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)</span><br><span class="line">LOCAL_CERTIFICATE := PRESIGNED</span><br><span class="line">include $(BUILD_PREBUILT)</span><br></pre></td></tr></table></figure><h3 id="安卓开机动画">安卓开机动画</h3><h4 id="安卓开机动画开始源码分析">安卓开机动画开始源码分析</h4><p>请问大家在Android系统中要展示一个页面，不使用view方式还有没有其他方式</p><p>Android开机动画实现方式目前实现Android开机动画的方式主要是逐帧动画和OpenGL直接编程绘制动画。</p><p>逐帧动画：</p><p>逐帧动画是一种常见的动画形式，其原理是在&quot;连续的关键帧&quot;中分解动画动作。</p><p>逐帧动画实现原理是将一系列图片打包成bootanimation.zip放入/system/media/目录，系统将图片一帧一帧循环播放成一个动画。但是当bootanimation.zip大小大于5M的时候，动画将存在明显卡顿。文件越大动画越不流畅。</p><p>OpenGL动画</p><p>OpenGL是个定义了一个跨编程语言，跨平台的应用程序接口（API）的规范，它用于生成二维、三维图像。这个接口由近三百五十个不同的函数调用组成。</p><p>代码路径介绍：</p><p>与开机动画有关的主要有以下三个类：</p><p>bootanimation/frameworks/base/cmds/bootanimation/</p><p>surfaceflinger /frameworks/native/services/surfaceflinger</p><p>init/system/core/init</p><p>首先，我们进入到bootanimation文件夹下，查找Android.mk文件可以找到下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_MODULE:= bootanimation</span><br></pre></td></tr></table></figure><p>那么我们可以去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/tanghaoyu/aosp/android-8.1.0_r1/out/target/product/generic_x86_64/system/bin</span><br></pre></td></tr></table></figure><p>找到bootanimation</p><p>启动流程详细分析：</p><p>内核起来后会启动第一个进程，即init进程。</p><p>init进程不会根据init.rc配置启动bootanimation进程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service bootanim /system/bin/bootanimation</span><br><span class="line">    class core animation</span><br><span class="line">    user graphics</span><br><span class="line">    group graphics audio</span><br><span class="line">    disabled // init.rc启动不会被拉起</span><br><span class="line">    oneshot</span><br><span class="line">    writepid /dev/stune/top-app/tasks</span><br></pre></td></tr></table></figure><p>而surfaceflinger则会启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">service surfaceflinger /system/bin/surfaceflinger</span><br><span class="line">    class core animation</span><br><span class="line">    user system</span><br><span class="line">    group graphics drmrpc readproc</span><br><span class="line">    onrestart restart zygote</span><br><span class="line">    writepid /dev/stune/foreground/tasks</span><br><span class="line">    socket pdx/system/vr/display/client     stream 0666 system graphics u:object_r:pdx_display_client_endpoint_socket:s0</span><br><span class="line">    socket pdx/system/vr/display/manager    stream 0666 system graphics u:object_r:pdx_display_manager_endpoint_socket:s0</span><br><span class="line">    socket pdx/system/vr/display/vsync      stream 0666 system graphics u:object_r:pdx_display_vsync_endpoint_socket:s0</span><br></pre></td></tr></table></figure><p>当surfaceflinger启动后，就会跟着跑进程的main函数：</p><p>main函数在如下文件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/frameworks/native/services/surfaceflinger/main_surfaceflinger.cpp</span><br></pre></td></tr></table></figure><p>源码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">char</span>**)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// instantiate surfaceflinger</span></span><br><span class="line">    sp&lt;SurfaceFlinger&gt; flinger = <span class="keyword">new</span> <span class="built_in">SurfaceFlinger</span>();</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// initialize before clients can connect</span></span><br><span class="line">    flinger-&gt;<span class="built_in">init</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// publish surface flinger</span></span><br><span class="line">    <span class="function">sp&lt;IServiceManager&gt; <span class="title">sm</span><span class="params">(defaultServiceManager())</span></span>;</span><br><span class="line">    sm-&gt;<span class="built_in">addService</span>(<span class="built_in">String16</span>(SurfaceFlinger::<span class="built_in">getServiceName</span>()), flinger, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// publish GpuService</span></span><br><span class="line">    sp&lt;GpuService&gt; gpuservice = <span class="keyword">new</span> <span class="built_in">GpuService</span>();</span><br><span class="line">    sm-&gt;<span class="built_in">addService</span>(<span class="built_in">String16</span>(GpuService::SERVICE_NAME), gpuservice, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// run surface flinger in this thread</span></span><br><span class="line">    flinger-&gt;<span class="built_in">run</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现，在该函数中，首先new一个SurfaceFlinger实例，然后init，然后run。</p><p>而我们可以继续跟踪SurfaceFlinger中的init方法：</p><p>代码路径位于下面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/frameworks/native/services/surfaceflinger/SurfaceFlinger.cpp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">void SurfaceFlinger::init() &#123;</span><br><span class="line">    ALOGI(  &quot;SurfaceFlinger&#x27;s main thread ready to run. &quot;</span><br><span class="line">            &quot;Initializing graphics H/W...&quot;);</span><br><span class="line"></span><br><span class="line">    ALOGI(&quot;Phase offest NS: %&quot; PRId64 &quot;&quot;, vsyncPhaseOffsetNs);</span><br><span class="line"></span><br><span class="line">    Mutex::Autolock _l(mStateLock);</span><br><span class="line"></span><br><span class="line">    // initialize EGL for the default display</span><br><span class="line">    mEGLDisplay = eglGetDisplay(EGL_DEFAULT_DISPLAY);</span><br><span class="line">    eglInitialize(mEGLDisplay, NULL, NULL);</span><br><span class="line"></span><br><span class="line">    // start the EventThread</span><br><span class="line">    sp&lt;VSyncSource&gt; vsyncSrc = new DispSyncSource(&amp;mPrimaryDispSync,</span><br><span class="line">            vsyncPhaseOffsetNs, true, &quot;app&quot;);</span><br><span class="line">    mEventThread = new EventThread(vsyncSrc, *this, false);</span><br><span class="line">    sp&lt;VSyncSource&gt; sfVsyncSrc = new DispSyncSource(&amp;mPrimaryDispSync,</span><br><span class="line">            sfVsyncPhaseOffsetNs, true, &quot;sf&quot;);</span><br><span class="line">    mSFEventThread = new EventThread(sfVsyncSrc, *this, true);</span><br><span class="line">    mEventQueue.setEventThread(mSFEventThread);</span><br><span class="line"></span><br><span class="line">    // set EventThread and SFEventThread to SCHED_FIFO to minimize jitter</span><br><span class="line">    struct sched_param param = &#123;0&#125;;</span><br><span class="line">    param.sched_priority = 2;</span><br><span class="line">    if (sched_setscheduler(mSFEventThread-&gt;getTid(), SCHED_FIFO, &amp;param) != 0) &#123;</span><br><span class="line">        ALOGE(&quot;Couldn&#x27;t set SCHED_FIFO for SFEventThread&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (sched_setscheduler(mEventThread-&gt;getTid(), SCHED_FIFO, &amp;param) != 0) &#123;</span><br><span class="line">        ALOGE(&quot;Couldn&#x27;t set SCHED_FIFO for EventThread&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Get a RenderEngine for the given display / config (can&#x27;t fail)</span><br><span class="line">    mRenderEngine = RenderEngine::create(mEGLDisplay,</span><br><span class="line">            HAL_PIXEL_FORMAT_RGBA_8888,</span><br><span class="line">            hasWideColorDisplay ? RenderEngine::WIDE_COLOR_SUPPORT : 0);</span><br><span class="line"></span><br><span class="line">    // retrieve the EGL context that was selected/created</span><br><span class="line">    mEGLContext = mRenderEngine-&gt;getEGLContext();</span><br><span class="line"></span><br><span class="line">    LOG_ALWAYS_FATAL_IF(mEGLContext == EGL_NO_CONTEXT,</span><br><span class="line">            &quot;couldn&#x27;t create EGLContext&quot;);</span><br><span class="line"></span><br><span class="line">    LOG_ALWAYS_FATAL_IF(mVrFlingerRequestsDisplay,</span><br><span class="line">            &quot;Starting with vr flinger active is not currently supported.&quot;);</span><br><span class="line">    mHwc.reset(new HWComposer(false));</span><br><span class="line">    mHwc-&gt;registerCallback(this, mComposerSequenceId);</span><br><span class="line"></span><br><span class="line">    if (useVrFlinger) &#123;</span><br><span class="line">        auto vrFlingerRequestDisplayCallback = [this] (bool requestDisplay) &#123;</span><br><span class="line">            // This callback is called from the vr flinger dispatch thread. We</span><br><span class="line">            // need to call signalTransaction(), which requires holding</span><br><span class="line">            // mStateLock when we&#x27;re not on the main thread. Acquiring</span><br><span class="line">            // mStateLock from the vr flinger dispatch thread might trigger a</span><br><span class="line">            // deadlock in surface flinger (see b/66916578), so post a message</span><br><span class="line">            // to be handled on the main thread instead.</span><br><span class="line">            sp&lt;LambdaMessage&gt; message = new LambdaMessage([=]() &#123;</span><br><span class="line">                ALOGI(&quot;VR request display mode: requestDisplay=%d&quot;, requestDisplay);</span><br><span class="line">                mVrFlingerRequestsDisplay = requestDisplay;</span><br><span class="line">                signalTransaction();</span><br><span class="line">            &#125;);</span><br><span class="line">            postMessageAsync(message);</span><br><span class="line">        &#125;;</span><br><span class="line">        mVrFlinger = dvr::VrFlinger::Create(mHwc-&gt;getComposer(),</span><br><span class="line">                                            vrFlingerRequestDisplayCallback);</span><br><span class="line">        if (!mVrFlinger) &#123;</span><br><span class="line">            ALOGE(&quot;Failed to start vrflinger&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mEventControlThread = new EventControlThread(this);</span><br><span class="line">    mEventControlThread-&gt;run(&quot;EventControl&quot;, PRIORITY_URGENT_DISPLAY);</span><br><span class="line"></span><br><span class="line">    // initialize our drawing state</span><br><span class="line">    mDrawingState = mCurrentState;</span><br><span class="line"></span><br><span class="line">    // set initial conditions (e.g. unblank default device)</span><br><span class="line">    initializeDisplays();</span><br><span class="line"></span><br><span class="line">    mRenderEngine-&gt;primeCache();</span><br><span class="line"></span><br><span class="line">    // Inform native graphics APIs whether the present timestamp is supported:</span><br><span class="line">    if (getHwComposer().hasCapability(</span><br><span class="line">            HWC2::Capability::PresentFenceIsNotReliable)) &#123;</span><br><span class="line">        mStartPropertySetThread = new StartPropertySetThread(false);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        mStartPropertySetThread = new StartPropertySetThread(true);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (mStartPropertySetThread-&gt;Start() != NO_ERROR) &#123; // 真正启动设置bootanimation的属性线程</span><br><span class="line">        ALOGE(&quot;Run StartPropertySetThread failed!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ALOGV(&quot;Done initializing&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现启动了一个线程名为mStartPropertySetThread的start方法，我们进入StartPropertySetThread线程中查找start方法：</p><p>初始化graphics之后，mStartPropertySetThread()播放开机动画。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">status_t StartPropertySetThread::Start() &#123;</span><br><span class="line">    return run(&quot;SurfaceFlinger::StartPropertySetThread&quot;, PRIORITY_NORMAL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool StartPropertySetThread::threadLoop() &#123;</span><br><span class="line">    // Set property service.sf.present_timestamp, consumer need check its readiness</span><br><span class="line">    property_set(kTimestampProperty, mTimestampPropertyValue ? &quot;1&quot; : &quot;0&quot;);</span><br><span class="line">    // Clear BootAnimation exit flag</span><br><span class="line">    property_set(&quot;service.bootanim.exit&quot;, &quot;0&quot;); // 关键属性</span><br><span class="line">    // Start BootAnimation if not started</span><br><span class="line">    property_set(&quot;ctl.start&quot;, &quot;bootanim&quot;); // 关键属性</span><br><span class="line">    // Exit immediately</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么为什么设置了属性就可以启动bootanim进程，那么我们下面来看，/system/core/init/init.cpp，再看init进程的init.cpp的main函数中：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">start_property_service</span>();</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现main函数中执行了start_property_service函数，在/system/core/init/property_service.cpp：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start_property_service</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">property_set</span>(<span class="string">&quot;ro.property_service.version&quot;</span>, <span class="string">&quot;2&quot;</span>);</span><br><span class="line"></span><br><span class="line">    property_set_fd = <span class="built_in">CreateSocket</span>(PROP_SERVICE_NAME, SOCK_STREAM | SOCK_CLOEXEC | SOCK_NONBLOCK,</span><br><span class="line">                                   <span class="literal">false</span>, <span class="number">0666</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">nullptr</span>, sehandle);</span><br><span class="line">    <span class="keyword">if</span> (property_set_fd == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">PLOG</span>(ERROR) &lt;&lt; <span class="string">&quot;start_property_service socket creation failed&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">listen</span>(property_set_fd, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">register_epoll_handler</span>(property_set_fd, handle_property_set_fd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个函数中注册了一个epoll handle的机制register_epoll_handler</p><p>init进程会使用epoll机制来轮询事件，当触发该事件后，会回调handle_property_set_fd方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">static void handle_property_set_fd() &#123;</span><br><span class="line">    static constexpr uint32_t kDefaultSocketTimeout = 2000; /* ms */</span><br><span class="line"></span><br><span class="line">    int s = accept4(property_set_fd, nullptr, nullptr, SOCK_CLOEXEC);</span><br><span class="line">    if (s == -1) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    struct ucred cr;</span><br><span class="line">    socklen_t cr_size = sizeof(cr);</span><br><span class="line">    if (getsockopt(s, SOL_SOCKET, SO_PEERCRED, &amp;cr, &amp;cr_size) &lt; 0) &#123;</span><br><span class="line">        close(s);</span><br><span class="line">        PLOG(ERROR) &lt;&lt; &quot;sys_prop: unable to get SO_PEERCRED&quot;;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SocketConnection socket(s, cr);</span><br><span class="line">    uint32_t timeout_ms = kDefaultSocketTimeout;</span><br><span class="line"></span><br><span class="line">    uint32_t cmd = 0;</span><br><span class="line">    if (!socket.RecvUint32(&amp;cmd, &amp;timeout_ms)) &#123;</span><br><span class="line">        PLOG(ERROR) &lt;&lt; &quot;sys_prop: error while reading command from the socket&quot;;</span><br><span class="line">        socket.SendUint32(PROP_ERROR_READ_CMD);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    switch (cmd) &#123;</span><br><span class="line">    case PROP_MSG_SETPROP: &#123;</span><br><span class="line">        char prop_name[PROP_NAME_MAX];</span><br><span class="line">        char prop_value[PROP_VALUE_MAX];</span><br><span class="line"></span><br><span class="line">        if (!socket.RecvChars(prop_name, PROP_NAME_MAX, &amp;timeout_ms) ||</span><br><span class="line">            !socket.RecvChars(prop_value, PROP_VALUE_MAX, &amp;timeout_ms)) &#123;</span><br><span class="line">          PLOG(ERROR) &lt;&lt; &quot;sys_prop(PROP_MSG_SETPROP): error while reading name/value from the socket&quot;;</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prop_name[PROP_NAME_MAX-1] = 0;</span><br><span class="line">        prop_value[PROP_VALUE_MAX-1] = 0;</span><br><span class="line"></span><br><span class="line">        handle_property_set(socket, prop_value, prop_value, true);</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    case PROP_MSG_SETPROP2: &#123;</span><br><span class="line">        std::string name;</span><br><span class="line">        std::string value;</span><br><span class="line">        if (!socket.RecvString(&amp;name, &amp;timeout_ms) ||</span><br><span class="line">            !socket.RecvString(&amp;value, &amp;timeout_ms)) &#123;</span><br><span class="line">          PLOG(ERROR) &lt;&lt; &quot;sys_prop(PROP_MSG_SETPROP2): error while reading name/value from the socket&quot;;</span><br><span class="line">          socket.SendUint32(PROP_ERROR_READ_DATA);</span><br><span class="line">          return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        handle_property_set(socket, name, value, false);</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    default:</span><br><span class="line">        LOG(ERROR) &lt;&lt; &quot;sys_prop: invalid command &quot; &lt;&lt; cmd;</span><br><span class="line">        socket.SendUint32(PROP_ERROR_INVALID_CMD);</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而上面的方法会调用handle_property_set：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">static void handle_property_set(SocketConnection&amp; socket,</span><br><span class="line">                                const std::string&amp; name,</span><br><span class="line">                                const std::string&amp; value,</span><br><span class="line">                                bool legacy_protocol) &#123;</span><br><span class="line">  const char* cmd_name = legacy_protocol ? &quot;PROP_MSG_SETPROP&quot; : &quot;PROP_MSG_SETPROP2&quot;;</span><br><span class="line">  if (!is_legal_property_name(name)) &#123;</span><br><span class="line">    LOG(ERROR) &lt;&lt; &quot;sys_prop(&quot; &lt;&lt; cmd_name &lt;&lt; &quot;): illegal property name \&quot;&quot; &lt;&lt; name &lt;&lt; &quot;\&quot;&quot;;</span><br><span class="line">    socket.SendUint32(PROP_ERROR_INVALID_NAME);</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  struct ucred cr = socket.cred();</span><br><span class="line">  char* source_ctx = nullptr;</span><br><span class="line">  getpeercon(socket.socket(), &amp;source_ctx);</span><br><span class="line"></span><br><span class="line">  if (android::base::StartsWith(name, &quot;ctl.&quot;)) &#123;</span><br><span class="line">    if (check_control_mac_perms(value.c_str(), source_ctx, &amp;cr)) &#123;</span><br><span class="line">      handle_control_message(name.c_str() + 4, value.c_str());</span><br><span class="line">      if (!legacy_protocol) &#123;</span><br><span class="line">        socket.SendUint32(PROP_SUCCESS);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      LOG(ERROR) &lt;&lt; &quot;sys_prop(&quot; &lt;&lt; cmd_name &lt;&lt; &quot;): Unable to &quot; &lt;&lt; (name.c_str() + 4)</span><br><span class="line">                 &lt;&lt; &quot; service ctl [&quot; &lt;&lt; value &lt;&lt; &quot;]&quot;</span><br><span class="line">                 &lt;&lt; &quot; uid:&quot; &lt;&lt; cr.uid</span><br><span class="line">                 &lt;&lt; &quot; gid:&quot; &lt;&lt; cr.gid</span><br><span class="line">                 &lt;&lt; &quot; pid:&quot; &lt;&lt; cr.pid;</span><br><span class="line">      if (!legacy_protocol) &#123;</span><br><span class="line">        socket.SendUint32(PROP_ERROR_HANDLE_CONTROL_MESSAGE);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    if (check_mac_perms(name, source_ctx, &amp;cr)) &#123;</span><br><span class="line">      uint32_t result = property_set(name, value);</span><br><span class="line">      if (!legacy_protocol) &#123;</span><br><span class="line">        socket.SendUint32(result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      LOG(ERROR) &lt;&lt; &quot;sys_prop(&quot; &lt;&lt; cmd_name &lt;&lt; &quot;): permission denied uid:&quot; &lt;&lt; cr.uid &lt;&lt; &quot; name:&quot; &lt;&lt; name;</span><br><span class="line">      if (!legacy_protocol) &#123;</span><br><span class="line">        socket.SendUint32(PROP_ERROR_PERMISSION_DENIED);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  freecon(source_ctx);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的方法调用了handle_control_message，该方法在system/core/init/init.cpp中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void handle_control_message(const std::string&amp; msg, const std::string&amp; name) &#123;</span><br><span class="line">    Service* svc = ServiceManager::GetInstance().FindServiceByName(name);</span><br><span class="line">    if (svc == nullptr) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; &quot;no such service &#x27;&quot; &lt;&lt; name &lt;&lt; &quot;&#x27;&quot;;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (msg == &quot;start&quot;) &#123;</span><br><span class="line">        svc-&gt;Start();</span><br><span class="line">    &#125; else if (msg == &quot;stop&quot;) &#123;</span><br><span class="line">        svc-&gt;Stop();</span><br><span class="line">    &#125; else if (msg == &quot;restart&quot;) &#123;</span><br><span class="line">        svc-&gt;Restart();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; &quot;unknown control msg &#x27;&quot; &lt;&lt; msg &lt;&lt; &quot;&#x27;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Cbootanimation%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B.png" alt=""></p><h4 id="开机动画的结束源码分析">开机动画的结束源码分析</h4><p>上节课，我们讲到bootanimation的main方法被执行，其中，main方法的代码位于<code>frameworks/base/cmds/bootanimation/bootanimation_main.cpp</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    setpriority(PRIO_PROCESS, 0, ANDROID_PRIORITY_DISPLAY);</span><br><span class="line"></span><br><span class="line">    bool noBootAnimation = bootAnimationDisabled();</span><br><span class="line">    ALOGI_IF(noBootAnimation,  &quot;boot animation disabled&quot;);</span><br><span class="line">    if (!noBootAnimation) &#123;</span><br><span class="line"></span><br><span class="line">        sp&lt;ProcessState&gt; proc(ProcessState::self());</span><br><span class="line">        ProcessState::self()-&gt;startThreadPool();</span><br><span class="line"></span><br><span class="line">        waitForSurfaceFlinger();</span><br><span class="line"></span><br><span class="line">        // create the boot animation object</span><br><span class="line">        sp&lt;BootAnimation&gt; boot = new BootAnimation(new AudioAnimationCallbacks());</span><br><span class="line">        ALOGV(&quot;Boot animation set up. Joining pool.&quot;);</span><br><span class="line"></span><br><span class="line">        IPCThreadState::self()-&gt;joinThreadPool();</span><br><span class="line">    &#125;</span><br><span class="line">    ALOGV(&quot;Boot animation exit&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以分析，在main方法中，我们new出了BootAnimation对象，而BootAnimation的构造方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">BootAnimation::BootAnimation(sp &lt;Callbacks&gt; callbacks)</span><br><span class="line">        : Thread(false), mClockEnabled(true), mTimeIsAccurate(false),</span><br><span class="line">          mTimeFormat12Hour(false), mTimeCheckThread(NULL), mCallbacks(callbacks) &#123;</span><br><span class="line">    mSession = new SurfaceComposerClient();</span><br><span class="line"></span><br><span class="line">    std::string powerCtl = android::base::GetProperty(&quot;sys.powerctl&quot;, &quot;&quot;);</span><br><span class="line">    if (powerCtl.empty()) &#123;</span><br><span class="line">        mShuttingDown = false;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        mShuttingDown = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而可以看到，上述代码并没有进行什么重要的操作，我们回到main方法中，可以看到创建<code>BootAnimation</code>返回了一个智能指针，当返回该对象后，会调用<code>BootAnimation.cpp</code>中的<code>onFirstRef</code>方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">void BootAnimation::onFirstRef() &#123;</span><br><span class="line">status_t err = mSession-&gt;linkToComposerDeath(this);</span><br><span class="line">ALOGE_IF(err, &quot;linkToComposerDeath failed (%s) &quot;, strerror(-err));</span><br><span class="line">if (err == NO_ERROR) &#123;</span><br><span class="line">run(&quot;BootAnimation&quot;, PRIORITY_DISPLAY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到执行了一个run方法。那么我们可以推测是不是BootAnimation本身就是一个线程类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class BootAnimation : public Thread, public IBinder::DeathRecipient</span><br></pre></td></tr></table></figure><p>而run方法则先会调用下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">status_t BootAnimation::readyToRun() &#123;</span><br><span class="line">        mAssets.addDefaultAssets();</span><br><span class="line"></span><br><span class="line">        sp &lt;IBinder&gt; dtoken(SurfaceComposerClient::getBuiltInDisplay(</span><br><span class="line">                ISurfaceComposer::eDisplayIdMain));</span><br><span class="line">        DisplayInfo dinfo;</span><br><span class="line">        status_t status = SurfaceComposerClient::getDisplayInfo(dtoken, &amp;dinfo);</span><br><span class="line">        if (status)</span><br><span class="line">            return -1;</span><br><span class="line"></span><br><span class="line">        // create the native surface</span><br><span class="line">        sp &lt;SurfaceControl&gt; control = session()-&gt;createSurface(String8(&quot;BootAnimation&quot;),</span><br><span class="line">                                                               dinfo.w, dinfo.h,</span><br><span class="line">                                                               PIXEL_FORMAT_RGB_565);</span><br><span class="line"></span><br><span class="line">        SurfaceComposerClient::openGlobalTransaction();</span><br><span class="line">        control-&gt;setLayer(0x40000000);</span><br><span class="line">        SurfaceComposerClient::closeGlobalTransaction();</span><br><span class="line"></span><br><span class="line">        sp &lt;Surface&gt; s = control-&gt;getSurface();</span><br><span class="line"></span><br><span class="line">        // initialize opengl and egl</span><br><span class="line">        const EGLint attribs[] = &#123;</span><br><span class="line">                EGL_RED_SIZE, 8,</span><br><span class="line">                EGL_GREEN_SIZE, 8,</span><br><span class="line">                EGL_BLUE_SIZE, 8,</span><br><span class="line">                EGL_DEPTH_SIZE, 0,</span><br><span class="line">                EGL_NONE</span><br><span class="line">        &#125;;</span><br><span class="line">        EGLint w, h;</span><br><span class="line">        EGLint numConfigs;</span><br><span class="line">        EGLConfig config;</span><br><span class="line">        EGLSurface surface;</span><br><span class="line">        EGLContext context;</span><br><span class="line"></span><br><span class="line">        EGLDisplay display = eglGetDisplay(EGL_DEFAULT_DISPLAY);</span><br><span class="line"></span><br><span class="line">        eglInitialize(display, 0, 0);</span><br><span class="line">        eglChooseConfig(display, attribs, &amp;config, 1, &amp;numConfigs);</span><br><span class="line">        surface = eglCreateWindowSurface(display, config, s.get(), NULL);</span><br><span class="line">        context = eglCreateContext(display, config, NULL, NULL);</span><br><span class="line">        eglQuerySurface(display, surface, EGL_WIDTH, &amp;w);</span><br><span class="line">        eglQuerySurface(display, surface, EGL_HEIGHT, &amp;h);</span><br><span class="line"></span><br><span class="line">        if (eglMakeCurrent(display, surface, surface, context) == EGL_FALSE)</span><br><span class="line">            return NO_INIT;</span><br><span class="line"></span><br><span class="line">        mDisplay = display;</span><br><span class="line">        mContext = context;</span><br><span class="line">        mSurface = surface;</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line">        mFlingerSurfaceControl = control;</span><br><span class="line">        mFlingerSurface = s;</span><br><span class="line"></span><br><span class="line">        // If the device has encryption turned on or is in process</span><br><span class="line">        // of being encrypted we show the encrypted boot animation.</span><br><span class="line">        char decrypt[PROPERTY_VALUE_MAX];</span><br><span class="line">        property_get(&quot;vold.decrypt&quot;, decrypt, &quot;&quot;);</span><br><span class="line"></span><br><span class="line">        bool encryptedAnimation = atoi(decrypt) != 0 ||</span><br><span class="line">                                  !strcmp(&quot;trigger_restart_min_framework&quot;, decrypt);</span><br><span class="line"></span><br><span class="line">        if (!mShuttingDown &amp;&amp; encryptedAnimation &amp;&amp;</span><br><span class="line">            (access(SYSTEM_ENCRYPTED_BOOTANIMATION_FILE, R_OK) == 0)) &#123;</span><br><span class="line">            mZipFileName = SYSTEM_ENCRYPTED_BOOTANIMATION_FILE;</span><br><span class="line">            return NO_ERROR;</span><br><span class="line">        &#125;</span><br><span class="line">        static const char *bootFiles[] = &#123;OEM_BOOTANIMATION_FILE, SYSTEM_BOOTANIMATION_FILE&#125;;</span><br><span class="line">        static const char *shutdownFiles[] =</span><br><span class="line">                &#123;OEM_SHUTDOWNANIMATION_FILE, SYSTEM_SHUTDOWNANIMATION_FILE&#125;;</span><br><span class="line"></span><br><span class="line">        for (const char *f: (!mShuttingDown ? bootFiles : shutdownFiles)) &#123;</span><br><span class="line">            if (access(f, R_OK) == 0) &#123;</span><br><span class="line">                mZipFileName = f;</span><br><span class="line">                return NO_ERROR;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return NO_ERROR;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到，在上述代码中，我们主要构建了画布，初始化opengl，检测file是否存在。同时将mZipFileName赋值，可以发现我们的开机动画文件位于<code>/oem/media/bootanimation.zip</code>和<code>/system/media/bootanimation.zip</code>。</p><p>在执行完<code>readyToRun</code>方法后，就会执行<code>threadLoop</code>方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::threadLoop() &#123;</span><br><span class="line">    bool r;</span><br><span class="line">    // We have no bootanimation file, so we use the stock android logo</span><br><span class="line">    // animation.</span><br><span class="line">    if (mZipFileName.isEmpty()) &#123;</span><br><span class="line">    r = android();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    r = movie();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    eglMakeCurrent(mDisplay, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT);</span><br><span class="line">    eglDestroyContext(mDisplay, mContext);</span><br><span class="line">    eglDestroySurface(mDisplay, mSurface);</span><br><span class="line">    mFlingerSurface.clear();</span><br><span class="line">    mFlingerSurfaceControl.clear();</span><br><span class="line">    eglTerminate(mDisplay);</span><br><span class="line">    eglReleaseThread();</span><br><span class="line">    IPCThreadState::self()-&gt;stopProcess();</span><br><span class="line">    return r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，当mZipFileName不为空时。就会调用android方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::android() &#123;</span><br><span class="line">        ALOGD(&quot;%sAnimationShownTiming start time: %&quot;</span><br><span class="line">        PRId64</span><br><span class="line">        &quot;ms&quot;, mShuttingDown ? &quot;Shutdown&quot; : &quot;Boot&quot;,</span><br><span class="line">                elapsedRealtime());</span><br><span class="line">        initTexture(&amp;mAndroid[0], mAssets, &quot;images/android-logo-mask.png&quot;);</span><br><span class="line">        initTexture(&amp;mAndroid[1], mAssets, &quot;images/android-logo-shine.png&quot;);</span><br><span class="line"></span><br><span class="line">        mCallbacks-&gt;init(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">        // clear screen</span><br><span class="line">        glShadeModel(GL_FLAT);</span><br><span class="line">        glDisable(GL_DITHER);</span><br><span class="line">        glDisable(GL_SCISSOR_TEST);</span><br><span class="line">        glClearColor(0, 0, 0, 1);</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">        eglSwapBuffers(mDisplay, mSurface);</span><br><span class="line"></span><br><span class="line">        glEnable(GL_TEXTURE_2D);</span><br><span class="line">        glTexEnvx(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</span><br><span class="line"></span><br><span class="line">        const GLint xc = (mWidth - mAndroid[0].w) / 2;</span><br><span class="line">        const GLint yc = (mHeight - mAndroid[0].h) / 2;</span><br><span class="line">        const Rect updateRect(xc, yc, xc + mAndroid[0].w, yc + mAndroid[0].h);</span><br><span class="line"></span><br><span class="line">        glScissor(updateRect.left, mHeight - updateRect.bottom, updateRect.width(),</span><br><span class="line">                  updateRect.height());</span><br><span class="line"></span><br><span class="line">        // Blend state</span><br><span class="line">        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</span><br><span class="line">        glTexEnvx(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</span><br><span class="line"></span><br><span class="line">        const nsecs_t startTime = systemTime();</span><br><span class="line">        do &#123;</span><br><span class="line">            nsecs_t now = systemTime();</span><br><span class="line">            double time = now - startTime;</span><br><span class="line">            float t = 4.0f * float(time / us2ns(16667)) / mAndroid[1].w;</span><br><span class="line">            GLint offset = (1 - (t - floorf(t))) * mAndroid[1].w;</span><br><span class="line">            GLint x = xc - offset;</span><br><span class="line"></span><br><span class="line">            glDisable(GL_SCISSOR_TEST);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            glEnable(GL_SCISSOR_TEST);</span><br><span class="line">            glDisable(GL_BLEND);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, mAndroid[1].name);</span><br><span class="line">            glDrawTexiOES(x, yc, 0, mAndroid[1].w, mAndroid[1].h);</span><br><span class="line">            glDrawTexiOES(x + mAndroid[1].w, yc, 0, mAndroid[1].w, mAndroid[1].h);</span><br><span class="line"></span><br><span class="line">            glEnable(GL_BLEND);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, mAndroid[0].name);</span><br><span class="line">            glDrawTexiOES(xc, yc, 0, mAndroid[0].w, mAndroid[0].h);</span><br><span class="line"></span><br><span class="line">            EGLBoolean res = eglSwapBuffers(mDisplay, mSurface);</span><br><span class="line">            if (res == EGL_FALSE)</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            // 12fps: don&#x27;t animate too fast to preserve CPU</span><br><span class="line">            const nsecs_t sleepTime = 83333 - ns2us(systemTime() - now);</span><br><span class="line">            if (sleepTime &gt; 0)</span><br><span class="line">                usleep(sleepTime);</span><br><span class="line"></span><br><span class="line">            checkExit();</span><br><span class="line">        &#125; while (!exitPending());</span><br><span class="line"></span><br><span class="line">        glDeleteTextures(1, &amp;mAndroid[0].name);</span><br><span class="line">        glDeleteTextures(1, &amp;mAndroid[1].name);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而android方法中，checkExit方法值得注意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void BootAnimation::checkExit() &#123;</span><br><span class="line">// Allow surface flinger to gracefully request shutdown</span><br><span class="line">char value[PROPERTY_VALUE_MAX];</span><br><span class="line">property_get(EXIT_PROP_NAME, value, &quot;0&quot;);</span><br><span class="line">int exitnow = atoi(value);</span><br><span class="line">if (exitnow) &#123;</span><br><span class="line">requestExit();</span><br><span class="line">mCallbacks-&gt;shutdown();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，当<code>EXIT_PROP_NAME</code>属性为退出状态时，程序就会退出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">static const char EXIT_PROP_NAME[] = &quot;service.bootanim.exit&quot;;</span><br></pre></td></tr></table></figure><p>我们在源码路径中寻找上面的属性，可以找到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./services/core/java/com/android/server/wm/WindowManagerService.java:3509:                SystemProperties.set(&quot;service.bootanim.exit&quot;, &quot;1&quot;);</span><br><span class="line"></span><br><span class="line">./native/services/surfaceflinger/SurfaceFlinger.cpp:388:    property_set(&quot;service.bootanim.exit&quot;, &quot;1&quot;);</span><br></pre></td></tr></table></figure><p>可以检索到有两处设置了service.bootanim.exit。我们先去看<code>com.android.server.wm.WindowManagerService</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">private void performEnableScreen() &#123;</span><br><span class="line">        synchronized(mWindowMap) &#123;</span><br><span class="line">            if (DEBUG_BOOT) Slog.i(TAG_WM, &quot;performEnableScreen: mDisplayEnabled=&quot; + mDisplayEnabled</span><br><span class="line">                    + &quot; mForceDisplayEnabled=&quot; + mForceDisplayEnabled</span><br><span class="line">                    + &quot; mShowingBootMessages=&quot; + mShowingBootMessages</span><br><span class="line">                    + &quot; mSystemBooted=&quot; + mSystemBooted</span><br><span class="line">                    + &quot; mOnlyCore=&quot; + mOnlyCore,</span><br><span class="line">                    new RuntimeException(&quot;here&quot;).fillInStackTrace());</span><br><span class="line">            if (mDisplayEnabled) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (!mSystemBooted &amp;&amp; !mShowingBootMessages) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (!mShowingBootMessages &amp;&amp; !mPolicy.canDismissBootAnimation()) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Don&#x27;t enable the screen until all existing windows have been drawn.</span><br><span class="line">            if (!mForceDisplayEnabled</span><br><span class="line">                    // TODO(multidisplay): Expand to all displays?</span><br><span class="line">                    &amp;&amp; getDefaultDisplayContentLocked().checkWaitingForWindows()) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (!mBootAnimationStopped) &#123;</span><br><span class="line">                Trace.asyncTraceBegin(TRACE_TAG_WINDOW_MANAGER, &quot;Stop bootanim&quot;, 0);</span><br><span class="line">                // stop boot animation</span><br><span class="line">                // formerly we would just kill the process, but we now ask it to exit so it</span><br><span class="line">                // can choose where to stop the animation.</span><br><span class="line">                SystemProperties.set(&quot;service.bootanim.exit&quot;, &quot;1&quot;);</span><br><span class="line">                mBootAnimationStopped = true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (!mForceDisplayEnabled &amp;&amp; !checkBootAnimationCompleteLocked()) &#123;</span><br><span class="line">                if (DEBUG_BOOT) Slog.i(TAG_WM, &quot;performEnableScreen: Waiting for anim complete&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            try &#123;</span><br><span class="line">                IBinder surfaceFlinger = ServiceManager.getService(&quot;SurfaceFlinger&quot;);</span><br><span class="line">                if (surfaceFlinger != null) &#123;</span><br><span class="line">                    Slog.i(TAG_WM, &quot;******* TELLING SURFACE FLINGER WE ARE BOOTED!&quot;);</span><br><span class="line">                    Parcel data = Parcel.obtain();</span><br><span class="line">                    data.writeInterfaceToken(&quot;android.ui.ISurfaceComposer&quot;);</span><br><span class="line">                    surfaceFlinger.transact(IBinder.FIRST_CALL_TRANSACTION, // BOOT_FINISHED</span><br><span class="line">                            data, null, 0);</span><br><span class="line">                    data.recycle();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (RemoteException ex) &#123;</span><br><span class="line">                Slog.e(TAG_WM, &quot;Boot completed: SurfaceFlinger is dead!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            EventLog.writeEvent(EventLogTags.WM_BOOT_ANIMATION_DONE, SystemClock.uptimeMillis());</span><br><span class="line">            Trace.asyncTraceEnd(TRACE_TAG_WINDOW_MANAGER, &quot;Stop bootanim&quot;, 0);</span><br><span class="line">            mDisplayEnabled = true;</span><br><span class="line">            if (DEBUG_SCREEN_ON || DEBUG_BOOT) Slog.i(TAG_WM, &quot;******************** ENABLING SCREEN!&quot;);</span><br><span class="line"></span><br><span class="line">            // Enable input dispatch.</span><br><span class="line">            mInputMonitor.setEventDispatchingLw(mEventDispatchingEnabled);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            mActivityManager.bootAnimationComplete();</span><br><span class="line">        &#125; catch (RemoteException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mPolicy.enableScreenAfterBoot();</span><br><span class="line"></span><br><span class="line">        // Make sure the last requested orientation has been applied.</span><br><span class="line">        updateRotationUnchecked(false, false);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那么，我们需要去分析一下是谁调用了performEnableScreen方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">![bootanimation结束源码流程](E:\code\docs\blogdocs\安卓开发\assets\bootanimation结束源码流程.png)日志打印分析：</span><br><span class="line"></span><br><span class="line">03-09 00:53:27.569  1712  1712 I lsm2    : Scheduling idle handler for ActivityRecord&#123;5c8f360 token=android.os.BinderProxy@6d26d5c &#123;com.android.settings/com.android.settings.FallbackHome&#125;&#125;</span><br><span class="line">//1、进入idle</span><br><span class="line">03-09 00:53:27.687  1712  1712 I lsm2    :  activityIdle a.activity ComponentInfo&#123;com.android.settings/com.android.settings.FallbackHome&#125;</span><br><span class="line">//2、跨进程调用到AMS中，执行了postFinishBooting</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : postFinishBooting finishBooting true enableScreen true</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : java.lang.Exception</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at com.android.server.am.ActivityManagerService.postFinishBooting(ActivityManagerService.java:7244)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at com.android.server.am.ActivityStackSupervisor.checkFinishBootingLocked(ActivityStackSupervisor.java:1874)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at com.android.server.am.ActivityStackSupervisor.activityIdleInternalLocked(ActivityStackSupervisor.java:1916)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at com.android.server.am.ActivityManagerService.activityIdle(ActivityManagerService.java:7231)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at android.app.IActivityManager$Stub.onTransact(IActivityManager.java:309)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2919)</span><br><span class="line">03-09 00:53:27.941  1529  1584 D lsm2    : at android.os.Binder.execTransact(Binder.java:697)</span><br><span class="line">//3、调用到WMS中的performEnableScreen</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    :  WindowManagerService performEnableScreen Stop bootanim</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : java.lang.Exception</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at com.android.server.wm.WindowManagerService.performEnableScreen(WindowManagerService.java:3511)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at com.android.server.wm.WindowManagerService.-wrap6(Unknown Source:0)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at com.android.server.wm.WindowManagerService$H.handleMessage(WindowManagerService.java:5065)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at android.os.Handler.dispatchMessage(Handler.java:106)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at android.os.Looper.loop(Looper.java:164)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at android.os.HandlerThread.run(HandlerThread.java:65)</span><br><span class="line">03-09 00:52:44.223  1529  1552 D lsm2    : at com.android.server.ServiceThread.run(ServiceThread.java:46)</span><br><span class="line">//4、跨进程调用到SurfaceFlinger</span><br><span class="line">03-09 00:52:44.310  1529  1552 D lsm2    :  WindowManagerService performEnableScreen  surfaceFlinger.transact(IBinder.FIRST_CALL_TRANSACTION </span><br><span class="line">//5、SurfaceFlinger执行prop的设置</span><br><span class="line">03-09 00:52:44.311  1368  1594 I SurfaceFlinger: lsm2 SurfaceFlinger service.bootanim.exit 1 </span><br><span class="line">03-09 00:52:45.573  2014  2014 I lsm2    : Scheduling idle handler for ActivityRecord&#123;f5df6ba token=android.os.BinderProxy@80709eb &#123;com.android.launcher/com.android.launcher2.Launcher&#125;&#125;</span><br></pre></td></tr></table></figure><p>总结bootanimation的结束源码流程：</p><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Cbootanimation%E7%BB%93%E6%9D%9F%E6%BA%90%E7%A0%81%E6%B5%81%E7%A8%8B.png" alt=""></p><h4 id="开机动画openGL绘制分析及实战">开机动画openGL绘制分析及实战</h4><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Copengl_draw%E6%B5%81%E7%A8%8B.png" alt=""></p><p>我们可以在开机动画上加一个时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">void BootAnimation::drawClock(const Font &amp;font, const int xPos, const int yPos) &#123;</span><br><span class="line">        static constexpr char TIME_FORMAT_12[] = &quot;%l:%M&quot;;</span><br><span class="line">        static constexpr char TIME_FORMAT_24[] = &quot;%H:%M&quot;;</span><br><span class="line">        static constexpr int TIME_LENGTH = 6;</span><br><span class="line"></span><br><span class="line">        time_t rawtime;</span><br><span class="line">        time(&amp;rawtime);</span><br><span class="line">        struct tm *timeInfo = localtime(&amp;rawtime);</span><br><span class="line"></span><br><span class="line">        char timeBuff[TIME_LENGTH];</span><br><span class="line">        const char *timeFormat = mTimeFormat12Hour ? TIME_FORMAT_12 : TIME_FORMAT_24;</span><br><span class="line">        size_t length = strftime(timeBuff, TIME_LENGTH, timeFormat, timeInfo);</span><br><span class="line"></span><br><span class="line">        if (length != TIME_LENGTH - 1) &#123;</span><br><span class="line">            ALOGE(&quot;Couldn&#x27;t format time; abandoning boot animation clock&quot;);</span><br><span class="line">            mClockEnabled = false;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        char *out = timeBuff[0] == &#x27; &#x27; ? &amp;timeBuff[1] : &amp;timeBuff[0];</span><br><span class="line">        int x = xPos;</span><br><span class="line">        int y = yPos;</span><br><span class="line">        drawText(out, font, false, &amp;x, &amp;y);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在<code>BootAnimation.cpp</code>中有一个<code>drawClock</code>方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">void BootAnimation::drawClock(const Font &amp;font, const int xPos, const int yPos) &#123;</span><br><span class="line">    static constexpr char TIME_FORMAT_12[] = &quot;%l:%M&quot;;</span><br><span class="line">    static constexpr char TIME_FORMAT_24[] = &quot;%H:%M&quot;;</span><br><span class="line">    static constexpr int TIME_LENGTH = 6;</span><br><span class="line"></span><br><span class="line">    time_t rawtime;</span><br><span class="line">    time(&amp;rawtime);</span><br><span class="line">    struct tm *timeInfo = localtime(&amp;rawtime);</span><br><span class="line"></span><br><span class="line">    char timeBuff[TIME_LENGTH];</span><br><span class="line">    const char *timeFormat = mTimeFormat12Hour ? TIME_FORMAT_12 : TIME_FORMAT_24;</span><br><span class="line">    size_t length = strftime(timeBuff, TIME_LENGTH, timeFormat, timeInfo);</span><br><span class="line"></span><br><span class="line">    if (length != TIME_LENGTH - 1) &#123;</span><br><span class="line">    ALOGE(&quot;Couldn&#x27;t format time; abandoning boot animation clock&quot;);</span><br><span class="line">    mClockEnabled = false;</span><br><span class="line">    return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    char *out = timeBuff[0] == &#x27; &#x27; ? &amp;timeBuff[1] : &amp;timeBuff[0];</span><br><span class="line">    int x = xPos;</span><br><span class="line">    int y = yPos;</span><br><span class="line">    drawText(out, font, false, &amp;x, &amp;y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到产生了时钟字符串然后调用drawText进行绘制：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">void BootAnimation::drawText(const char *str, const Font &amp;font, bool bold, int *x, int *y) &#123;</span><br><span class="line">        glEnable(GL_BLEND);  // Allow us to draw on top of the animation</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, font.texture.name);</span><br><span class="line"></span><br><span class="line">        const int len = strlen(str);</span><br><span class="line">        const int strWidth = font.char_width * len;</span><br><span class="line"></span><br><span class="line">        if (*x == TEXT_CENTER_VALUE) &#123;</span><br><span class="line">            *x = (mWidth - strWidth) / 2;</span><br><span class="line">        &#125; else if (*x &lt; 0) &#123;</span><br><span class="line">            *x = mWidth + *x - strWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        if (*y == TEXT_CENTER_VALUE) &#123;</span><br><span class="line">            *y = (mHeight - font.char_height) / 2;</span><br><span class="line">        &#125; else if (*y &lt; 0) &#123;</span><br><span class="line">            *y = mHeight + *y - font.char_height;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int cropRect[4] = &#123;0, 0, font.char_width, -font.char_height&#125;;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">            char c = str[i];</span><br><span class="line"></span><br><span class="line">            if (c &lt; FONT_BEGIN_CHAR || c &gt; FONT_END_CHAR) &#123;</span><br><span class="line">                c = &#x27;?&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Crop the texture to only the pixels in the current glyph</span><br><span class="line">            const int charPos = (c - FONT_BEGIN_CHAR);  // Position in the list of valid characters</span><br><span class="line">            const int row = charPos / FONT_NUM_COLS;</span><br><span class="line">            const int col = charPos % FONT_NUM_COLS;</span><br><span class="line">            cropRect[0] = col * font.char_width;  // Left of column</span><br><span class="line">            cropRect[1] = row * font.char_height * 2; // Top of row</span><br><span class="line">            // Move down to bottom of regular (one char_heigh) or bold (two char_heigh) line</span><br><span class="line">            cropRect[1] += bold ? 2 * font.char_height : font.char_height;</span><br><span class="line">            glTexParameteriv(GL_TEXTURE_2D, GL_TEXTURE_CROP_RECT_OES, cropRect);</span><br><span class="line"></span><br><span class="line">            glDrawTexiOES(*x, *y, 0, font.char_width, font.char_height);</span><br><span class="line"></span><br><span class="line">            *x += font.char_width;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        glDisable(GL_BLEND);  // Return to the animation&#x27;s default behaviour</span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, 0);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先在BootAnimation.h中声明Font:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Font        mClockFont;</span><br></pre></td></tr></table></figure><p>然后修改<code>BootAnimation.cpp</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::android() &#123;</span><br><span class="line">        ALOGD(&quot;%sAnimationShownTiming start time: %&quot;</span><br><span class="line">        PRId64</span><br><span class="line">        &quot;ms&quot;, mShuttingDown ? &quot;Shutdown&quot; : &quot;Boot&quot;,</span><br><span class="line">                elapsedRealtime());</span><br><span class="line">        initTexture(&amp;mAndroid[0], mAssets, &quot;images/android-logo-mask.png&quot;);</span><br><span class="line">        initTexture(&amp;mAndroid[1], mAssets, &quot;images/android-logo-shine.png&quot;);</span><br><span class="line"></span><br><span class="line">        mCallbacks-&gt;init(&#123;&#125;);</span><br><span class="line">        /**</span><br><span class="line">         * add by tang.haoyu</span><br><span class="line">         */</span><br><span class="line">        bool hasInitFont = false;</span><br><span class="line">        if (initFont(&amp;mClockFont, CLOCK_FONT_ASSET) == NO_ERROR) &#123;</span><br><span class="line">            hasInitFont = true;</span><br><span class="line">            ALOGD(&quot;android init font ok, fontname = %u&quot;, mClockFont.texture.name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // clear screen</span><br><span class="line">        glShadeModel(GL_FLAT);</span><br><span class="line">        glDisable(GL_DITHER);</span><br><span class="line">        glDisable(GL_SCISSOR_TEST);</span><br><span class="line">        glClearColor(0, 0, 0, 1);</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">        eglSwapBuffers(mDisplay, mSurface);</span><br><span class="line"></span><br><span class="line">        glEnable(GL_TEXTURE_2D);</span><br><span class="line">        glTexEnvx(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</span><br><span class="line"></span><br><span class="line">        const GLint xc = (mWidth - mAndroid[0].w) / 2;</span><br><span class="line">        const GLint yc = (mHeight - mAndroid[0].h) / 2;</span><br><span class="line">        /**</span><br><span class="line">         * add by tang.haoyu</span><br><span class="line">         * resize the Rect</span><br><span class="line">         */</span><br><span class="line">        const Rect updateRect(xc, yc, xc + mAndroid[0].w, yc + mAndroid[0].h * 2);</span><br><span class="line"></span><br><span class="line">        glScissor(updateRect.left, mHeight - updateRect.bottom, updateRect.width(),</span><br><span class="line">                  updateRect.height() * 2);</span><br><span class="line"></span><br><span class="line">        // Blend state</span><br><span class="line">        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</span><br><span class="line">        glTexEnvx(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</span><br><span class="line"></span><br><span class="line">        const nsecs_t startTime = systemTime();</span><br><span class="line">        do &#123;</span><br><span class="line">            nsecs_t now = systemTime();</span><br><span class="line">            double time = now - startTime;</span><br><span class="line">            float t = 4.0f * float(time / us2ns(16667)) / mAndroid[1].w;</span><br><span class="line">            GLint offset = (1 - (t - floorf(t))) * mAndroid[1].w;</span><br><span class="line">            GLint x = xc - offset;</span><br><span class="line"></span><br><span class="line">            glDisable(GL_SCISSOR_TEST);</span><br><span class="line">            glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">            glEnable(GL_SCISSOR_TEST);</span><br><span class="line">            glDisable(GL_BLEND);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, mAndroid[1].name);</span><br><span class="line">            glDrawTexiOES(x, yc, 0, mAndroid[1].w, mAndroid[1].h);</span><br><span class="line">            glDrawTexiOES(x + mAndroid[1].w, yc, 0, mAndroid[1].w, mAndroid[1].h);</span><br><span class="line"></span><br><span class="line">            glEnable(GL_BLEND);</span><br><span class="line">            glBindTexture(GL_TEXTURE_2D, mAndroid[0].name);</span><br><span class="line">            glDrawTexiOES(xc, yc, 0, mAndroid[0].w, mAndroid[0].h);</span><br><span class="line">            /**</span><br><span class="line">             * add by tang.haoyu</span><br><span class="line">             */</span><br><span class="line">            drawClock(mClockFont, TEXT_CENTER_VALUE, yc + mAndroid[0].h);</span><br><span class="line">            EGLBoolean res = eglSwapBuffers(mDisplay, mSurface);</span><br><span class="line">            if (res == EGL_FALSE)</span><br><span class="line">                break;</span><br><span class="line"></span><br><span class="line">            // 12fps: don&#x27;t animate too fast to preserve CPU</span><br><span class="line">            const nsecs_t sleepTime = 83333 - ns2us(systemTime() - now);</span><br><span class="line">            if (sleepTime &gt; 0)</span><br><span class="line">                usleep(sleepTime);</span><br><span class="line"></span><br><span class="line">            checkExit();</span><br><span class="line">        &#125; while (!exitPending());</span><br><span class="line"></span><br><span class="line">        glDeleteTextures(1, &amp;mAndroid[0].name);</span><br><span class="line">        glDeleteTextures(1, &amp;mAndroid[1].name);</span><br><span class="line">        /**</span><br><span class="line">         * add by tang.haoyu</span><br><span class="line">         * close texture when exit.</span><br><span class="line">         */</span><br><span class="line">        if (hasInitFont) &#123;</span><br><span class="line">            glDeleteTextures(1, &amp;mClockFont.texture.name);</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="开机动画源码分析zip包的运行原理">开机动画源码分析zip包的运行原理</h4><p>首先我们可以看<code>/home/tanghaoyu/aosp/android-8.1.0_r1/frameworks/base/cmds/bootanimation</code>路径下的<code>FORMAT.md</code>文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">desc.txt - a text file</span><br><span class="line">part0  \</span><br><span class="line">part1   \  directories full of PNG frames</span><br><span class="line">...     /</span><br><span class="line">partN  /</span><br></pre></td></tr></table></figure><p>desc.txt文件格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WIDTH HEIGHT FPS</span><br></pre></td></tr></table></figure><p>后面的内容如下：</p><pre><code>TYPE COUNT PAUSE PATH [#RGBHEX CLOCK]</code></pre><ul><li><strong>TYPE:</strong> a single char indicating what type of animation segment this is:<ul><li><code>p</code> – 当系统启动会被打断</li><li><code>c</code> – 无论如何都不会被打断</li></ul></li><li><strong>COUNT:</strong> 展示多少次动画，如果是0则一直循环</li><li><strong>PAUSE:</strong> 在part执行完停留几帧</li><li><strong>PATH:</strong> 可以找到帧的文件夹 (e.g. <code>part0</code>)</li><li><strong>RGBHEX:</strong> <em>(OPTIONAL)</em> a background color, specified as <code>#RRGGBB</code></li><li><strong>CLOCK:</strong> <em>(OPTIONAL)</em> the y-coordinate at which to draw the current time (for watches)</li></ul><p>如果在<code>/home/tanghaoyu/aosp/android-8.1.0_r1/frameworks/base/cmds/bootanimation</code>路径下有<code>bootanimation</code>文件。则会调用下面的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::movie() &#123;</span><br><span class="line">// 加载动画</span><br><span class="line">        Animation *animation = loadAnimation(mZipFileName);</span><br><span class="line">        if (animation == NULL)</span><br><span class="line">            return false;</span><br><span class="line"></span><br><span class="line">        bool anyPartHasClock = false;</span><br><span class="line">        for (size_t i = 0; i &lt; animation-&gt;parts.size(); i++) &#123;</span><br><span class="line">            if (validClock(animation-&gt;parts[i])) &#123;</span><br><span class="line">                anyPartHasClock = true;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (!anyPartHasClock) &#123;</span><br><span class="line">            mClockEnabled = false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Check if npot textures are supported</span><br><span class="line">        mUseNpotTextures = false;</span><br><span class="line">        String8 gl_extensions;</span><br><span class="line">        const char *exts = reinterpret_cast&lt;const char *&gt;(glGetString(GL_EXTENSIONS));</span><br><span class="line">        if (!exts) &#123;</span><br><span class="line">            glGetError();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            gl_extensions.setTo(exts);</span><br><span class="line">            if ((gl_extensions.find(&quot;GL_ARB_texture_non_power_of_two&quot;) != -1) ||</span><br><span class="line">                (gl_extensions.find(&quot;GL_OES_texture_npot&quot;) != -1)) &#123;</span><br><span class="line">                mUseNpotTextures = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Blend required to draw time on top of animation frames.</span><br><span class="line">        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</span><br><span class="line">        glShadeModel(GL_FLAT);</span><br><span class="line">        glDisable(GL_DITHER);</span><br><span class="line">        glDisable(GL_SCISSOR_TEST);</span><br><span class="line">        glDisable(GL_BLEND);</span><br><span class="line"></span><br><span class="line">        glBindTexture(GL_TEXTURE_2D, 0);</span><br><span class="line">        glEnable(GL_TEXTURE_2D);</span><br><span class="line">        glTexEnvx(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</span><br><span class="line">        glTexParameterx(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line">        glTexParameterx(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line">        glTexParameterx(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);</span><br><span class="line">        glTexParameterx(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line"></span><br><span class="line">        bool clockFontInitialized = false;</span><br><span class="line">        if (mClockEnabled) &#123;</span><br><span class="line">            clockFontInitialized =</span><br><span class="line">                    (initFont(&amp;animation-&gt;clockFont, CLOCK_FONT_ASSET) == NO_ERROR);</span><br><span class="line">            mClockEnabled = clockFontInitialized;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (mClockEnabled &amp;&amp; !updateIsTimeAccurate()) &#123;</span><br><span class="line">            mTimeCheckThread = new TimeCheckThread(this);</span><br><span class="line">            mTimeCheckThread-&gt;run(&quot;BootAnimation::TimeCheckThread&quot;, PRIORITY_NORMAL);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        playAnimation(*animation);</span><br><span class="line"></span><br><span class="line">        if (mTimeCheckThread != nullptr) &#123;</span><br><span class="line">            mTimeCheckThread-&gt;requestExit();</span><br><span class="line">            mTimeCheckThread = nullptr;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        releaseAnimation(animation);</span><br><span class="line"></span><br><span class="line">        if (clockFontInitialized) &#123;</span><br><span class="line">            glDeleteTextures(1, &amp;animation-&gt;clockFont.texture.name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>加载动画：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">BootAnimation::Animation *BootAnimation::loadAnimation(const String8 &amp;fn) &#123;</span><br><span class="line">        if (mLoadedFiles.indexOf(fn) &gt;= 0) &#123;</span><br><span class="line">            ALOGE(&quot;File \&quot;%s\&quot; is already loaded. Cyclic ref is not allowed&quot;,</span><br><span class="line">                  fn.string());</span><br><span class="line">            return NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        ZipFileRO *zip = ZipFileRO::open(fn);</span><br><span class="line">        if (zip == NULL) &#123;</span><br><span class="line">            ALOGE(&quot;Failed to open animation zip \&quot;%s\&quot;: %s&quot;,</span><br><span class="line">                  fn.string(), strerror(errno));</span><br><span class="line">            return NULL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Animation *animation = new Animation;</span><br><span class="line">        animation-&gt;fileName = fn;</span><br><span class="line">        animation-&gt;zip = zip;</span><br><span class="line">        animation-&gt;clockFont.map = nullptr;</span><br><span class="line">        mLoadedFiles.add(animation-&gt;fileName);</span><br><span class="line"></span><br><span class="line">        parseAnimationDesc(*animation);</span><br><span class="line">        if (!preloadZip(*animation)) &#123;</span><br><span class="line">            return NULL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        mLoadedFiles.remove(fn);</span><br><span class="line">        return animation;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>解析描述文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::parseAnimationDesc(Animation &amp;animation) &#123;</span><br><span class="line">        String8 desString;</span><br><span class="line"></span><br><span class="line">        if (!readFile(animation.zip, &quot;desc.txt&quot;, desString)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        char const *s = desString.string();</span><br><span class="line"></span><br><span class="line">        // Parse the description file</span><br><span class="line">        for (;;) &#123;</span><br><span class="line">            const char *endl = strstr(s, &quot;\n&quot;);</span><br><span class="line">            if (endl == NULL) break;</span><br><span class="line">            String8 line(s, endl - s);</span><br><span class="line">            const char *l = line.string();</span><br><span class="line">            int fps = 0;</span><br><span class="line">            int width = 0;</span><br><span class="line">            int height = 0;</span><br><span class="line">            int count = 0;</span><br><span class="line">            int pause = 0;</span><br><span class="line">            char path[ANIM_ENTRY_NAME_MAX];</span><br><span class="line">            char color[7] = &quot;000000&quot;; // default to black if unspecified</span><br><span class="line">            char clockPos1[TEXT_POS_LEN_MAX + 1] = &quot;&quot;;</span><br><span class="line">            char clockPos2[TEXT_POS_LEN_MAX + 1] = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">            char pathType;</span><br><span class="line">            if (sscanf(l, &quot;%d %d %d&quot;, &amp;width, &amp;height, &amp;fps) == 3) &#123;</span><br><span class="line">                // ALOGD(&quot;&gt; w=%d, h=%d, fps=%d&quot;, width, height, fps);</span><br><span class="line">                animation.width = width;</span><br><span class="line">                animation.height = height;</span><br><span class="line">                animation.fps = fps;</span><br><span class="line">            &#125; else if (sscanf(l, &quot; %c %d %d %s #%6s %16s %16s&quot;,</span><br><span class="line">                              &amp;pathType, &amp;count, &amp;pause, path, color, clockPos1, clockPos2) &gt;= 4) &#123;</span><br><span class="line">                //ALOGD(&quot;&gt; type=%c, count=%d, pause=%d, path=%s, color=%s, clockPos1=%s, clockPos2=%s&quot;,</span><br><span class="line">                //    pathType, count, pause, path, color, clockPos1, clockPos2);</span><br><span class="line">                Animation::Part part;</span><br><span class="line">                part.playUntilComplete = pathType == &#x27;c&#x27;;</span><br><span class="line">                part.count = count;</span><br><span class="line">                part.pause = pause;</span><br><span class="line">                part.path = path;</span><br><span class="line">                part.audioData = NULL;</span><br><span class="line">                part.animation = NULL;</span><br><span class="line">                if (!parseColor(color, part.backgroundColor)) &#123;</span><br><span class="line">                    ALOGE(&quot;&gt; invalid color &#x27;#%s&#x27;&quot;, color);</span><br><span class="line">                    part.backgroundColor[0] = 0.0f;</span><br><span class="line">                    part.backgroundColor[1] = 0.0f;</span><br><span class="line">                    part.backgroundColor[2] = 0.0f;</span><br><span class="line">                &#125;</span><br><span class="line">                parsePosition(clockPos1, clockPos2, &amp;part.clockPosX, &amp;part.clockPosY);</span><br><span class="line">                animation.parts.add(part);</span><br><span class="line">            &#125; else if (strcmp(l, &quot;$SYSTEM&quot;) == 0) &#123;</span><br><span class="line">                // ALOGD(&quot;&gt; SYSTEM&quot;);</span><br><span class="line">                Animation::Part part;</span><br><span class="line">                part.playUntilComplete = false;</span><br><span class="line">                part.count = 1;</span><br><span class="line">                part.pause = 0;</span><br><span class="line">                part.audioData = NULL;</span><br><span class="line">                part.animation = loadAnimation(String8(SYSTEM_BOOTANIMATION_FILE));</span><br><span class="line">                if (part.animation != NULL)</span><br><span class="line">                    animation.parts.add(part);</span><br><span class="line">            &#125;</span><br><span class="line">            s = ++endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在解析完后，就会preload zip文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">bool BootAnimation::preloadZip(Animation &amp;animation) &#123;</span><br><span class="line">    // read all the data structures</span><br><span class="line">    const size_t pcount = animation.parts.size();</span><br><span class="line">    void *cookie = NULL;</span><br><span class="line">    ZipFileRO *zip = animation.zip;</span><br><span class="line">    if (!zip-&gt;startIteration(&amp;cookie)) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ZipEntryRO entry;</span><br><span class="line">    char name[ANIM_ENTRY_NAME_MAX];</span><br><span class="line">    while ((entry = zip-&gt;nextEntry(cookie)) != NULL) &#123;</span><br><span class="line">        const int foundEntryName = zip-&gt;getEntryFileName(entry, name, ANIM_ENTRY_NAME_MAX);</span><br><span class="line">        if (foundEntryName &gt; ANIM_ENTRY_NAME_MAX || foundEntryName == -1) &#123;</span><br><span class="line">            ALOGE(&quot;Error fetching entry file name&quot;);</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const String8 entryName(name);</span><br><span class="line">        const String8 path(entryName.getPathDir());</span><br><span class="line">        const String8 leaf(entryName.getPathLeaf());</span><br><span class="line">        if (leaf.size() &gt; 0) &#123;</span><br><span class="line">            if (entryName == CLOCK_FONT_ZIP_NAME) &#123;</span><br><span class="line">                FileMap *map = zip-&gt;createEntryFileMap(entry);</span><br><span class="line">                if (map) &#123;</span><br><span class="line">                    animation.clockFont.map = map;</span><br><span class="line">                &#125;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (size_t j = 0; j &lt; pcount; j++) &#123;</span><br><span class="line">                if (path == animation.parts[j].path) &#123;</span><br><span class="line">                    uint16_t method;</span><br><span class="line">                    // supports only stored png files</span><br><span class="line">                    if (zip-&gt;getEntryInfo(entry, &amp;method, NULL, NULL, NULL, NULL, NULL)) &#123;</span><br><span class="line">                        if (method == ZipFileRO::kCompressStored) &#123;</span><br><span class="line">                            FileMap *map = zip-&gt;createEntryFileMap(entry);</span><br><span class="line">                            if (map) &#123;</span><br><span class="line">                                Animation::Part &amp;part(animation.parts.editItemAt(j));</span><br><span class="line">                                if (leaf == &quot;audio.wav&quot;) &#123;</span><br><span class="line">                                    // a part may have at most one audio file</span><br><span class="line">                                    part.audioData = (uint8_t *) map-&gt;getDataPtr();</span><br><span class="line">                                    part.audioLength = map-&gt;getDataLength();</span><br><span class="line">                                &#125; else if (leaf == &quot;trim.txt&quot;) &#123;</span><br><span class="line">                                    part.trimData.setTo((char const *) map-&gt;getDataPtr(),</span><br><span class="line">                                                        map-&gt;getDataLength());</span><br><span class="line">                                &#125; else &#123;</span><br><span class="line">                                    Animation::Frame frame;</span><br><span class="line">                                    frame.name = leaf;</span><br><span class="line">                                    frame.map = map;</span><br><span class="line">                                    frame.trimWidth = animation.width;</span><br><span class="line">                                    frame.trimHeight = animation.height;</span><br><span class="line">                                    frame.trimX = 0;</span><br><span class="line">                                    frame.trimY = 0;</span><br><span class="line">                                    part.frames.add(frame);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            ALOGE(&quot;bootanimation.zip is compressed; must be only stored&quot;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If there is trimData present, override the positioning defaults.</span><br><span class="line">    for (Animation::Part &amp;part: animation.parts) &#123;</span><br><span class="line">        const char *trimDataStr = part.trimData.string();</span><br><span class="line">        for (size_t frameIdx = 0; frameIdx &lt; part.frames.size(); frameIdx++) &#123;</span><br><span class="line">            const char *endl = strstr(trimDataStr, &quot;\n&quot;);</span><br><span class="line">            // No more trimData for this part.</span><br><span class="line">            if (endl == NULL) &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            String8 line(trimDataStr, endl - trimDataStr);</span><br><span class="line">            const char *lineStr = line.string();</span><br><span class="line">            trimDataStr = ++endl;</span><br><span class="line">            int width = 0, height = 0, x = 0, y = 0;</span><br><span class="line">            if (sscanf(lineStr, &quot;%dx%d+%d+%d&quot;, &amp;width, &amp;height, &amp;x, &amp;y) == 4) &#123;</span><br><span class="line">                Animation::Frame &amp;frame(part.frames.editItemAt(frameIdx));</span><br><span class="line">                frame.trimWidth = width;</span><br><span class="line">                frame.trimHeight = height;</span><br><span class="line">                frame.trimX = x;</span><br><span class="line">                frame.trimY = y;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                ALOGE(&quot;Error parsing trim.txt, line: %s&quot;, lineStr);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mCallbacks-&gt;init(animation.parts);</span><br><span class="line"></span><br><span class="line">    zip-&gt;endIteration(cookie);</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="实战制作bootanimation">实战制作bootanimation</h4><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5Czip-make-step.png" alt=""></p><p>将你的part1, part2, … , desc.txt文件放到一个文件夹下，使用下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r -X -Z store bootanimation part*/* desc.txt</span><br></pre></td></tr></table></figure><p>然后将制作的bootanimation.zip集成到<code>/system/media</code>目录下，这需要在Android.mk进行cp操作。</p><p>在<code>LOCAL_CFLAGS += $&#123;bootanimation_CommonCFlags&#125;</code>下面添加下面的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(shell cp $(LOCAL_PATH)/bootanimation.zip $(ANDROID_PRODUCT_OUT)/system/media/bootanimation-encrypted.zip)</span><br></pre></td></tr></table></figure><h3 id="Android-native层thread实现方案">Android native层thread实现方案</h3><h4 id="沿用linux上的posix线程方案">沿用linux上的posix线程方案</h4><p>为什么要有线程：</p><p>一个进程可以有多个线程，这个进程本身也叫做线程，只不过是主线程。通常主线程分配任务给子线程做。程序设计时候就可以某一时刻不止做一件事，每一个线程处理各自独立的任务。</p><ul><li>多个线程自动可以访问相同的存储地址空间和文件描述符。</li><li>每个线程都包含有表示执行环境所必须的信息，其中包括线程ID、一组寄存器、栈、调度优先级和策略、信号屏蔽字、errno变量及线程私有数据。一个进程所有信息对该进程所有线程共享，包括可执行代码、程序的全局内存和堆内存、栈以及文件描述符。</li></ul><p>线程ID：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pthread_t</span><span class="comment">//用于表示线程ID数据结构</span></span><br><span class="line"></span><br><span class="line">pthread_equal (<span class="keyword">pthread_t</span> __thread1, <span class="keyword">pthread_t</span> __thread2);<span class="comment">//用于比较线程ID</span></span><br><span class="line"><span class="function"><span class="keyword">pthread_t</span> <span class="title">pthread_self</span> <span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//用户返回线程ID</span></span><br></pre></td></tr></table></figure><p>线程创建</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pthread_create()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">__newthread:函数成功返回将ID存储在此变量中。</span></span><br><span class="line"><span class="comment">__attr:定制线程属性。</span></span><br><span class="line"><span class="comment">__start_routine:函数指针。</span></span><br><span class="line"><span class="comment">__arg:传递给函数的参数。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_create</span> <span class="params">(<span class="keyword">pthread_t</span> *__restrict__newthread,</span></span></span><br><span class="line"><span class="params"><span class="function">               <span class="keyword">const</span> <span class="keyword">pthread_attr_t</span> *__restrict__attr,</span></span></span><br><span class="line"><span class="params"><span class="function">               <span class="keyword">void</span> *(*__start_routine) (<span class="keyword">void</span> *),</span></span></span><br><span class="line"><span class="params"><span class="function">               <span class="keyword">void</span> *__restrict__arg)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>线程终止</p><p>如果进程中的任意线程调用了exit、_Exit或者exit，那么整个进程就会终止。并且如果信号的默认动作是终止进程，那么收到该信号的进程也会终止。<br>单个线程可以通过3种方式退出，因此可以在不终止整个进程的情况下，停止它的控制流。</p><ol><li>线程可以简单地从启动例程中返回，返回值是线程的退出码。</li><li>线程可以被同一进程中的其他线程取消。</li><li>线程调用pthead_exit。</li></ol><p>下面，我们写一个可以在Android运行的线程示例：</p><p>首先，我们需要写一个mk文件：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_PATH := <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"> </span><br><span class="line">LOCAL_SRC_FILES := MyThread.cpp \</span><br><span class="line">Main.cpp \</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">LOCAL_SHARED_LIBRARIES :=libandroid_runtime \</span><br><span class="line">libcutils \</span><br><span class="line">libutils \</span><br><span class="line">        liblog </span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := android_thread</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">LOCAL_PRELINK_MODULE := false</span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_EXECUTABLE)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"> </span><br><span class="line">LOCAL_SRC_FILES := thread_posix.c </span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := linux_thread</span><br><span class="line">LOCAL_SHARED_LIBRARIES :=liblog  </span><br><span class="line"></span><br><span class="line">LOCAL_PRELINK_MODULE := false</span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_EXECUTABLE)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面代码的含义：</p><p>这段代码是Android.mk文件的一部分，用于构建Android Native C/C++ 库或应用程序。这是Android NDK（Native Development Kit）中的构建系统所使用的文件格式。每个模块定义了一个目标，通常是一个静态库、动态库或可执行文件。下面逐行解释这段代码：</p><ol><li><p>LOCAL_SRC_FILES := thread_posix.c</p><p>这行指定了本地模块（本例中是一个可执行文件）的源代码文件。thread_posix.c是C语言的源代码文件，它会被编译并链接到最终的目标中。</p></li><li><p>LOCAL_MODULE := linux_thread</p><p>这里定义了模块的名称为linux_thread。在构建过程中，这个名称将被用来生成目标的文件名，比如liblinux_thread.so或linux_thread（对于可执行文件）。</p></li><li><p>LOCAL_SHARED_LIBRARIES := liblog</p><p>这行声明了模块在链接时需要的共享库。在这个例子中，模块依赖于liblog，即Android的日志系统库。这确保在生成最终可执行文件时，liblog.so会被链接进来。</p></li><li><p>LOCAL_PRELINK_MODULE := false</p><p>这个变量一般用在库的构建中，设置为false意味着在安装之前不需要预链接这个模块。对于可执行文件，通常不需要预链接，因此设置为false是标准做法。</p></li><li><p>include $(BUILD_EXECUTABLE)</p><p>最后这一行包含了Android NDK构建系统提供的宏定义，$(BUILD_EXECUTABLE)是一个宏，它会根据前面定义的变量（如LOCAL_MODULE和LOCAL_SRC_FILES）来生成构建可执行文件所需的适当命令。这行指令告诉NDK我们正在构建一个可执行文件，而不是库。<br>当整个Android.mk文件被mm（make modules）或make命令处理时，这些指令会被解释并执行，从而编译源代码，解决依赖性，链接所需的库，并生成最终的可执行文件。</p></li></ol><p>创建线程代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/Log.h&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> *<span class="title">thread_posix_function</span><span class="params">(<span class="keyword">void</span> *arg)</span> </span>&#123;</span><br><span class="line">  (<span class="keyword">void</span>*)arg;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;<span class="number">30</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello thread i = %d\n&quot;</span>,i);</span><br><span class="line">    ALOGD(<span class="string">&quot;hello thread i = %d\n&quot;</span>,i);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">pthread_t</span> mythread;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> ( pthread_create( &amp;mythread, <span class="literal">NULL</span>, thread_posix_function, <span class="literal">NULL</span>) ) &#123;</span><br><span class="line">    ALOGD(<span class="string">&quot;error creating thread.&quot;</span>);</span><br><span class="line">    <span class="built_in">abort</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( pthread_join ( mythread, <span class="literal">NULL</span> ) ) &#123;</span><br><span class="line">    ALOGD(<span class="string">&quot;error joining thread.&quot;</span>);</span><br><span class="line">    <span class="built_in">abort</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  ALOGD(<span class="string">&quot;hello thread has run end exit\n&quot;</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的含义如下：</p><p>这段代码是一个简单的C程序，展示了如何使用POSIX线程库（pthread.h）在Linux或类Unix系统上创建和管理线程。同时，它还使用了Android日志系统（通过utils/Log.h头文件）来输出日志信息。下面是代码的详细解释：</p><ol><li>头文件包含:<ul><li>&lt;pthread.h&gt;: 包含多线程编程所需的函数声明，如线程创建、销毁、同步等。</li><li>&lt;stdlib.h&gt; 和 &lt;stdio.h&gt;: 分别用于内存管理和标准输入输出功能，如malloc, free, printf等</li><li>&lt;utils/Log.h&gt;: Android特有的日志工具头文件，提供了不同级别日志输出的函数，如ALOGD（用于输出调试信息）。</li></ul></li><li>线程函数：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">thread_posix_function</span><span class="params">(<span class="keyword">void</span> *arg)</span> </span>&#123;</span><br><span class="line">    (<span class="keyword">void</span>*)arg; <span class="comment">// 忽略传入的参数</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello thread i = %d\n&quot;</span>, i);</span><br><span class="line">        ALOGD(<span class="string">&quot;hello thread i = %d\n&quot;</span>, i);</span><br><span class="line">        sleep(<span class="number">1</span>); <span class="comment">// 线程每运行一次循环就暂停1秒</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>; <span class="comment">// 线程结束，返回空指针</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数是新线程执行的任务，它打印出从0到29的数字，并在每次打印后暂停1秒。这里使用了标准输出printf以及Android日志系统ALOGD来输出信息。</p><ol start="3"><li>主函数:</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">pthread_t</span> mythread; <span class="comment">// 定义线程标识符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建线程</span></span><br><span class="line">    <span class="keyword">if</span> (pthread_create(&amp;mythread, <span class="literal">NULL</span>, thread_posix_function, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">        ALOGD(<span class="string">&quot;error creating thread.&quot;</span>);</span><br><span class="line">        <span class="built_in">abort</span>(); <span class="comment">// 如果创建失败，则输出错误日志并终止程序</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待线程结束</span></span><br><span class="line">    <span class="keyword">if</span> (pthread_join(mythread, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">        ALOGD(<span class="string">&quot;error joining thread.&quot;</span>);</span><br><span class="line">        <span class="built_in">abort</span>(); <span class="comment">// 如果等待失败，则输出错误日志并终止程序</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ALOGD(<span class="string">&quot;hello thread has run end exit\n&quot;</span>); <span class="comment">// 线程执行完毕，主程序退出前输出日志</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>); <span class="comment">// 正常退出程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main函数中，首先声明了一个pthread_t类型的变量mythread来存储新线程的标识符。然后调用pthread_create函数创建一个新的线程，该线程将执行thread_posix_function函数。如果线程创建成功，程序会调用pthread_join等待这个线程结束。最后，程序正常退出，输出一条日志表示线程已执行完毕并退出。</p><p>然后，我们在根目录下执行<code>make linux_thread</code>。</p><h4 id="android在native层面封装的thread类">android在native层面封装的thread类</h4><p>Android native的Thread类是Android提供的一个基础类，源码路径：</p><p><code>system\core\libutils\include\utils\Thread.h</code></p><p><code>system\core\libutils\Thread.cpp</code></p><p>该类提供的基础功能涵盖了线程的声明周期：创建，运行，销毁。主要成员函数如下：</p><ol><li>本身继承于RefBase，所以具有相应的一些特性</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Invoke after creation of initial strong pointer/reference</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">onFirstRef</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>执行线程创建并启动通过run方法（和Java有些差异）</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">run</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* name, <span class="keyword">int32_t</span> priority, <span class="keyword">size_t</span> stack)</span></span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>循环执行方法</li></ol><p>创建完成后，开始执行_threadLoop()函数，该函数主要通过调用threadLoop函数，因此基类必须要实现threadLoop函数，作为线程执行函数，它是有返回值的方法，而且_threadLoop会根据返回值确定是否继续循环执行的方法。</p><ol start="4"><li>线程请求退出的方法</li></ol><p>线程销毁，子类最好通过实现requestExit()函数，首先调用Thread类的requestExit()函数，将线程状态mExitPending置为true，然后中断threadLoop。</p><h4 id="实战">实战</h4><p>那么我们应该如何使用Android给我们封装的线程类呢，可以看下面的代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">&quot;MyThread&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/Log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MyThread.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> android &#123;</span><br><span class="line"> </span><br><span class="line">MyThread::<span class="built_in">MyThread</span>() :</span><br><span class="line"><span class="built_in">Thread</span>(<span class="literal">false</span>) &#123;</span><br><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;MyThread&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">MyThread::threadLoop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;threadLoop hasRunCount = %d&quot;</span>,hasRunCount);</span><br><span class="line">hasRunCount++;</span><br><span class="line"><span class="keyword">if</span> (hasRunCount == <span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyThread::onFirstRef</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;onFirstRef&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">status_t</span> <span class="title">MyThread::readyToRun</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;readyToRun&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyThread::requestExit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">ALOGD</span>(<span class="string">&quot;requestExit&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p>#define LOG_TAG “MyThread”：定义了一个宏LOG_TAG，用于在日志输出中标识当前模块的名称。</p></li><li><p>#include &lt;utils/Log.h&gt;：引入了Android的Log头文件，提供方便的日志输出功能。</p></li><li><p>#include “MyThread.h”：假设这是MyThread类的实现，这里包含MyThread的头文件。</p></li><li><p>namespace android { … }：在android命名空间中定义MyThread类。</p></li><li><p>MyThread::MyThread() : Thread(false) { … }：MyThread的构造函数，传入false参数给基类Thread的构造函数，表示不创建一个自动启动的线程。</p><ul><li>ALOGD(“MyThread”);：输出调试日志，标记构造函数的执行。</li></ul></li><li><p>bool MyThread::threadLoop() { … }：重写了Thread类的threadLoop方法，这是线程的主要运行逻辑。</p><ul><li>输出当前hasRunCount的值。</li><li>将hasRunCount自增1。</li><li>当hasRunCount达到10时，返回false，表示线程应退出；否则返回true，继续运行。</li></ul></li><li><p>void MyThread::onFirstRef() { … }：onFirstRef方法，当线程首次获得引用时调用。在这里输出调试日志。</p></li><li><p>status_t MyThread::readyToRun() { … }：重写了Thread类的readyToRun方法，表示线程准备就绪。返回0表示成功。</p></li><li><p>void MyThread::requestExit() { … }：重写了Thread类的requestExit方法，用于请求线程退出。在这个实现中，仅输出调试日志，实际的退出逻辑可能由基类Thread处理。</p><p>这个MyThread类用于创建一个可控制运行次数的线程，当threadLoop被调用10次后，线程会自动退出。</p></li></ol><h3 id="Zygote启动流程分析">Zygote启动流程分析</h3><h4 id="Zygote简单介绍">Zygote简单介绍</h4><p>在Android系统中，普通应用程序进程以及系统的服务system_server进程都是由Zygote进程来fork的，也叫做孵化器，它通过linux中的fork形式创建应用程序进程和system_server。由于Zygote进程在启动的时候会创建java虚拟机环境，因此通过fork而创建的应用程序进程或者system_server进程可以在内部获得java虚拟机环境，不需要再为每一个进程创建java虚拟机环境</p><h4 id="Zygote启动脚本">Zygote启动脚本</h4><p><code>init.rc</code>是以<code>import</code>方式来引入各个模块的rc的，包括前面讲的bootanimation，surfaceflinger等也是，当然zygote也是一样</p><p>zygote的init.rc的路径如下：</p><blockquote><p>system/core/rootdir/init.zygote32.rc</p></blockquote><p>这里有多个zygote.rc，那是因为android系统支持64位系统和32位的原因</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server</span><br><span class="line">    class main</span><br><span class="line">    priority -20</span><br><span class="line">    user root</span><br><span class="line">    group root readproc</span><br><span class="line">    socket zygote stream 660 root system</span><br><span class="line">    onrestart write /sys/android_power/request_state wake</span><br><span class="line">    onrestart write /sys/power/state on</span><br><span class="line">    onrestart restart audioserver</span><br><span class="line">    onrestart restart cameraserver</span><br><span class="line">    onrestart restart media</span><br><span class="line">    onrestart restart netd</span><br><span class="line">    onrestart restart wificond</span><br><span class="line">    writepid /dev/cpuset/foreground/tasks</span><br></pre></td></tr></table></figure><p>我们grep app_process可以定位到zygote的代码在<code>frameworks/base/cmds/app_process</code>下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Main entry of app process.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Starts the interpreted runtime, then starts up the application.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">&quot;appproc&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/prctl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;binder/IPCThreadState.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hwbinder/IPCThreadState.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/Log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cutils/memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cutils/properties.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cutils/trace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android_runtime/AndroidRuntime.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;private/android_filesystem_config.h&gt;</span>  <span class="comment">// for AID_SYSTEM</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> android &#123;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* <span class="keyword">const</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Parse runtime arguments.  Stop at first unrecognized option.</span></span><br><span class="line">    <span class="keyword">bool</span> zygote = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> startSystemServer = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> application = <span class="literal">false</span>;</span><br><span class="line">    String8 niceName;</span><br><span class="line">    String8 className;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (zygote) &#123;</span><br><span class="line">        <span class="comment">// 调用AndroidRuntime.start()方法</span></span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">&quot;com.android.internal.os.ZygoteInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (className) &#123;</span><br><span class="line">        runtime.<span class="built_in">start</span>(<span class="string">&quot;com.android.internal.os.RuntimeInit&quot;</span>, args, zygote);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;Error: no class name or --zygote supplied.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">app_usage</span>();</span><br><span class="line">        <span class="built_in">LOG_ALWAYS_FATAL</span>(<span class="string">&quot;app_process: no class name or --zygote supplied.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到在<code>app_main</code>中，做了下面几件事：</p><ol><li>初始化AppRuntime，其实就是AndroidRuntime(ART)</li><li>设置zygote模式</li><li>将参数传递给ZygoteInit.main()方法</li><li>启动ZygoteInit。这里的ZygoteInit就是zygote进程的启动类。</li></ol><p>AndroidRuntime位于</p><p><code>frameworks/base/core/jni/AndroidRuntime.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Start the Android runtime.  This involves starting the virtual machine and calling the &quot;static void main(String[] args)&quot; method in the class named by &quot;className&quot;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Passes the main function two arguments, the class name and the specified</span></span><br><span class="line"><span class="comment"> * options string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AndroidRuntime::start</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* className, <span class="keyword">const</span> Vector&lt;String8&gt;&amp; options, <span class="keyword">bool</span> zygote)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    JniInvocation jni_invocation;</span><br><span class="line">    jni_invocation.<span class="built_in">Init</span>(<span class="literal">NULL</span>);</span><br><span class="line">    JNIEnv* env;</span><br><span class="line">    <span class="comment">//注释1:启动虚拟机</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">startVm</span>(&amp;mJavaVM, &amp;env, zygote, primary_zygote) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">onVmCreated</span>(env);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注释2:注册安卓功能(JNI)</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">startReg</span>(env) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;Unable to register all android natives\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    strArray = env-&gt;<span class="built_in">NewObjectArray</span>(options.<span class="built_in">size</span>() + <span class="number">1</span>, stringClass, <span class="literal">NULL</span>);</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 启动虚拟机。 该线程成为VM的主线程，直到VM退出才会返回。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">char</span>* slashClassName = <span class="built_in">toSlashClassName</span>(className != <span class="literal">NULL</span> ? className : <span class="string">&quot;&quot;</span>);</span><br><span class="line">    jclass startClass = env-&gt;<span class="built_in">FindClass</span>(slashClassName);</span><br><span class="line">    <span class="keyword">if</span> (startClass == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        jmethodID startMeth = env-&gt;<span class="built_in">GetStaticMethodID</span>(startClass, <span class="string">&quot;main&quot;</span>,</span><br><span class="line">            <span class="string">&quot;([Ljava/lang/String;)V&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (startMeth == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//注释3</span></span><br><span class="line">            env-&gt;<span class="built_in">CallStaticVoidMethod</span>(startClass, startMeth, strArray);</span><br><span class="line">            <span class="keyword">if</span> (env-&gt;<span class="built_in">ExceptionCheck</span>())</span><br><span class="line">                <span class="built_in">threadExitUncaughtException</span>(env);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的代码主要干了下面几件事：</p><p>注释1.启动虚拟机</p><p>注释2.注册安卓功能</p><p>注释3.使用JNI调用ZygoteInit的main方法，这里的ZygoteInit是class文件，也就是从这里进入Java</p><p>可以发现，上面的代码主要是初始化了JNI功能并启动了JVM虚拟机，通过反射的方式去启动 ZygoteInit.java 的 main 方法，并将 args 参数（包含了是否启动 SystemServer 的参数）传递过去。而 JVM 虚拟机进程就是<code> com.android.internal.os.ZygoteInit</code>，而 ZygoteInit 进程位于 <code>/frameworks/base/core/java/com/android/internal/os/ZygoteInit.java </code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">路径：/frameworks/base/core/java/com/android/internal/os/ZygoteInit.<span class="function">java</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span> </span>&#123;</span><br><span class="line">        ZygoteServer zygoteServer = <span class="keyword">new</span> ZygoteServer();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Mark zygote start. This ensures that thread creation will throw</span></span><br><span class="line">        <span class="comment">// an error.</span></span><br><span class="line">        ZygoteHooks.startZygoteNoThreadCreation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Zygote goes into its own process group.</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Os.setpgid(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ErrnoException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Failed to setpgid(0,0)&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Runnable caller;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> startSystemServer = <span class="keyword">false</span>;</span><br><span class="line">            String socketName = <span class="string">&quot;zygote&quot;</span>;</span><br><span class="line">            String abiList = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">boolean</span> enableLazyPreload = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; argv.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;start-system-server&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">                    startSystemServer = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;--enable-lazy-preload&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">                    enableLazyPreload = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv[i].startsWith(ABI_LIST_ARG)) &#123;</span><br><span class="line">                    abiList = argv[i].substring(ABI_LIST_ARG.length());</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv[i].startsWith(SOCKET_NAME_ARG)) &#123;</span><br><span class="line">                    socketName = argv[i].substring(SOCKET_NAME_ARG.length());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Unknown command line argument: &quot;</span> + argv[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (abiList == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;No ABI list supplied.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Zygote作为服务端</span></span><br><span class="line">            zygoteServer.registerServerSocket(socketName);</span><br><span class="line">            <span class="comment">// In some configurations, we avoid preloading resources and classes eagerly.</span></span><br><span class="line">            <span class="comment">// In such cases, we will preload things prior to our first fork.</span></span><br><span class="line">            <span class="keyword">if</span> (!enableLazyPreload) &#123;</span><br><span class="line">                bootTimingsTraceLog.traceBegin(<span class="string">&quot;ZygotePreload&quot;</span>);</span><br><span class="line">                EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_START,</span><br><span class="line">                    SystemClock.uptimeMillis());</span><br><span class="line">                preload(bootTimingsTraceLog);</span><br><span class="line">                EventLog.writeEvent(LOG_BOOT_PROGRESS_PRELOAD_END,</span><br><span class="line">                    SystemClock.uptimeMillis());</span><br><span class="line">                bootTimingsTraceLog.traceEnd(); <span class="comment">// ZygotePreload</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Zygote.resetNicePriority();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Do an initial gc to clean up after startup</span></span><br><span class="line">            bootTimingsTraceLog.traceBegin(<span class="string">&quot;PostZygoteInitGC&quot;</span>);</span><br><span class="line">            gcAndFinalize();</span><br><span class="line">            bootTimingsTraceLog.traceEnd(); <span class="comment">// PostZygoteInitGC</span></span><br><span class="line"></span><br><span class="line">            bootTimingsTraceLog.traceEnd(); <span class="comment">// ZygoteInit</span></span><br><span class="line">            <span class="comment">// Disable tracing so that forked processes do not inherit stale tracing tags from</span></span><br><span class="line">            <span class="comment">// Zygote.</span></span><br><span class="line">            Trace.setTracingEnabled(<span class="keyword">false</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Zygote process unmounts root storage spaces.</span></span><br><span class="line">            Zygote.nativeUnmountStorageOnInit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set seccomp policy</span></span><br><span class="line">            Seccomp.setPolicy();</span><br><span class="line"></span><br><span class="line">            ZygoteHooks.stopZygoteNoThreadCreation();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (startSystemServer) &#123;</span><br><span class="line">                Runnable r = forkSystemServer(abiList, socketName, zygoteServer);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// &#123;@code r == null&#125; in the parent (zygote) process, and &#123;@code r != null&#125; in the</span></span><br><span class="line">                <span class="comment">// child (system_server) process.</span></span><br><span class="line">                <span class="keyword">if</span> (r != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    r.run();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Log.i(TAG, <span class="string">&quot;Accepting command socket connections&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The select loop returns early in the child process after a fork and</span></span><br><span class="line">            <span class="comment">// loops forever in the zygote.</span></span><br><span class="line">            caller = zygoteServer.runSelectLoop(abiList);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;System zygote died with exception&quot;</span>, ex);</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            zygoteServer.closeServerSocket();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We&#x27;re in the child process and have exited the select loop. Proceed to execute the</span></span><br><span class="line">        <span class="comment">// command.</span></span><br><span class="line">        <span class="keyword">if</span> (caller != <span class="keyword">null</span>) &#123;</span><br><span class="line">            caller.run();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Zygote进行fork进程">Zygote进行fork进程</h4><ul><li>实战体验linux的fork</li></ul><p>直接上代码体验fork</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;main current process pid = %d \n&quot;</span>, getpid());</span><br><span class="line">    pid = fork();</span><br><span class="line">    <span class="keyword">if</span>(pid == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;child process pid == %d ppid = %d \n&quot;</span>, getpid(), getppid());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;this process current pid == %d pid = %d ppid = %d \n&quot;</span>, getpid(), pid,getppid());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们通过下面的代码编译：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc fork.c -o fork</span><br></pre></td></tr></table></figure><p>然后执行fork文件可以得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main current process pid = 9599</span><br><span class="line">this process current pid == 9599 pid = 9600 ppid = 2403</span><br><span class="line">child process pid == 9600 ppid = 9599</span><br></pre></td></tr></table></figure><p>如果返回值为0，那么代表当前进程是子进程。返回值为非负数，代表当前进程为父进程，返回值是子进程的id号</p><p>在ZygoteInit.java中，我们可以找到<code>forkSystemServer</code>方法，我们进入该方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">private static Runnable forkSystemServer(String abiList, String socketName,</span><br><span class="line">            ZygoteServer zygoteServer) &#123;</span><br><span class="line">        ...</span><br><span class="line">            /* Request to fork the system server process */</span><br><span class="line">            pid = Zygote.forkSystemServer(</span><br><span class="line">                    parsedArgs.uid, parsedArgs.gid,</span><br><span class="line">                    parsedArgs.gids,</span><br><span class="line">                    parsedArgs.debugFlags,</span><br><span class="line">                    null,</span><br><span class="line">                    parsedArgs.permittedCapabilities,</span><br><span class="line">                    parsedArgs.effectiveCapabilities);</span><br><span class="line">        &#125; catch (IllegalArgumentException ex) &#123;</span><br><span class="line">            throw new RuntimeException(ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* For child process */</span><br><span class="line">        if (pid == 0) &#123;</span><br><span class="line">            if (hasSecondZygote(abiList)) &#123;</span><br><span class="line">                waitForSecondaryZygote(socketName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            zygoteServer.closeServerSocket();</span><br><span class="line">            return handleSystemServerProcess(parsedArgs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们进入<code>Zygote.forkSystemServer</code>方法可以找到下面的方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static int forkSystemServer(int uid, int gid, int[] gids, int debugFlags, int[][] rlimits, long permittedCapabilities, long effectiveCapabilities) &#123;</span><br><span class="line">        VM_HOOKS.preFork();</span><br><span class="line">        int pid = nativeForkSystemServer(uid, gid, gids, debugFlags, rlimits, permittedCapabilities, effectiveCapabilities);</span><br><span class="line">        VM_HOOKS.postForkCommon();</span><br><span class="line">        return pid;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以发现调用了native方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">nativeForkSystemServer</span><span class="params">(<span class="keyword">int</span> var0, <span class="keyword">int</span> var1, <span class="keyword">int</span>[] var2, <span class="keyword">int</span> var3, <span class="keyword">int</span>[][] var4, <span class="keyword">long</span> var5, <span class="keyword">long</span> var7)</span></span>;</span><br></pre></td></tr></table></figure><p>native方法在下面的路径<code>core/jni/com_android_internal_os_Zygote.cpp</code>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> jint <span class="title">com_android_internal_os_Zygote_nativeForkSystemServer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        JNIEnv* env, jclass, <span class="keyword">uid_t</span> uid, <span class="keyword">gid_t</span> gid, jintArray gids,</span></span></span><br><span class="line"><span class="params"><span class="function">        jint debug_flags, jobjectArray rlimits, jlong permittedCapabilities,</span></span></span><br><span class="line"><span class="params"><span class="function">        jlong effectiveCapabilities)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">pid_t</span> pid = <span class="built_in">ForkAndSpecializeCommon</span>(env, uid, gid, gids,</span><br><span class="line">                                      debug_flags, rlimits,</span><br><span class="line">                                      permittedCapabilities, effectiveCapabilities,</span><br><span class="line">                                      MOUNT_EXTERNAL_DEFAULT, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">true</span>, <span class="literal">NULL</span>,</span><br><span class="line">                                      <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">  <span class="keyword">if</span> (pid &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// The zygote process checks whether the child process has died or not.</span></span><br><span class="line">      <span class="built_in">ALOGI</span>(<span class="string">&quot;System server process %d has been created&quot;</span>, pid);</span><br><span class="line">      gSystemServerPid = pid;</span><br><span class="line">      <span class="comment">// There is a slight window that the system server process has crashed</span></span><br><span class="line">      <span class="comment">// but it went unnoticed because we haven&#x27;t published its pid yet. So</span></span><br><span class="line">      <span class="comment">// we recheck here just to make sure that all is well.</span></span><br><span class="line">      <span class="keyword">int</span> status;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">waitpid</span>(pid, &amp;status, WNOHANG) == pid) &#123;</span><br><span class="line">          <span class="built_in">ALOGE</span>(<span class="string">&quot;System server process %d has died. Restarting Zygote!&quot;</span>, pid);</span><br><span class="line">          <span class="built_in">RuntimeAbort</span>(env, __LINE__, <span class="string">&quot;System server process has died. Restarting Zygote!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Assign system_server to the correct memory cgroup.</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">WriteStringToFile</span>(<span class="built_in">StringPrintf</span>(<span class="string">&quot;%d&quot;</span>, pid), <span class="string">&quot;/dev/memcg/system/tasks&quot;</span>)) &#123;</span><br><span class="line">        <span class="built_in">ALOGE</span>(<span class="string">&quot;couldn&#x27;t write %d to /dev/memcg/system/tasks&quot;</span>, pid);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> pid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>继续跟进去：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">static pid_t ForkAndSpecializeCommon(JNIEnv* env, uid_t uid, gid_t gid, jintArray javaGids,</span><br><span class="line">                                     jint debug_flags, jobjectArray javaRlimits,</span><br><span class="line">                                     jlong permittedCapabilities, jlong effectiveCapabilities,</span><br><span class="line">                                     jint mount_external,</span><br><span class="line">                                     jstring java_se_info, jstring java_se_name,</span><br><span class="line">                                     bool is_system_server, jintArray fdsToClose,</span><br><span class="line">                                     jintArray fdsToIgnore,</span><br><span class="line">                                     jstring instructionSet, jstring dataDir) &#123;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  // 确实调用了fork</span><br><span class="line">  pid_t pid = fork();</span><br><span class="line"></span><br><span class="line">  if (pid == 0) &#123;</span><br><span class="line">    PreApplicationInit();</span><br><span class="line"></span><br><span class="line">    // Clean up any descriptors which must be closed immediately</span><br><span class="line">    DetachDescriptors(env, fdsToClose);</span><br><span class="line"></span><br><span class="line">    // Re-open all remaining open file descriptors so that they aren&#x27;t shared</span><br><span class="line">    // with the zygote across a fork.</span><br><span class="line">    if (!gOpenFdTable-&gt;ReopenOrDetach()) &#123;</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;Unable to reopen whitelisted descriptors.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (sigprocmask(SIG_UNBLOCK, &amp;sigchld, nullptr) == -1) &#123;</span><br><span class="line">      ALOGE(&quot;sigprocmask(SIG_SETMASK, &#123; SIGCHLD &#125;) failed: %s&quot;, strerror(errno));</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;Call to sigprocmask(SIG_UNBLOCK, &#123; SIGCHLD &#125;) failed.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Keep capabilities across UID change, unless we&#x27;re staying root.</span><br><span class="line">    if (uid != 0) &#123;</span><br><span class="line">      EnableKeepCapabilities(env);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SetInheritable(env, permittedCapabilities);</span><br><span class="line">    DropCapabilitiesBoundingSet(env);</span><br><span class="line"></span><br><span class="line">    bool use_native_bridge = !is_system_server &amp;&amp; (instructionSet != NULL)</span><br><span class="line">        &amp;&amp; android::NativeBridgeAvailable();</span><br><span class="line">    if (use_native_bridge) &#123;</span><br><span class="line">      ScopedUtfChars isa_string(env, instructionSet);</span><br><span class="line">      use_native_bridge = android::NeedsNativeBridge(isa_string.c_str());</span><br><span class="line">    &#125;</span><br><span class="line">    if (use_native_bridge &amp;&amp; dataDir == NULL) &#123;</span><br><span class="line">      // dataDir should never be null if we need to use a native bridge.</span><br><span class="line">      // In general, dataDir will never be null for normal applications. It can only happen in</span><br><span class="line">      // special cases (for isolated processes which are not associated with any app). These are</span><br><span class="line">      // launched by the framework and should not be emulated anyway.</span><br><span class="line">      use_native_bridge = false;</span><br><span class="line">      ALOGW(&quot;Native bridge will not be used because dataDir == NULL.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!MountEmulatedStorage(uid, mount_external, use_native_bridge)) &#123;</span><br><span class="line">      ALOGW(&quot;Failed to mount emulated storage: %s&quot;, strerror(errno));</span><br><span class="line">      if (errno == ENOTCONN || errno == EROFS) &#123;</span><br><span class="line">        // When device is actively encrypting, we get ENOTCONN here</span><br><span class="line">        // since FUSE was mounted before the framework restarted.</span><br><span class="line">        // When encrypted device is booting, we get EROFS since</span><br><span class="line">        // FUSE hasn&#x27;t been created yet by init.</span><br><span class="line">        // In either case, continue without external storage.</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        RuntimeAbort(env, __LINE__, &quot;Cannot continue without emulated storage&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (!is_system_server) &#123;</span><br><span class="line">        int rc = createProcessGroup(uid, getpid());</span><br><span class="line">        if (rc != 0) &#123;</span><br><span class="line">            if (rc == -EROFS) &#123;</span><br><span class="line">                ALOGW(&quot;createProcessGroup failed, kernel missing CONFIG_CGROUP_CPUACCT?&quot;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                ALOGE(&quot;createProcessGroup(%d, %d) failed: %s&quot;, uid, pid, strerror(-rc));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SetGids(env, javaGids);</span><br><span class="line"></span><br><span class="line">    SetRLimits(env, javaRlimits);</span><br><span class="line"></span><br><span class="line">    if (use_native_bridge) &#123;</span><br><span class="line">      ScopedUtfChars isa_string(env, instructionSet);</span><br><span class="line">      ScopedUtfChars data_dir(env, dataDir);</span><br><span class="line">      android::PreInitializeNativeBridge(data_dir.c_str(), isa_string.c_str());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int rc = setresgid(gid, gid, gid);</span><br><span class="line">    if (rc == -1) &#123;</span><br><span class="line">      ALOGE(&quot;setresgid(%d) failed: %s&quot;, gid, strerror(errno));</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;setresgid failed&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rc = setresuid(uid, uid, uid);</span><br><span class="line">    if (rc == -1) &#123;</span><br><span class="line">      ALOGE(&quot;setresuid(%d) failed: %s&quot;, uid, strerror(errno));</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;setresuid failed&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (NeedsNoRandomizeWorkaround()) &#123;</span><br><span class="line">        // Work around ARM kernel ASLR lossage (http://b/5817320).</span><br><span class="line">        int old_personality = personality(0xffffffff);</span><br><span class="line">        int new_personality = personality(old_personality | ADDR_NO_RANDOMIZE);</span><br><span class="line">        if (new_personality == -1) &#123;</span><br><span class="line">            ALOGW(&quot;personality(%d) failed: %s&quot;, new_personality, strerror(errno));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SetCapabilities(env, permittedCapabilities, effectiveCapabilities, permittedCapabilities);</span><br><span class="line"></span><br><span class="line">    SetSchedulerPolicy(env);</span><br><span class="line"></span><br><span class="line">    const char* se_info_c_str = NULL;</span><br><span class="line">    ScopedUtfChars* se_info = NULL;</span><br><span class="line">    if (java_se_info != NULL) &#123;</span><br><span class="line">        se_info = new ScopedUtfChars(env, java_se_info);</span><br><span class="line">        se_info_c_str = se_info-&gt;c_str();</span><br><span class="line">        if (se_info_c_str == NULL) &#123;</span><br><span class="line">          RuntimeAbort(env, __LINE__, &quot;se_info_c_str == NULL&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    const char* se_name_c_str = NULL;</span><br><span class="line">    ScopedUtfChars* se_name = NULL;</span><br><span class="line">    if (java_se_name != NULL) &#123;</span><br><span class="line">        se_name = new ScopedUtfChars(env, java_se_name);</span><br><span class="line">        se_name_c_str = se_name-&gt;c_str();</span><br><span class="line">        if (se_name_c_str == NULL) &#123;</span><br><span class="line">          RuntimeAbort(env, __LINE__, &quot;se_name_c_str == NULL&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rc = selinux_android_setcontext(uid, is_system_server, se_info_c_str, se_name_c_str);</span><br><span class="line">    if (rc == -1) &#123;</span><br><span class="line">      ALOGE(&quot;selinux_android_setcontext(%d, %d, \&quot;%s\&quot;, \&quot;%s\&quot;) failed&quot;, uid,</span><br><span class="line">            is_system_server, se_info_c_str, se_name_c_str);</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;selinux_android_setcontext failed&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Make it easier to debug audit logs by setting the main thread&#x27;s name to the</span><br><span class="line">    // nice name rather than &quot;app_process&quot;.</span><br><span class="line">    if (se_info_c_str == NULL &amp;&amp; is_system_server) &#123;</span><br><span class="line">      se_name_c_str = &quot;system_server&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    if (se_info_c_str != NULL) &#123;</span><br><span class="line">      SetThreadName(se_name_c_str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    delete se_info;</span><br><span class="line">    delete se_name;</span><br><span class="line"></span><br><span class="line">    UnsetSigChldHandler();</span><br><span class="line"></span><br><span class="line">    env-&gt;CallStaticVoidMethod(gZygoteClass, gCallPostForkChildHooks, debug_flags,</span><br><span class="line">                              is_system_server, instructionSet);</span><br><span class="line">    if (env-&gt;ExceptionCheck()) &#123;</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;Error calling post fork hooks.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else if (pid &gt; 0) &#123;</span><br><span class="line">    // the parent process</span><br><span class="line"></span><br><span class="line">    // We blocked SIGCHLD prior to a fork, we unblock it here.</span><br><span class="line">    if (sigprocmask(SIG_UNBLOCK, &amp;sigchld, nullptr) == -1) &#123;</span><br><span class="line">      ALOGE(&quot;sigprocmask(SIG_SETMASK, &#123; SIGCHLD &#125;) failed: %s&quot;, strerror(errno));</span><br><span class="line">      RuntimeAbort(env, __LINE__, &quot;Call to sigprocmask(SIG_UNBLOCK, &#123; SIGCHLD &#125;) failed.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return pid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  // anonymous namespace</span><br></pre></td></tr></table></figure><p>同时在ZygoteInit中，我们可以发现，在fork出SystemServer后，Zygote会进入一个循环，等待 Activity Manager Service (AMS) 或其他进程来请求新的应用程序进程。这个循环是通过调用 <code>runSelectLoop</code> 方法实现的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">Runnable runSelectLoop(String abiList) &#123;</span><br><span class="line">        ArrayList&lt;FileDescriptor&gt; fds = new ArrayList&lt;FileDescriptor&gt;();</span><br><span class="line">        ArrayList&lt;ZygoteConnection&gt; peers = new ArrayList&lt;ZygoteConnection&gt;();</span><br><span class="line"></span><br><span class="line">        fds.add(mServerSocket.getFileDescriptor());</span><br><span class="line">        peers.add(null);</span><br><span class="line"></span><br><span class="line">        while (true) &#123;</span><br><span class="line">            StructPollfd[] pollFds = new StructPollfd[fds.size()];</span><br><span class="line">            for (int i = 0; i &lt; pollFds.length; ++i) &#123;</span><br><span class="line">                pollFds[i] = new StructPollfd();</span><br><span class="line">                pollFds[i].fd = fds.get(i);</span><br><span class="line">                pollFds[i].events = (short) POLLIN;</span><br><span class="line">            &#125;</span><br><span class="line">            try &#123;</span><br><span class="line">                Os.poll(pollFds, -1);</span><br><span class="line">            &#125; catch (ErrnoException ex) &#123;</span><br><span class="line">                throw new RuntimeException(&quot;poll failed&quot;, ex);</span><br><span class="line">            &#125;</span><br><span class="line">            for (int i = pollFds.length - 1; i &gt;= 0; --i) &#123;</span><br><span class="line">                if ((pollFds[i].revents &amp; POLLIN) == 0) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (i == 0) &#123;</span><br><span class="line">                    ZygoteConnection newPeer = acceptCommandPeer(abiList);</span><br><span class="line">                    peers.add(newPeer);</span><br><span class="line">                    fds.add(newPeer.getFileDesciptor());</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    try &#123;</span><br><span class="line">                        ZygoteConnection connection = peers.get(i);</span><br><span class="line">                        final Runnable command = connection.processOneCommand(this);</span><br><span class="line"></span><br><span class="line">                        if (mIsForkChild) &#123;</span><br><span class="line">                            // We&#x27;re in the child. We should always have a command to run at this</span><br><span class="line">                            // stage if processOneCommand hasn&#x27;t called &quot;exec&quot;.</span><br><span class="line">                            if (command == null) &#123;</span><br><span class="line">                                throw new IllegalStateException(&quot;command == null&quot;);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            return command;</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            // We&#x27;re in the server - we should never have any commands to run.</span><br><span class="line">                            if (command != null) &#123;</span><br><span class="line">                                throw new IllegalStateException(&quot;command != null&quot;);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            // We don&#x27;t know whether the remote side of the socket was closed or</span><br><span class="line">                            // not until we attempt to read from it from processOneCommand. This shows up as</span><br><span class="line">                            // a regular POLLIN event in our regular processing loop.</span><br><span class="line">                            if (connection.isClosedByPeer()) &#123;</span><br><span class="line">                                connection.closeSocket();</span><br><span class="line">                                peers.remove(i);</span><br><span class="line">                                fds.remove(i);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; catch (Exception e) &#123;</span><br><span class="line">                        if (!mIsForkChild) &#123;</span><br><span class="line">                            // We&#x27;re in the server so any exception here is one that has taken place</span><br><span class="line">                            // pre-fork while processing commands or reading / writing from the</span><br><span class="line">                            // control socket. Make a loud noise about any such exceptions so that</span><br><span class="line">                            // we know exactly what failed and why.</span><br><span class="line"></span><br><span class="line">                            Slog.e(TAG, &quot;Exception executing zygote command: &quot;, e);</span><br><span class="line"></span><br><span class="line">                            // Make sure the socket is closed so that the other end knows immediately</span><br><span class="line">                            // that something has gone wrong and doesn&#x27;t time out waiting for a</span><br><span class="line">                            // response.</span><br><span class="line">                            ZygoteConnection conn = peers.remove(i);</span><br><span class="line">                            conn.closeSocket();</span><br><span class="line"></span><br><span class="line">                            fds.remove(i);</span><br><span class="line">                        &#125; else &#123;</span><br><span class="line">                            // We&#x27;re in the child so any exception caught here has happened post</span><br><span class="line">                            // fork and before we execute ActivityThread.main (or any other main()</span><br><span class="line">                            // method). Log the details of the exception and bring down the process.</span><br><span class="line">                            Log.e(TAG, &quot;Caught post-fork exception in child process.&quot;, e);</span><br><span class="line">                            throw e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结：</p><p>Zygote 进程是从 init.rc 脚本中启动的。Zygote 进程本质上是一个服务端 Socket，它会一直运行，等待新的进程请求。在创建 Zygote 进程时，会携带 StartSystemServer 参数，这个参数会触发 Zygote 进程创建 SystemServer 子进程。SystemServer 进程是通过 Zygote 进程 fork 出来的，它的启动是由 ZygoteInit 通过反射的方式调用 SystemServer 的 main 方法实现的。</p><p>Zygote 进程在启动时创建了一个服务端 Socket，这个 Socket 用于与 SystemServer 进程的通信。当 SystemServer 进程创建完成后，Zygote 进程会关闭与 SystemServer 进程的 Socket 连接。此时，Zygote 进程已经完成了它的主要任务，它会进入一个循环，等待 Activity Manager Service (AMS) 或其他进程来请求新的应用程序进程。这个循环是通过调用 runSelectLoop 方法实现的。</p><p>请注意，Zygote 进程本身并不会关闭或销毁，它会一直运行，等待新的进程请求。而与 SystemServer 进程的 Socket 连接在 SystemServer 进程创建完成后就会关闭，因为此时已经没有必要维持这个连接了。</p><h4 id="SystemServer启动">SystemServer启动</h4><p>SystemServer是通过Zygote启动的，在ZygoteInit.java类的main通过forkSystemServer启动</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span> </span>&#123;</span><br><span class="line">    ....</span><br><span class="line">        <span class="comment">//设置变量区分是否启动SystemServer</span></span><br><span class="line">        <span class="keyword">boolean</span> startSystemServer = <span class="keyword">false</span>;</span><br><span class="line">    String socketName = <span class="string">&quot;zygote&quot;</span>;</span><br><span class="line">    String abiList = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">boolean</span> enableLazyPreload = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; argv.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;start-system-server&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">            <span class="comment">// 需要启动时候，将标志位设置为true</span></span><br><span class="line">            startSystemServer = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;--enable-lazy-preload&quot;</span>.equals(argv[i])) &#123;</span><br><span class="line">            enableLazyPreload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        ... ...</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (startSystemServer) &#123;</span><br><span class="line">                <span class="comment">// 通过 Zygote  fork 出 SystemServer </span></span><br><span class="line">                Runnable r = forkSystemServer(abiList, socketName, zygoteServer);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// &#123;@code r == null&#125; in the parent (zygote) process, and &#123;@code r != null&#125; in the</span></span><br><span class="line">                <span class="comment">// child (system_server) process.</span></span><br><span class="line">                <span class="keyword">if</span> (r != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    r.run();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>SystemServer启动入门main方法：</p><p>main入口通过<code>new SystemServer().run()</code>，开启SystemServer启动</p><p>main入口代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new SystemServer().run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到调用了SystemServer的run方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">private void run() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            traceBeginAndSlog(&quot;InitBeforeStartServices&quot;);</span><br><span class="line">            //初始化时间</span><br><span class="line">            if (System.currentTimeMillis() &lt; EARLIEST_SUPPORTED_TIME) &#123;</span><br><span class="line">                Slog.w(TAG, &quot;System clock is before 1970; setting to 1970.&quot;);</span><br><span class="line">                SystemClock.setCurrentTimeMillis(EARLIEST_SUPPORTED_TIME);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            //设置默认时区</span><br><span class="line">            String timezoneProperty =  SystemProperties.get(&quot;persist.sys.timezone&quot;);</span><br><span class="line">            if (timezoneProperty == null || timezoneProperty.isEmpty()) &#123;</span><br><span class="line">                Slog.w(TAG, &quot;Timezone not set; setting to GMT.&quot;);</span><br><span class="line">                SystemProperties.set(&quot;persist.sys.timezone&quot;, &quot;GMT&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            ... ... </span><br><span class="line"> </span><br><span class="line">            // 开始进入Android SystemServer</span><br><span class="line">            Slog.i(TAG, &quot;Entered the Android system server!&quot;);</span><br><span class="line">            int uptimeMillis = (int) SystemClock.elapsedRealtime();</span><br><span class="line">            EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_SYSTEM_RUN, uptimeMillis);</span><br><span class="line">            if (!mRuntimeRestart) &#123;</span><br><span class="line">                MetricsLogger.histogram(null, &quot;boot_system_server_init&quot;, uptimeMillis);</span><br><span class="line">            &#125;</span><br><span class="line">            ... ...</span><br><span class="line"> </span><br><span class="line">            //如果支持指纹，需初始化指纹ro.build.fingerprint</span><br><span class="line">            Build.ensureFingerprintProperty();</span><br><span class="line"> </span><br><span class="line">            ... ...</span><br><span class="line">                </span><br><span class="line">            // 初始化 native services.</span><br><span class="line">            System.loadLibrary(&quot;android_servers&quot;);</span><br><span class="line"> </span><br><span class="line">            // 检查最近一次关机是否失败</span><br><span class="line">            performPendingShutdown();</span><br><span class="line"> </span><br><span class="line">            // 初始化 the system context.</span><br><span class="line">            createSystemContext();</span><br><span class="line"> </span><br><span class="line">            // 创建 system service manager.</span><br><span class="line">            mSystemServiceManager = new SystemServiceManager(mSystemContext);</span><br><span class="line">            mSystemServiceManager.setStartInfo(mRuntimeRestart,</span><br><span class="line">                    mRuntimeStartElapsedTime, mRuntimeStartUptime);</span><br><span class="line">            LocalServices.addService(SystemServiceManager.class, mSystemServiceManager);</span><br><span class="line">            // 初始化SystemServer 线程池</span><br><span class="line">            SystemServerInitThreadPool.get();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            traceEnd();  // InitBeforeStartServices</span><br><span class="line">        &#125;</span><br><span class="line">         ... ...</span><br><span class="line">         </span><br><span class="line">        // 开始启动 services.</span><br><span class="line">        try &#123;</span><br><span class="line">            traceBeginAndSlog(&quot;StartServices&quot;);</span><br><span class="line">        // 1. 启动引导服务  详见分析六</span><br><span class="line">            startBootstrapServices();</span><br><span class="line">            // 2. 启动核心服务  详见分析七</span><br><span class="line">            startCoreServices();</span><br><span class="line">            // 3.启动其他服务  详见分析八</span><br><span class="line">            startOtherServices();</span><br><span class="line">            SystemServerInitThreadPool.shutdown();</span><br><span class="line">        &#125; catch (Throwable ex) &#123;</span><br><span class="line">            Slog.e(&quot;System&quot;, &quot;******************************************&quot;);</span><br><span class="line">            Slog.e(&quot;System&quot;, &quot;************ Failure starting system services&quot;, ex);</span><br><span class="line">            throw ex;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            traceEnd();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        StrictMode.initVmDefaults(null);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>从run方法中，我们可以看到SystemServer的启动主要做了以下工作：</p><ol><li>进行启动时间、日志、heapprofd、严苛模式等性能采集相关的基本设置，以及进程优先级、binder、虚拟机内存等保障SystemServer正常运行的基本设置。</li><li>创建SystemContext上下文</li><li>创建SystemServiceManager，通过startBootstrapServices（关键引导服务）、startCoreServices（核心服务）、startOtherServices（其他各路混杂的服务）、startApexServices等启动各类服务</li><li>启动looper。</li></ol><p>在startBootstrapServices、startCoreServices、startOtherServices、startApexServices中，对各类服务进行了启动，比如我们常见的ActivityManagerService、PackageManagerService、BatteryService等等，共近百个Service。而对Service启动的方式是相似的，以startBootstrapServices为例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 有很复杂的依赖关系，所以要优先启动    </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBootstrapServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Slog.i(TAG, <span class="string">&quot;Reading configuration...&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> String TAG_SYSTEM_CONFIG = <span class="string">&quot;ReadingSystemConfig&quot;</span>;</span><br><span class="line">        traceBeginAndSlog(TAG_SYSTEM_CONFIG);</span><br><span class="line">        SystemServerInitThreadPool.get().submit(SystemConfig::getInstance, TAG_SYSTEM_CONFIG);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Wait for installd to finish starting up so that it has a chance to</span></span><br><span class="line">        <span class="comment">// create critical directories such as /data/user with the appropriate</span></span><br><span class="line">        <span class="comment">// permissions.  We need this to complete before we initialize other services.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartInstaller&quot;</span>);</span><br><span class="line">        Installer installer = mSystemServiceManager.startService(Installer.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// In some cases after launching an app we need to access device identifiers,</span></span><br><span class="line">        <span class="comment">// therefore register the device identifier policy before the activity manager.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;DeviceIdentifiersPolicyService&quot;</span>);</span><br><span class="line">        mSystemServiceManager.startService(DeviceIdentifiersPolicyService.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Activity manager runs the show.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartActivityManager&quot;</span>);</span><br><span class="line">        mActivityManagerService = mSystemServiceManager.startService(</span><br><span class="line">                ActivityManagerService.Lifecycle.class).getService();</span><br><span class="line">        mActivityManagerService.setSystemServiceManager(mSystemServiceManager);</span><br><span class="line">        mActivityManagerService.setInstaller(installer);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Power manager needs to be started early because other services need it.</span></span><br><span class="line">        <span class="comment">// Native daemons may be watching for it to be registered so it must be ready</span></span><br><span class="line">        <span class="comment">// to handle incoming binder calls immediately (including being able to verify</span></span><br><span class="line">        <span class="comment">// the permissions for those calls).</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartPowerManager&quot;</span>);</span><br><span class="line">        mPowerManagerService = mSystemServiceManager.startService(PowerManagerService.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now that the power manager has been started, let the activity manager</span></span><br><span class="line">        <span class="comment">// initialize power management features.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;InitPowerManagement&quot;</span>);</span><br><span class="line">        mActivityManagerService.initPowerManagement();</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Bring up recovery system in case a rescue party needs a reboot</span></span><br><span class="line">        <span class="keyword">if</span> (!SystemProperties.getBoolean(<span class="string">&quot;config.disable_noncore&quot;</span>, <span class="keyword">false</span>)) &#123;</span><br><span class="line">            traceBeginAndSlog(<span class="string">&quot;StartRecoverySystemService&quot;</span>);</span><br><span class="line">            mSystemServiceManager.startService(RecoverySystemService.class);</span><br><span class="line">            traceEnd();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now that we have the bare essentials of the OS up and running, take</span></span><br><span class="line">        <span class="comment">// note that we just booted, which might send out a rescue party if</span></span><br><span class="line">        <span class="comment">// we&#x27;re stuck in a runtime restart loop.</span></span><br><span class="line">        RescueParty.noteBoot(mSystemContext);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Manages LEDs and display backlight so we need it to bring up the display.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartLightsService&quot;</span>);</span><br><span class="line">        mSystemServiceManager.startService(LightsService.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Display manager is needed to provide display metrics before package manager</span></span><br><span class="line">        <span class="comment">// starts up.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartDisplayManager&quot;</span>);</span><br><span class="line">        mDisplayManagerService = mSystemServiceManager.startService(DisplayManagerService.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We need the default display before we can initialize the package manager.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;WaitForDisplay&quot;</span>);</span><br><span class="line">        mSystemServiceManager.startBootPhase(SystemService.PHASE_WAIT_FOR_DEFAULT_DISPLAY);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Only run &quot;core&quot; apps if we&#x27;re encrypting the device.</span></span><br><span class="line">        String cryptState = SystemProperties.get(<span class="string">&quot;vold.decrypt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ENCRYPTING_STATE.equals(cryptState)) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">&quot;Detected encryption in progress - only parsing core apps&quot;</span>);</span><br><span class="line">            mOnlyCore = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ENCRYPTED_STATE.equals(cryptState)) &#123;</span><br><span class="line">            Slog.w(TAG, <span class="string">&quot;Device encrypted - only parsing core apps&quot;</span>);</span><br><span class="line">            mOnlyCore = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start the package manager.</span></span><br><span class="line">        <span class="keyword">if</span> (!mRuntimeRestart) &#123;</span><br><span class="line">            MetricsLogger.histogram(<span class="keyword">null</span>, <span class="string">&quot;boot_package_manager_init_start&quot;</span>,</span><br><span class="line">                    (<span class="keyword">int</span>) SystemClock.elapsedRealtime());</span><br><span class="line">        &#125;</span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartPackageManagerService&quot;</span>);</span><br><span class="line">        mPackageManagerService = PackageManagerService.main(mSystemContext, installer,</span><br><span class="line">                mFactoryTestMode != FactoryTest.FACTORY_TEST_OFF, mOnlyCore);</span><br><span class="line">        mFirstBoot = mPackageManagerService.isFirstBoot();</span><br><span class="line">        mPackageManager = mSystemContext.getPackageManager();</span><br><span class="line">        traceEnd();</span><br><span class="line">        <span class="keyword">if</span> (!mRuntimeRestart &amp;&amp; !isFirstBootOrUpgrade()) &#123;</span><br><span class="line">            MetricsLogger.histogram(<span class="keyword">null</span>, <span class="string">&quot;boot_package_manager_init_ready&quot;</span>,</span><br><span class="line">                    (<span class="keyword">int</span>) SystemClock.elapsedRealtime());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Manages A/B OTA dexopting. This is a bootstrap service as we need it to rename</span></span><br><span class="line">        <span class="comment">// A/B artifacts after boot, before anything else might touch/need them.</span></span><br><span class="line">        <span class="comment">// Note: this isn&#x27;t needed during decryption (we don&#x27;t have /data anyways).</span></span><br><span class="line">        <span class="keyword">if</span> (!mOnlyCore) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> disableOtaDexopt = SystemProperties.getBoolean(<span class="string">&quot;config.disable_otadexopt&quot;</span>,</span><br><span class="line">                    <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (!disableOtaDexopt) &#123;</span><br><span class="line">                traceBeginAndSlog(<span class="string">&quot;StartOtaDexOptService&quot;</span>);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    OtaDexoptService.main(mSystemContext, mPackageManagerService);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">                    reportWtf(<span class="string">&quot;starting OtaDexOptService&quot;</span>, e);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    traceEnd();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartUserManagerService&quot;</span>);</span><br><span class="line">        mSystemServiceManager.startService(UserManagerService.LifeCycle.class);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Initialize attribute cache used to cache resources from packages.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;InitAttributerCache&quot;</span>);</span><br><span class="line">        AttributeCache.init(mSystemContext);</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set up the Application instance for the system process and get started.</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;SetSystemProcess&quot;</span>);</span><br><span class="line">        mActivityManagerService.setSystemProcess();</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// DisplayManagerService needs to setup android.display scheduling related policies</span></span><br><span class="line">        <span class="comment">// since setSystemProcess() would have overridden policies due to setProcessGroup</span></span><br><span class="line">        mDisplayManagerService.setupSchedulerPolicies();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Manages Overlay packages</span></span><br><span class="line">        traceBeginAndSlog(<span class="string">&quot;StartOverlayManagerService&quot;</span>);</span><br><span class="line">        mSystemServiceManager.startService(<span class="keyword">new</span> OverlayManagerService(mSystemContext, installer));</span><br><span class="line">        traceEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The sensor service needs access to package manager service, app ops</span></span><br><span class="line">        <span class="comment">// service, and permissions service, therefore we start it after them.</span></span><br><span class="line">        <span class="comment">// Start sensor service in a separate thread. Completion should be checked</span></span><br><span class="line">        <span class="comment">// before using it.</span></span><br><span class="line">        mSensorServiceStart = SystemServerInitThreadPool.get().submit(() -&gt; &#123;</span><br><span class="line">            TimingsTraceLog traceLog = <span class="keyword">new</span> TimingsTraceLog(</span><br><span class="line">                    SYSTEM_SERVER_TIMING_ASYNC_TAG, Trace.TRACE_TAG_SYSTEM_SERVER);</span><br><span class="line">            traceLog.traceBegin(START_SENSOR_SERVICE);</span><br><span class="line">            startSensorService();</span><br><span class="line">            traceLog.traceEnd();</span><br><span class="line">        &#125;, START_SENSOR_SERVICE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>而在startOtherServices中，对有这样一些处理：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">(<span class="meta">@NonNull</span> TimingsTraceAndSlog t)</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    ServiceManager.addService(<span class="string">&quot;scheduling_policy&quot;</span>, <span class="keyword">new</span> SchedulingPolicyService());</span><br><span class="line">    mSystemServiceManager.startService(ACCOUNT_SERVICE_CLASS);</span><br><span class="line">    wm = <span class="function">Window </span></span><br><span class="line"><span class="function">new <span class="title">PhoneWindowManager</span><span class="params">()</span>,     mActivityManagerService.mActivityTaskManager)</span>;</span><br><span class="line">    ServiceManager.addService(Context.WINDOW_SERVICE, wm, <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>, DUMP_FLAG_PRIORITY_CRITICAL | DUMP_FLAG_PROTO);</span><br><span class="line">    mActivityManagerService.setWindowManager(wm);</span><br><span class="line">    ...</span><br><span class="line">    mSystemServiceManager.startServiceFromJar(</span><br><span class="line">                        WIFI_SERVICE_CLASS, WIFI_APEX_SERVICE_JAR_PATH);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>startOtherServices里处理的服务要比其他三个方法里庞杂的多，但综上，SystemServer对服务的管理主要有以下方式：</p><p>mSystemServiceManager.startService – 启动一个服务<br>mSystemServiceManager.startBootPhase – 广播所有已启动的服务当前的启动阶段<br>ServiceManager.addService – 将服务纳入ServiceManager进行管理<br>ServiceManager是一个handler为0的binder service，将服务addServer(key, service)到ServiceManager后，可以通过key轻松获取对应服务。所有SystemServer启动的Service都被加入到了ServiceManager中。因此后续直接通过key获取到对应Service的binder服务端</p><p>SystemServiceManager是SystemServer在本地集中启动、管理各Service的管理类，所有Service必须继承SystemService</p><p>用下面的图来表示各个角色的关系：</p><p><img src="https://img-blog.csdnimg.cn/direct/b67a3743dc6747edb48ba91e5592ed8c.png" alt=""></p><p>使用<code>service list</code>命令可以查看有多少服务</p><h4 id="system-server获取HomeActivity及启动对应进程">system_server获取HomeActivity及启动对应进程</h4><p>我们知道在<code>startOtherService</code>里面不仅仅会<code>start</code>系统服务，等系统服务都启动完成后，还会调用各个<code>Service</code>的<code>systemReady</code>方法，这里需要分析首个<code>Activity</code>的启动，即常见的<code>Launcher</code>，当然是从<code>ActivityManagerService</code>开始分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">systemReady</span><span class="params">(<span class="keyword">final</span> Runnable goingCallback, TimingsTraceLog traceLog)</span> </span>&#123;</span><br><span class="line">   <span class="comment">// 省略</span></span><br><span class="line">    <span class="keyword">synchronized</span>(<span class="keyword">this</span>) &#123;</span><br><span class="line">       <span class="comment">// 省略</span></span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="comment">// 省略</span></span><br><span class="line">        startHomeActivityLocked(currentUserId, <span class="string">&quot;systemReady&quot;</span>);</span><br><span class="line">   <span class="comment">// 省略</span></span><br><span class="line">        mStackSupervisor.resumeFocusedStackTopActivityLocked();</span><br><span class="line">          <span class="comment">// 省略</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​这里对大部分不是分析的核心代码进行了省略，这里看到了<code>startHomeActivityLocked(currentUserId, “systemReady”);</code>被调用，从名字既可以看得出他是要启动<code>Home</code>类型的<code>Activtiy</code>，常见的<code>Launcher</code>就是一种<code>Home</code>类型的<code>Activity</code>，但这里其实并不是<code>Launcher</code>，而是设置中的<code>FallbackHome</code>类型的，它也是一个<code>Home</code>类型的<code>Activity</code>，这里<code>FallbackHome</code>是<code>google</code>新加入的，主要就是因为涉及整个<code>android</code>系统的加密等原因，系统在还没有完全解锁前，不可以启动<code>Launcher</code>，因为<code>Launcher</code>中明显和各个第三方应用耦合较多（比如桌面可能显示着一堆的各个应用的<code>Widget</code>），如果直接<code>Launcher</code>作为<code>FallbackHome</code>启动，相对就会要求<code>Launcher</code>依赖的应用也是支持直接解密类型，那就肯定不现实。所以就先启动了<code>FallbackHome</code>一个什么也不显示的界面来作为启动真正<code>Launcher</code>的一个过度。</p><p>那来分析一下，到底是怎么启动<code>FallbackHome</code>，又是凭什么确定就是<code>FallbackHome</code>？接下来继续分析<code>startHomeActivityLocked</code>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">startHomeActivityLocked</span><span class="params">(<span class="keyword">int</span> userId, String reason)</span> </span>&#123;</span><br><span class="line"><span class="comment">//省略</span></span><br><span class="line"> Intent intent = getHomeIntent();<span class="comment">//获取Home类型的Intent</span></span><br><span class="line">       ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);<span class="comment">//通过PackageManagerService查询出目前系统中可以匹配这个intent的ActivtiyInfo</span></span><br><span class="line">       <span class="keyword">if</span> (aInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">           intent.setComponent(<span class="keyword">new</span> ComponentName(aInfo.applicationInfo.packageName, aInfo.name));</span><br><span class="line">           aInfo = <span class="keyword">new</span> ActivityInfo(aInfo);</span><br><span class="line">           aInfo.applicationInfo = getAppInfoForUser(aInfo.applicationInfo, userId);</span><br><span class="line">           <span class="comment">//判断进程是否启动</span></span><br><span class="line">           ProcessRecord app = getProcessRecordLocked(aInfo.processName,</span><br><span class="line">                   aInfo.applicationInfo.uid, <span class="keyword">true</span>);</span><br><span class="line">           <span class="keyword">if</span> (app == <span class="keyword">null</span> || app.instr == <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="comment">//省略。。</span></span><br><span class="line">               mActivityStarter.startHomeActivityLocked(intent, aInfo, myReason);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; </span><br><span class="line">    <span class="comment">//省略</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Intent <span class="title">getHomeIntent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Intent intent = <span class="keyword">new</span> Intent(mTopAction, mTopData != <span class="keyword">null</span> ? Uri.parse(mTopData) : <span class="keyword">null</span>);</span><br><span class="line">       intent.setComponent(mTopComponent);</span><br><span class="line">       intent.addFlags(Intent.FLAG_DEBUG_TRIAGED_MISSING);</span><br><span class="line">       <span class="keyword">if</span> (mFactoryTest != FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</span><br><span class="line">       <span class="comment">//这里是匹配HomeIntent的核心</span></span><br><span class="line">           intent.addCategory(Intent.CATEGORY_HOME);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> intent;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的<code>getHomeIntent</code>主要就是在<code>Intent</code>中增加 <code>intent.addCategory(Intent.CATEGORY_HOME);</code>即有<code>category</code>为<code>Intent.CATEGORY_HOME</code>的<code>Intent</code><br>这里面比较简单，就是获取了<code>HomeIntent</code>后，然后利用<code>intent</code>进行<code>ActivityInfo</code>获取，然后判断是否还没有启动过该进程，没有则继续调用<code>mActivityStarter.startHomeActivityLocked(intent, aInfo, myReason);</code>调用<code>ActivityStarter</code>里面的<code>startHomeActivityLocked</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startHomeActivityLocked</span><span class="params">(Intent intent, ActivityInfo aInfo, String reason)</span> </span>&#123;</span><br><span class="line">    mSupervisor.moveHomeStackTaskToTop(reason);</span><br><span class="line">    mLastHomeActivityStartResult = startActivityLocked(<span class="keyword">null</span> <span class="comment">/*caller*/</span>, intent,</span><br><span class="line">                                                       <span class="keyword">null</span> <span class="comment">/*ephemeralIntent*/</span>, <span class="keyword">null</span> <span class="comment">/*resolvedType*/</span>, aInfo, <span class="keyword">null</span> <span class="comment">/*rInfo*/</span>,</span><br><span class="line">                                                       <span class="keyword">null</span> <span class="comment">/*voiceSession*/</span>, <span class="keyword">null</span> <span class="comment">/*voiceInteractor*/</span>, <span class="keyword">null</span> <span class="comment">/*resultTo*/</span>,</span><br><span class="line">                                                       <span class="keyword">null</span> <span class="comment">/*resultWho*/</span>, <span class="number">0</span> <span class="comment">/*requestCode*/</span>, <span class="number">0</span> <span class="comment">/*callingPid*/</span>, <span class="number">0</span> <span class="comment">/*callingUid*/</span>,</span><br><span class="line">                                                       <span class="keyword">null</span> <span class="comment">/*callingPackage*/</span>, <span class="number">0</span> <span class="comment">/*realCallingPid*/</span>, <span class="number">0</span> <span class="comment">/*realCallingUid*/</span>,</span><br><span class="line">                                                       <span class="number">0</span> <span class="comment">/*startFlags*/</span>, <span class="keyword">null</span> <span class="comment">/*options*/</span>, <span class="keyword">false</span> <span class="comment">/*ignoreTargetSecurity*/</span>,</span><br><span class="line">                                                       <span class="keyword">false</span> <span class="comment">/*componentSpecified*/</span>, mLastHomeActivityStartRecord <span class="comment">/*outActivity*/</span>,</span><br><span class="line">                                                       <span class="keyword">null</span> <span class="comment">/*inTask*/</span>, <span class="string">&quot;startHomeActivity: &quot;</span> + reason);</span><br><span class="line">    <span class="keyword">if</span> (mSupervisor.inResumeTopActivity) &#123;</span><br><span class="line">        <span class="comment">// If we are in resume section already, home activity will be initialized, but not</span></span><br><span class="line">        <span class="comment">// resumed (to avoid recursive resume) and will stay that way until something pokes it</span></span><br><span class="line">        <span class="comment">// again. We need to schedule another resume.</span></span><br><span class="line">        mSupervisor.scheduleResumeTopActivities();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又调用 <code>startActivity(r, sourceRecord, voiceSession, voiceInteractor, startFlags, true,options, inTask, outActivity);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">startActivity</span><span class="params">(<span class="keyword">final</span> ActivityRecord r, ActivityRecord sourceRecord,</span></span></span><br><span class="line"><span class="params"><span class="function">                          IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,</span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="keyword">int</span> startFlags, <span class="keyword">boolean</span> doResume, ActivityOptions options, TaskRecord inTask,</span></span></span><br><span class="line"><span class="params"><span class="function">                          ActivityRecord[] outActivity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//省略</span></span><br><span class="line">    mService.mWindowManager.deferSurfaceLayout();</span><br><span class="line">    result = startActivityUnchecked(r, sourceRecord, voiceSession, voiceInteractor,</span><br><span class="line">                                    startFlags, doResume, options, inTask, outActivity);</span><br><span class="line">    <span class="comment">//省略</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里又调用到<code>startActivityUnchecked</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">startActivityUnchecked</span><span class="params">(<span class="keyword">final</span> ActivityRecord r, ActivityRecord sourceRecord,</span></span></span><br><span class="line"><span class="params"><span class="function">        IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="keyword">int</span> startFlags, <span class="keyword">boolean</span> doResume, ActivityOptions options, TaskRecord inTask,</span></span></span><br><span class="line"><span class="params"><span class="function">     </span></span></span><br><span class="line"><span class="params"><span class="function">//省略</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">if</span> (mDoResume)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//省略</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="comment">//省略</span></span><br><span class="line">            mSupervisor.resumeFocusedStackTopActivityLocked(mTargetStack, mStartActivity,</span><br><span class="line">                    mOptions);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//省略</span></span><br><span class="line">    <span class="keyword">return</span> START_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用会调用到<code>ActivityStackSupervisor</code>的<code>resumeFocusedStackTopActivityLocked</code>方法：<br><code>mSupervisor.resumeFocusedStackTopActivityLocked(mTargetStack, mStartActivity,mOptions);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">boolean</span> <span class="title">resumeFocusedStackTopActivityLocked</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            ActivityStack targetStack, ActivityRecord target, ActivityOptions targetOptions)</span> </span>&#123;</span><br><span class="line"><span class="comment">//省略</span></span><br><span class="line">        <span class="keyword">if</span> (targetStack != <span class="keyword">null</span> &amp;&amp; isFocusedStack(targetStack)) &#123;</span><br><span class="line">            <span class="keyword">return</span> targetStack.resumeTopActivityUncheckedLocked(target, targetOptions);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//省略</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Android跨进程从入门到精通">Android跨进程从入门到精通</h3><p>binder对于Android系统非常重要，无binder无Android，binder是安卓系统的任督二脉，如果有人问你android相比linux有什么特点，那Android的binder绝对为最大特点。</p><p>常见的binder跨进程通信方式：</p><ul><li>利用Service组件binderService方式获取Binder通信<ul><li>其实这种方法也是先通过ServiceManager获取到对应的AMS，然后再通过AMS相关接口方法传递IBinder对象</li></ul></li><li>直接通过ServiceManager.getService方式获取相关Manager，其实就是IBinder</li></ul><p>那么如何实现跨进程通信呢：</p><p>首先我们需要定义服务端</p><ul><li>定义好C/S架构中要通信的接口，一般使用aidl文件</li><li>编写一个继承服务端Service组件，且注册到Manifest，这个如果C/S都在同一个工程包下需要把Service独立进程运行</li><li>服务端Service对aidl定义的接口的内部Stub接口进行实现和构造成一个IBinder对象，通过Service的onBinder方法进行返回</li></ul><p>然后定义客户端：</p><ul><li>构造一个Intent，包含远程Service，包含类名</li><li>调用bindService，在ServiceConnection的onServiceConnected方法中获取了服务端返回的IBinder对象</li><li>直接使用服务端写好的aidl文件，调用对应的IBinder接口对象的方法，看着像是本地方法的调用，实际上已经调用了远端。</li></ul><ol><li>定义aidl文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">interface IStudentInterface &#123;</span><br><span class="line">    /**</span><br><span class="line">     * Demonstrates some basic types that you can use as parameters</span><br><span class="line">     * and return values in AIDL.</span><br><span class="line">     */</span><br><span class="line">//    void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat,</span><br><span class="line">//            double aDouble, String aString);</span><br><span class="line"></span><br><span class="line">    int getStudentId(String name);</span><br><span class="line">    void setCallback(IChangeCallback callback);</span><br><span class="line"></span><br><span class="line">    String getConvertName(in StudentInfo info);</span><br><span class="line">    void getServiceStudentInfo(out StudentInfo serviceInfo);</span><br><span class="line"></span><br><span class="line">    void getServiceStudentInfoInOut(inout StudentInfo serviceInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>编写一个继承服务端的Service组件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">    IChangeCallback mCallBack = <span class="keyword">null</span>;</span><br><span class="line">    IStudentInterface.Stub mBinder = <span class="keyword">new</span> IStudentInterface.Stub() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStudentId</span><span class="params">(String name)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (name.equals( <span class="string">&quot;helloworld&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mCallBack!= <span class="keyword">null</span>) &#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot; mCallBack changeData result = &quot;</span> + mCallBack.changeData(<span class="number">1111</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span>  <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallback</span><span class="params">(IChangeCallback callback)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">            mCallBack = callback;</span><br><span class="line">            mCallBack.asBinder().linkToDeath(<span class="keyword">new</span> DeathRecipient() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">binderDied</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;linkToDeath binderDied&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getConvertName</span><span class="params">(StudentInfo info)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (info!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                info.name = <span class="string">&quot;hello,this is ConvertName &quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> info.name;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getServiceStudentInfo</span><span class="params">(StudentInfo serviceInfo)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot; getServiceStudentInfo out serviceInfo = &quot;</span> + serviceInfo);</span><br><span class="line">            serviceInfo.id = <span class="string">&quot;100&quot;</span>;</span><br><span class="line">            serviceInfo.name = <span class="string">&quot;this is Service modify out&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getServiceStudentInfoInOut</span><span class="params">(StudentInfo serviceInfo)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot; getServiceStudentInfo inout serviceInfo = &quot;</span> + serviceInfo);</span><br><span class="line">            serviceInfo.id = <span class="string">&quot;-100&quot;</span>;</span><br><span class="line">            serviceInfo.name = <span class="string">&quot;this is Service modify in out&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;MyService onCreate&quot;</span>);</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;MyService onStartCommand intent = &quot;</span> + intent );</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onUnbind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onUnbind(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;MyService onDestroy&quot;</span>);</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:process</span>=<span class="string">&quot;:myservice&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>客户端对服务端的调用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">FloatingActionButton fab = findViewById(R.id.fab);</span><br><span class="line">        fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MyService.class);</span><br><span class="line">            <span class="comment">//    startService(intent);</span></span><br><span class="line">                bindService(intent, <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">                        IStudentInterface remoteInterface = IStudentInterface.Stub.asInterface(service);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            remoteInterface.setCallback(<span class="keyword">new</span> CallbackeService());</span><br><span class="line">                            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceConnected remoteInterface getStudentId = &quot;</span> + remoteInterface.getStudentId(<span class="string">&quot;helloworld&quot;</span>));</span><br><span class="line">                            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceConnected remoteInterface getStudentId = &quot;</span> + remoteInterface.getStudentId(<span class="string">&quot;no&quot;</span>));</span><br><span class="line">                            <span class="comment">/***************************************************************/</span></span><br><span class="line">                            StudentInfo studentInfoIn = <span class="keyword">new</span> StudentInfo();</span><br><span class="line">                            studentInfoIn.setId(<span class="string">&quot;200&quot;</span>);</span><br><span class="line">                            studentInfoIn.setName(<span class="string">&quot;client&quot;</span>);</span><br><span class="line">                            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceConnected remoteInterface getConvertName = &quot;</span> +remoteInterface.getConvertName(studentInfoIn ) + <span class="string">&quot; studentInfoIn = &quot;</span> + studentInfoIn);</span><br><span class="line">                            <span class="comment">/***************************************************************/</span></span><br><span class="line">                            StudentInfo studentInfoOut = <span class="keyword">new</span> StudentInfo();</span><br><span class="line">                            studentInfoOut.setId(<span class="string">&quot;200+&quot;</span>);</span><br><span class="line">                            studentInfoOut.setName(<span class="string">&quot;clientOut&quot;</span>);</span><br><span class="line">                            remoteInterface.getServiceStudentInfo(studentInfoOut);</span><br><span class="line">                            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceConnected remoteInterface getServiceStudentInfo = &quot;</span> + studentInfoOut);</span><br><span class="line"></span><br><span class="line">                            <span class="comment">/***************************************************************/</span></span><br><span class="line">                            StudentInfo studentInfoInOut = <span class="keyword">new</span> StudentInfo();</span><br><span class="line">                            studentInfoInOut.setId(<span class="string">&quot;2001&quot;</span>);</span><br><span class="line">                            studentInfoInOut.setName(<span class="string">&quot;clientInOut&quot;</span>);</span><br><span class="line">                            remoteInterface.getServiceStudentInfoInOut(studentInfoInOut);</span><br><span class="line">                            Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceConnected remoteInterface getServiceStudentInfoInOut = &quot;</span> + studentInfoInOut);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line">                        Log.i(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;client onServiceDisconnected name = &quot;</span> +name);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, BIND_AUTO_CREATE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="binder的aidl工具生成java源码分析">binder的aidl工具生成java源码分析</h4><ul><li>为什么要有aidl，它存在的意义是什么</li></ul><p>aidl最后会通过一个.exe把整个aidl文件转换为对应的Java文件，那么为什么不直接使用Java文件呢？</p><p>有下面两个原因</p><ul><li>如果使用Java语言，要编写很多重复的固定的代码，代码量大，稍不小心容易出错</li><li>这一部分可以让脚本根据某些配置文件来生成对应的Java代码，而这个配置文件正类似我们看到的aidl文件</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;handler&quot;&gt;handler&lt;/h2&gt;
&lt;h3 id=&quot;handler的原理&quot;&gt;handler的原理&lt;/h3&gt;
&lt;p&gt;handler主要用来做线程通信。handler的核心是解决线程切换。&lt;/p&gt;
&lt;p&gt;接下来，我们去实现一个Hand</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/python/python/"/>
    <id>http://example.com/2024/06/25/python/python/</id>
    <published>2024-06-25T14:57:58.407Z</published>
    <updated>2024-05-01T15:50:14.294Z</updated>
    
    <content type="html"><![CDATA[<h1>Python</h1><p>[TOC]</p><h2 id="面向对象">面向对象</h2><blockquote><p>相比较函数，面向对象是更大的封装，根据职责在一个对象中封装多个方法。</p></blockquote><p>特点：</p><ol><li>注重<strong>对象和职责</strong>，不同的对象承担不同的职责。</li><li>更加适合应对复杂的需求变化，是专门应对复杂项目开发，提供固定的套路。</li><li>需要在面向过程的基础上，再学习一些面向对象的语法。</li></ol><h3 id="类和对象">类和对象</h3><p>类</p><ul><li><strong>类</strong>是对一群具有相同特征或者行为的事物的一个统称，是抽象的，不能直接使用<ul><li>特征被称为属性</li><li>行为被称为方法</li></ul></li><li>类就相当于制造飞机的图纸，是一个模板，是负责创建对象的。</li></ul><p>对象</p><ul><li>对象是由类创建出来的一个具体存在，可以直接使用</li><li>由哪一个类创建出来的对象，就拥有在哪一个类中定义的<ul><li>属性</li><li>方法</li></ul></li><li>对象就相当于用图纸制造飞机</li></ul><blockquote><p>在程序开发中，应该现有类再有对象</p></blockquote><h3 id="类和对象的关系">类和对象的关系</h3><ul><li>类是模板。对象是根据类这个模板创建出来的，应该先有类，再有对象</li><li>类只有一个，而对象可以有很多个<ul><li>不同的对象之间属性可能会各不相同</li></ul></li><li>类中定义了什么属性和方法，对象中就有什么属性和方法，不可能多，也不可能少。</li></ul><h3 id="类的设计">类的设计</h3><p>在程序开发中，要设计一个类，通常要满足以下三个要素</p><ol><li>类名：这类事物的名字，满足大驼峰命名法</li><li>属性：这类事物具有什么样的特征</li><li>方法：这类事物具有什么样的行为</li></ol><h3 id="大驼峰命名法">大驼峰命名法</h3><p><code>CapWords</code></p><ol><li>每一个单词的首字母大写</li><li>单词与单词之间没有下划线</li></ol><h3 id="属性和方法的确定">属性和方法的确定</h3><ul><li>对对象特征描述，通常可以定义为属性</li><li>对象具有的行为，通常可以定义为方法</li></ul><h3 id="面向对象基础语法">面向对象基础语法</h3><p>目标</p><ul><li><code>dir</code>内置函数</li><li>定义简单的类(只包含方法)</li><li>方法中的<code>self</code>函数</li><li>初始化方法</li><li>内置方法和属性</li></ul><h4 id="dir内置函数">dir内置函数</h4><ul><li>在Python中对象几乎是无所不在，我们之前学习的变量，数据，函数都是对象</li></ul><p>在Python中可以使用下面的方法验证：</p><ol><li>在标识符/数据后输入一个<code>.</code>,然后按下<code>TAB</code>键，iPython会提示该对象能够调用的方法列表</li><li>使用内置函数<code>dir</code>传入标识符/数据，可以看到对象内的所有属性和方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    gl_list = []</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">dir</span>(gl_list))</span><br></pre></td></tr></table></figure><p>提示<code>__方法名__</code>格式的方法是Python提供的内置方法/属性，稍后会给大家介绍一些常用的内置方法/属性</p><table><thead><tr><th>序号</th><th>方法名</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>_<em>new</em>_</td><td>方法</td><td>创建对象时会自动调用</td></tr><tr><td>02</td><td>_<em>init</em>_</td><td>方法</td><td>对象初始化时，会被自动调用</td></tr><tr><td>03</td><td>_<em>del</em>_</td><td>方法</td><td>对象被从内存中销毁前，会被自动调用</td></tr><tr><td>04</td><td>_<em>str</em>_</td><td>方法</td><td>返回对象的描述信息，print函数输出使用</td></tr></tbody></table><p>提示：利用好<code>dir()</code>函数，在学习时就不用死记硬背了。</p><h3 id="定义简单的类-只包含方法">定义简单的类(只包含方法)</h3><h4 id="定义只包含方法的类">定义只包含方法的类</h4><ul><li>在<code>Python</code>中定义一个只包含方法的类，语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> 方法1(<span class="params">self, 参数列表</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> 方法2(<span class="params">self, 参数列表</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>方法的定义格式和之前学习过的函数几乎一样</li><li>区别在于第一个参数必须是self，大家暂时先记住，稍后介绍self</li></ul><h4 id="创建对象">创建对象</h4><ul><li>当一个类定义完成后，要使用这个类来创建对象，语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象类型 = 类名()</span><br></pre></td></tr></table></figure><h4 id="练习">练习</h4><p>需求</p><ul><li>小猫爱吃鱼，小猫爱喝水</li></ul><p>分析</p><ol><li>定义一个猫类<code>Cat</code></li><li>定义两个方法<code>eat</code>,<code>drink</code></li><li>按照需求–不需要定义属性</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;小猫爱吃鱼&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drink</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;小猫爱喝水&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tom = Cat()</span><br><span class="line">    tom.drink()</span><br><span class="line">    tom.eat()</span><br></pre></td></tr></table></figure><h3 id="方法中的self参数">方法中的self参数</h3><h4 id="案例改造">案例改造</h4><ul><li>在Python中，要给对象设置属性，非常的容易，但是不推荐使用<ul><li>因为，对象属性的封装应该封装在类的内部</li></ul></li><li>只需要在类的外部代码中直接用过<code>.</code>设置一个属性即可</li></ul><blockquote><p>不推荐使用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tom.name = <span class="string">&quot;Tom&quot;</span></span><br><span class="line"></span><br><span class="line">lazy_cat.name = <span class="string">&quot;大熊猫&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Python&lt;/h1&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;面向对象&quot;&gt;面向对象&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;相比较函数，面向对象是更大的封装，根据职责在一个对象中封装多个方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/linux/linux%E5%86%85%E6%A0%B8/"/>
    <id>http://example.com/2024/06/25/linux/linux%E5%86%85%E6%A0%B8/</id>
    <published>2024-06-25T14:57:58.399Z</published>
    <updated>2024-05-30T15:07:12.143Z</updated>
    
    <content type="html"><![CDATA[<h1>内核开发</h1><h2 id="宏内核与微内核架构">宏内核与微内核架构</h2><p>系统属于软件的范畴，负责管理系统硬件资源，同时为应用程序开发和执行提供配套环境，那么OS必须具备两大功能。A. 为应用程序提供执行环境。B. 为多用户和应用程序管理计算机上的硬件资源。C. 虚拟性 D. 并发性</p><p>宏内核：所有的内核代码都编译成一个二进制，所有的代码都运行在一个大内核地址空间里，内核代码可以直接访问和调用，效率高且性能好，具体架构如下：</p><p><img src=".%5Cassets%5C%E5%AE%8F%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84.png" alt=""></p><p>微内核：把操作系统分成多个独立运行的功能模块，每个功能模块之间的访问需要通过消息来完成，因此效率没有这么高。</p><p><img src=".%5Cassets%5C%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84.png" alt=""></p><p>宏内核架构优点：设计简单和性能比较好。</p><p>微内核优点：稳定性和实时性</p><p>Linux内核体系架构如下：</p><p><img src=".%5Cassets%5Clinux%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;内核开发&lt;/h1&gt;
&lt;h2 id=&quot;宏内核与微内核架构&quot;&gt;宏内核与微内核架构&lt;/h2&gt;
&lt;p&gt;系统属于软件的范畴，负责管理系统硬件资源，同时为应用程序开发和执行提供配套环境，那么OS必须具备两大功能。A. 为应用程序提供执行环境。B. 为多用户和应用程序管理计算机上的硬件</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/Java%E5%9F%BA%E7%A1%80/Netty/"/>
    <id>http://example.com/2024/06/25/Java%E5%9F%BA%E7%A1%80/Netty/</id>
    <published>2024-06-25T14:57:58.397Z</published>
    <updated>2024-06-24T13:59:37.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Netty">Netty</h2><h3 id="Hello-World">Hello World</h3><p>开发一个简单的服务器端和客户端</p><ul><li>客户端向服务器端发送hello world</li><li>服务器仅接收，不返回</li></ul><p>加入依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Netty&quot;&gt;Netty&lt;/h2&gt;
&lt;h3 id=&quot;Hello-World&quot;&gt;Hello World&lt;/h3&gt;
&lt;p&gt;开发一个简单的服务器端和客户端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端向服务器端发送hello world&lt;/li&gt;
&lt;li&gt;服务器仅接收，不返回&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/Java%20Web/WebSocket/"/>
    <id>http://example.com/2024/06/25/Java%20Web/WebSocket/</id>
    <published>2024-06-25T14:57:58.382Z</published>
    <updated>2024-06-24T13:59:37.914Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Socketjs</p><p>1.是一个浏览器</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Socketjs&lt;/p&gt;
&lt;p&gt;1.是一个浏览器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/Java%20Web/Redis/"/>
    <id>http://example.com/2024/06/25/Java%20Web/Redis/</id>
    <published>2024-06-25T14:57:58.380Z</published>
    <updated>2024-06-25T14:47:04.353Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>Redis</h1><h2 id="什么是Redis">什么是Redis</h2><p>SQL：关系型数据库</p><p>NoSQL：非关系型数据库</p><p>关系型数据库和非关系型数据库的差别</p><ul><li>结构化</li><li>关联性</li><li>SQL查询</li><li>ACID</li></ul><p>MySQL是<strong>结构化</strong></p><table><thead><tr><th>id</th><th>name</th><th>age</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>20</td></tr><tr><td>2</td><td>李四</td><td>30</td></tr></tbody></table><p>对于MySQL来说，id作为主键，有主键约束，name有唯一约束，age有无符号约束</p><p>插入数据的时候也会对数据做校验</p><p>Redis是<strong>非结构化</strong></p><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td>1</td><td>{id: 2, name: “李四”, age: 20}</td></tr></tbody></table><p>MySQL不会对插入数据做校验，你可以改变数据库存储的结构</p><p>MySQL是<strong>关联性</strong></p><p>例如有三张表</p><p>tb_user表示用户表：</p><table><thead><tr><th>id</th><th>name</th><th>age</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>18</td></tr><tr><td>2</td><td>李四</td><td>20</td></tr></tbody></table><p>tb_item表示商品表</p><table><thead><tr><th>id</th><th>title</th><th>price</th></tr></thead><tbody><tr><td>9</td><td>华为Mate10</td><td>3020</td></tr><tr><td>10</td><td>荣耀</td><td>3000</td></tr></tbody></table><p>tb_order表示订单表</p><table><thead><tr><th>id</th><th>user_id</th><th>item_id</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>10</td></tr><tr><td>2</td><td>1</td><td>20</td></tr></tbody></table><p>NoSQL是<strong>非关联性</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">id: <span class="number">1</span>,</span><br><span class="line">name: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    orders: [</span><br><span class="line">        &#123;</span><br><span class="line">            id: <span class="number">1</span>,</span><br><span class="line">            item: &#123;</span><br><span class="line">                id: <span class="number">10</span>, title: <span class="string">&quot;荣耀&quot;</span>， price: <span class="number">3000</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            id: <span class="number">2</span>,</span><br><span class="line">            item: &#123;</span><br><span class="line">                id: <span class="number">11</span>, title: <span class="string">&quot;华为&quot;</span>， price: <span class="number">3200</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SQL有<strong>SQL语句</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id, name, age FROM tb_user WHERE id = 1</span><br></pre></td></tr></table></figure><p>MoSQL没<strong>同一标准</strong></p><p>Redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get user:1</span><br></pre></td></tr></table></figure><p>MangoDB</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;_id: 1&#125;)</span><br></pre></td></tr></table></figure><p>MySQL满足事务的<strong>ACID特性</strong></p><p>Redis无法满足<strong>ACID特性</strong></p><h2 id="Redis的历史">Redis的历史</h2><p>Redis诞生于2009年，是一个基于内存的键值型NoSQL数据库</p><p><strong>特征</strong>：</p><ul><li>键值型，value支持多种不同的数据结构</li><li>单线程，每个命令具备原子性</li><li>低延迟，速度快（基于内存，IO多路复用，良好的编码）</li><li>支持数据持久化</li><li>支持主从集群、分片集群</li></ul><p>QA：什么是IO多路复用：</p><p>IO多路复用（Input/Output Multiplexing）是一种在单个线程或进程中高效管理多个输入输出（I/O）通道的技术，使得程序能够同时监控多个文件描述符（如套接字、管道、事件等），等待它们中的任何一个准备好进行读取或写入操作，而无需为每个I/O操作创建单独的线程或进程。这种方式大大提高了系统在处理大量并发连接时的资源利用率和响应速度，减少了上下文切换的开销。<br>IO多路复用的核心思想是通过一种机制（如select、poll、epoll等系统调用），让内核帮助检查多个I/O就绪状态，而不是让每个连接或文件描述符单独阻塞等待。以下是几个关键概念和相关的系统调用：</p><ul><li>select: 是最早在Unix系统中出现的IO多路复用技术，它允许进程同时监控多个文件描述符的可读、可写和异常状态。但select存在一些限制，如最大文件描述符数量有限制（通常是1024），并且每次调用都需要传递所有文件描述符集合，效率较低。</li><li>poll: 是select的一个改进版本，解决了文件描述符数量限制的问题，但依然需要轮询所有文件描述符来检测状态变化，效率问题没有根本改善。</li><li>epoll（Linux特有）: epoll是Linux系统中更为高效的IO多路复用技术。它通过维护一个内核级别的文件描述符列表和就绪列表，仅对发生变化的文件描述符进行操作，避免了不必要的遍历，因此在处理大量并发连接时表现出色。</li></ul><h2 id="Redis的常见命令">Redis的常见命令</h2><h3 id="Redis的数据结构介绍">Redis的数据结构介绍</h3><p>Redis是一个key-value的数据库，key一般是String类型，不过value的类型多种多样</p><p><strong>String</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure><p><strong>Hash</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;name: &quot;Jack&quot;, age: 21&#125;</span><br></pre></td></tr></table></figure><p><strong>List</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[A -&gt; B -&gt; C -&gt; C]</span><br></pre></td></tr></table></figure><p><strong>Set</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;A, B, C&#125;</span><br></pre></td></tr></table></figure><p><strong>SortedSet</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;A: 1, B: 2, C: 3&#125;</span><br></pre></td></tr></table></figure><p><strong>GEO</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;A: (120.3, 30.5)&#125;</span><br></pre></td></tr></table></figure><p><strong>BitMap</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0110110101110101011</span><br></pre></td></tr></table></figure><p><strong>HyperLog</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0110110101110101011</span><br></pre></td></tr></table></figure><p>那么这么多的数据结构，我们如何能够查看它们的<strong>API</strong>呢，一种方法是去Redis的官网</p><p><strong><a href="https://redis.io/">https://redis.io/</a></strong></p><p>另一种方法是使用help命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help @组名</span><br></pre></td></tr></table></figure><h3 id="Redis通用命令">Redis通用命令</h3><p>通用指令是部分数据类型，都可以使用的指令，常见的有：</p><blockquote><p>需要注意的是：有可能有的命令需要权限，这里可以使用auth Thy131860</p></blockquote><ul><li>KEYS：查看符合模板的所有KEY</li><li>DEL: 删除一个指定的KEY</li><li>EXIST：判断一个KEY是否存在</li><li>EXPIRE：给一个KEY设置有效期，有效期到期时该KEY会被自动删除</li><li>TTL：查看一个KEY</li></ul><h3 id="String类型">String类型</h3><p>String类型，也就是字符串类型，是Redis中最简单的存储类型</p><p>其Value是字符串，不过根据字符串的格式不同，又可以分为三类：</p><ul><li>string：普通字符串</li><li>int：整数类型，可以做自增、自减操作</li><li>float：浮点类型，可以做自增，自减操作</li></ul><table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>msg</td><td>hello world</td></tr><tr><td>num</td><td>10</td></tr><tr><td>score</td><td>92.5</td></tr></tbody></table><p>不管是哪种格式，底层都是字节数组形式存储，只不过是编码方式不同，字符串类型的最大空间不能超过512m</p><h3 id="String的常见命令">String的常见命令</h3><p>String的常见命令有：</p><ul><li>SET：添加或者修改已经存在的一个String类型的键值对</li><li>GET：根据key获取String类型的value</li><li>MSET：批量添加多个String类型的键值对</li><li>MGET：根据多个key获取多个String类型的value</li><li>INCR：让一个整型的key自增1</li><li>INCRBY：让一个整型的key自增并指定步长，例如：incrby num2 让num自增2</li><li>INCRBYFLOAT：让一个浮点类型的数字自增并指定步长</li><li>SETNX：添加一个String类型的键值对，前提是这个key不存在，否则不执行</li><li>SETEX：添加一个String类型的键值对，并且指定有效期</li></ul><h3 id="Key的层次格式">Key的层次格式</h3><p>Redis没有类似MySQL中的Table的概念，我们该如何区分不同类型的key呢？</p><ul><li>例如：需要存储用户，商品信息到redis，有一个用户id是1，有一个商品id恰好也是1</li></ul><p>key的结构：</p><p>Redis的key允许有多个单词形成层级结构，多个单词之间用&quot;:&quot;隔开，格式如下：</p><blockquote><p>项目名：业务名：类型：id</p></blockquote><p>例如：我们的项目名称叫partner-plus，有user和room两种不同类型的数据，我们可以这样定义key：</p><ul><li>user相关的key：partner:user:1</li><li>room相关的key：partner:room:1</li></ul><p>如果Value是一个Java对象，例如一个User对象，则可以将对象序列化为JSON字符串后存储：</p><table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>partner:user:1</td><td>{“id”: 1, “name”: “Jack”, “age”: 21}</td></tr><tr><td>partner:room:1</td><td>{“id”: 1, “name”: “我的房间”, “capacity”: 8}</td></tr></tbody></table><h3 id="Hash类型">Hash类型</h3><p>Hash类型，也叫散列，其Value是一个无序字典，类似于Java中的HashMap结构。</p><p>String结构是将对象序列化为JSON字符串后存储，当需要修改对象某个字段时很不方便：</p><table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>partner:user:1</td><td>{“id”: 1, “name”: “Jack”, “age”: 21}</td></tr><tr><td>partner:room:1</td><td>{“id”: 1, “name”: “我的房间”, “capacity”: 8}</td></tr></tbody></table><p>Hash结构可以将对象中的每个字段独立存储，可以针对单个字段做CRUD：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;Redis&lt;/h1&gt;
&lt;h2 id=&quot;什么是Redis&quot;&gt;什么是Redis&lt;/h2&gt;
&lt;p&gt;SQL：关系型数据库&lt;/p&gt;
&lt;p&gt;NoSQL：非关系型数据库&lt;/p&gt;
&lt;p&gt;关系型数据库和非关系型数据库的差别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结构化&lt;/li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/Java%20Web/MyBatisPlus/"/>
    <id>http://example.com/2024/06/25/Java%20Web/MyBatisPlus/</id>
    <published>2024-06-25T14:57:58.379Z</published>
    <updated>2024-06-24T13:59:37.903Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>MyBatis Plus</h1><h2 id="快速入门">快速入门</h2><p>要使用MyBatis Plus，需要按下面步骤操作：</p><ul><li>引入MybatisPlus的起步依赖</li><li>定义Mapper并继承BaseMapper</li></ul><p><code>MyBatisPlus</code>官方提供了<code>starter</code>，其中集成了<code>Mybatis</code>和<code>MybatisPlus</code>的所有功能，并且实现了自动装配效果。<br>因此我们可以用<code>MybatisPlus</code>的<code>starter</code>代替<code>Mybatis的starter</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--MybatisPlus--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;    </span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>自定义的<code>Mapper</code>继承<code>MybatisPlus</code>提供的<code>BaseMapper</code>接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public interface RoomMapper extends BaseMapper&lt;Room&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MyBatis-Plus常用注解">MyBatis Plus常用注解</h2><p>MyBatisPlus通过扫描实体类，并基于反射获取实体类信息作为数据库表信息</p><ul><li>类名驼峰转下划线作为表名</li><li>名为id的字段会作为主键</li><li>变量名驼峰转下划线作为表的字段名</li></ul><p>如果不符合约定：</p><p>我们就需要使用常见注解：</p><p>MyBatisPlus中常见注解如下：</p><ul><li>@TableName: 用来指定表名</li><li>@TableId: 用来指定表中的主键字段信息</li><li>@TableField: 用来指定表中的普通字段信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@TableName(&quot;tb_user&quot;)</span><br><span class="line">public class User &#123;</span><br><span class="line">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br><span class="line">private Long id;</span><br><span class="line">    private String name;</span><br><span class="line">    private Boolean isMarried;</span><br><span class="line">    private Integer order;</span><br><span class="line">    private String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IdType枚举：</p><ul><li>AUTO：数据库自增长</li><li>INPUT：通过set方法自行输入</li><li>ASSIGN_ID：分配ID，接口IdentifierGenerator的方法nextId来生成id，默认实现类为DefaultIdentifierGenerator雪花算法</li></ul><blockquote><p>不指定的话默认是雪花算法</p></blockquote><p>使用@TableField的常见场景</p><ul><li>成员变量名与数据库字段名不一致</li><li>变量名以is开头，且是布尔值</li><li>成员变量名与数据库关键字冲突</li><li>成员变量不是数据库字段</li></ul><p>如果成员变量不是数据库字段，我们可以加下面的注解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@TableField(exist = false)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;MyBatis Plus&lt;/h1&gt;
&lt;h2 id=&quot;快速入门&quot;&gt;快速入门&lt;/h2&gt;
&lt;p&gt;要使用MyBatis Plus，需要按下面步骤操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入MybatisPlus的起步依赖&lt;/li&gt;
&lt;li&gt;定义Mapper并继</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/06/25/AI%E5%8A%A8%E7%94%BB/AI%E5%8A%A8%E7%94%BB/"/>
    <id>http://example.com/2024/06/25/AI%E5%8A%A8%E7%94%BB/AI%E5%8A%A8%E7%94%BB/</id>
    <published>2024-06-25T14:57:58.360Z</published>
    <updated>2024-05-30T15:07:12.131Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>node</title>
    <link href="http://example.com/2023/12/10/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/node/"/>
    <id>http://example.com/2023/12/10/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/node/</id>
    <published>2023-12-10T09:38:22.000Z</published>
    <updated>2024-05-30T15:07:12.146Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么使用socket-io"><a href="http://xn--socket-vy7iwdx2cv6cb44r.io">为什么使用socket.io</a></h2><p>相比于Websocket，socket.io有以下优点：</p><ul><li><strong>跨平台支持</strong>：Socket.io可以在不同平台上运行，包括浏览器和服务器端。它提供了一个统一的接口，使得在不同环境下使用时更加方便。</li><li><strong>实时性</strong>：与传统的HTTP通信相比，Socket.io提供了更实时的双向通信。这意味着服务器可以即时向客户端推送数据，而不需要客户端先发起请求。</li><li><strong>自动重新连接</strong>：Socket.io具有自动重新连接的功能，这意味着如果连接断开，它会自动尝试重新连接，以确保持续的通信。</li><li><strong>支持多种传输协议</strong>：Socket.io可以使用多种传输协议，包括WebSocket、Ajax长轮询、IFrame流等。这使得在不同情况下选择合适的传输方式变得更加灵活。</li></ul><h1>Express</h1><h2 id="如何发送HTTP请求">如何发送HTTP请求</h2><ul><li>下载express依赖</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure><ul><li>编写下面的代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.send(<span class="string">&#x27;hello from server side&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;App running on port $&#123;port&#125;..&quot;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>运行该js文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node 你的文件名.js</span><br></pre></td></tr></table></figure><h2 id="发送json">发送json</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res</span><br><span class="line">    .status(<span class="number">200</span>)</span><br><span class="line">    .json(&#123;<span class="attr">message</span>: <span class="string">&#x27;hello from the server side&#x27;</span>, <span class="attr">app</span>: <span class="string">&#x27;webrtc&#x27;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;App running on port $&#123;port&#125;..&quot;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="安装socket-io"><a href="http://xn--socket-9f7km201a.io">安装socket.io</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install socket.io</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么使用socket-io&quot;&gt;&lt;a href=&quot;http://xn--socket-vy7iwdx2cv6cb44r.io&quot;&gt;为什么使用socket.io&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;相比于Websocket，socket.io有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS基础</title>
    <link href="http://example.com/2023/11/18/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/18/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/CSS%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-18T02:43:28.000Z</published>
    <updated>2024-05-30T15:07:12.145Z</updated>
    
    <content type="html"><![CDATA[<h1>Natour项目</h1><h2 id="Headers">Headers</h2><p>在本节中，我们将介绍一些基本的css方法和属性：</p><h3 id="line-height">line-height</h3><p><code>line-height</code>（行高）是指文本行与行之间的垂直空间，通常用于排版和网页设计中。它也被称为传统排版中的“行间距”（leading）。通过调整<code>line-height</code>，可以改变文本行之间的垂直间距，从而影响文本的整体外观和可读性。</p><p>在CSS（层叠样式表）中，可以使用<code>line-height</code>属性来设置行高。以下是一个示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>; <span class="comment">/* 这可以是一个无单位的数字，长度，百分比等。 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，段落（<code>&lt;p&gt;</code>）的行高设置为文本字体大小的1.5倍。</p><h3 id="vh是什么">vh是什么</h3><p><code>vh</code> 是 CSS 中的长度单位，表示相对视口高度的百分比。一个视口（viewport）是浏览器中用于显示网页的区域，而 <code>vh</code> 单位表示视口的高度的百分比。</p><p>具体来说，1 <code>vh</code> 等于视口高度的 1%，100 <code>vh</code> 等于整个视口的高度。这个单位通常用于创建基于视口高度的动态和响应式布局。例如，如果你想确保一个元素的高度始终是视口高度的一半，你可以这样设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50vh</span>; <span class="comment">/* 表示视口高度的50% */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="background-position">background-position</h3><p><code>background-position</code> 是 CSS 属性之一，用于设置背景图像（background image）在元素背景中的位置。这属性通常用于<code>background-image</code>属性一起使用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: X_Position Y_Position;</span><br></pre></td></tr></table></figure><ul><li><code>X_Position</code> 可以是一个具体的长度单位（像素、英寸等），也可以是一个百分比值，表示图像在水平方向上的位置。</li><li><code>Y_Position</code> 同样可以是长度单位或百分比值，表示图像在垂直方向上的位置。</li></ul><p>如果只提供一个值，它将被视为水平位置，垂直位置将被默认设置为 <code>50%</code>。例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: center top; <span class="comment">/* 将背景图像水平居中，垂直置于顶部 */</span></span><br></pre></td></tr></table></figure><p>或者可以使用关键字来表示位置，比如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: right bottom; <span class="comment">/* 将背景图像右对齐，底部对齐 */</span></span><br></pre></td></tr></table></figure><p>你还可以使用具体的像素值或百分比值，根据需要调整图像的位置，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: <span class="number">20px</span> <span class="number">50%</span>; <span class="comment">/* 将背景图像水平偏移20像素，垂直居中 */</span></span><br></pre></td></tr></table></figure><h3 id="background-size">background-size</h3><p><code>background-size</code> 是 CSS 中用于设置背景图像大小的属性。这个属性允许你调整背景图像在元素的背景中的尺寸。</p><p>语法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: value;</span><br></pre></td></tr></table></figure><p><code>value</code> 可以是以下之一：</p><ol><li>关键字：<ul><li><code>auto</code>: 默认值，表示使用图像的实际尺寸。</li><li><code>cover</code>: 图像尺寸调整为完全覆盖背景区域，可能会裁剪图像。</li><li><code>contain</code>: 图像尺寸调整为完全包含在背景区域内，可能会留有空白。</li></ul></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: cover;</span><br></pre></td></tr></table></figure><h3 id="Header第一节课代码">Header第一节课代码</h3><p>本节的HTML代码如下所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleleapis.com/css?family=Lato:100,300,400,700,900&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    Some text...</span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本节的CSS代码如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">COLORS:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">LIGHT green: #7ed56f</span></span><br><span class="line"><span class="comment">Medium green: #55c57a</span></span><br><span class="line"><span class="comment">Dark green: #28b485</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Lato&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.7</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   background-position: top:</span></span><br><span class="line"><span class="comment">    会将图片最上面固定在最上面</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   linear-gradient(to right, #7ed56f, #28b485):</span></span><br><span class="line"><span class="comment">    可以设置渐变色：例如，其中三个参数表示向哪里开始渐变、开始的颜色、结束的颜色。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    rgba(*, *, *, 0.8):其中0.8表示透明度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   clip-path: 表示截边polygon表示长方形：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">95vh</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">            to right bottom,</span><br><span class="line">            <span class="built_in">rgba</span>(<span class="number">128</span>, <span class="number">213</span>, <span class="number">111</span>, <span class="number">0.8</span>),</span><br><span class="line">            <span class="built_in">rgba</span>(<span class="number">40</span>, <span class="number">180</span>, <span class="number">133</span>, <span class="number">0.8</span>)),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&quot;../img/hero.jpg&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: top;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(<span class="number">0</span> <span class="number">0</span>, <span class="number">100%</span> <span class="number">0</span>, <span class="number">100%</span> <span class="number">75vh</span>, <span class="number">0</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="display">display</h3><p>在 CSS 中，<code>display</code> 属性用于定义 HTML 元素的显示方式。这个属性决定了元素是块级元素还是内联元素，或者是一些其他特殊的显示方式。</p><p>以下是一些常见的 <code>display</code> 属性值：</p><ol><li><strong>block：</strong> 元素呈块级显示，即它会在页面上生成一个块，宽度默认是父元素的宽度，可以设置宽度和高度。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>inline：</strong> 元素呈内联显示，即元素会在同一行内显示，不会独占一行，宽度和高度只取决于内容。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>inline-block：</strong> 元素呈内联块级显示，它融合了内联元素和块级元素的特性，可以设置宽度和高度，同时在同一行内显示。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>none：</strong> 元素不会被显示，即元素在页面中不可见，也不占据空间。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#hiddenElement</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>flex：</strong> 使用 Flexbox 布局模型，使得元素能够更方便地布局和对齐子元素。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.flex-container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li><strong>grid：</strong> 使用 Grid 布局模型，提供了更复杂的布局能力，可以在二维空间中定义和对齐元素。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.grid-container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="transform">transform</h3><p>在 CSS 中，<code>transform</code> 属性用于对元素进行变换，包括平移、旋转、缩放和倾斜。这个属性允许你以更复杂的方式改变元素的外观，而无需改变其文档流布局。</p><p>以下是一些常见的 <code>transform</code> 属性的值和用法：</p><ol><li><strong>平移 (Translate)：</strong> <code>translate</code> 函数用于沿着 X 和 Y 轴平移元素。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 平移元素50像素到右边，100像素向下 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>, <span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>旋转 (Rotate)：</strong> <code>rotate</code> 函数用于旋转元素。角度可以是正数（顺时针）或负数（逆时针）。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 将元素顺时针旋转45度 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>缩放 (Scale)：</strong> <code>scale</code> 函数用于缩放元素。可以分别设置水平和垂直方向的缩放比例。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 将元素水平方向缩小一半，垂直方向放大两倍 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>倾斜 (Skew)：</strong> <code>skew</code> 函数用于倾斜元素。可以分别设置水平和垂直方向的倾斜角度。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 将元素水平方向倾斜30度，垂直方向倾斜45度 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">30deg</span>, <span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>变换原点 (Transform Origin)：</strong> <code>transform-origin</code> 属性用于指定变换的原点，默认是元素的中心点。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 以元素的左上角为变换原点 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform-origin</span>: top left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li><strong>多重变换 (Multiple Transforms)：</strong> 可以组合多个变换，用空格分隔。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 先旋转30度，然后平移100像素到右边 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>) <span class="built_in">translateX</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这些变换可以单独或组合使用，让你能够实现各种独特的元素动画和布局效果。值得注意的是，<code>transform</code> 属性是一个累加的属性，多个变换会按照顺序依次应用。</p><h3 id="Header第二节课代码">Header第二节课代码</h3><p>HTML代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot;</span><br><span class="line">          <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, user-scalable=no, <span class="attribute">initial</span>-scale=<span class="number">1.0</span>, maximum-scale=<span class="number">1.0</span>, minimum-scale=<span class="number">1.0</span>&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; <span class="attribute">content</span>=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link href=&quot;https://fonts.googleleapis.com/css?family=Lato:<span class="number">100</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">700</span>,<span class="number">900</span><span class="string">&quot; rel=&quot;</span>stylesheet<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;link href=&quot;</span>css/style.css<span class="string">&quot; rel=&quot;</span>stylesheet<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;header class=&quot;</span>header<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;</span>logo-box<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=&quot;</span>img/logo-white.png<span class="string">&quot; alt=&quot;</span>Logo<span class="string">&quot; class=&quot;</span>logo<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;div class=&quot;</span>text-box<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h1 class=&quot;</span>heading-primary<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;</span>heading-primary-main<span class="string">&quot;&gt;Outdoors&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;</span>heading-primary-sub<span class="string">&quot;&gt;is where life happens&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/header&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">COLORS:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">LIGHT green: #7ed56f</span></span><br><span class="line"><span class="comment">Medium green: #55c57a</span></span><br><span class="line"><span class="comment">Dark green: #28b485</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Lato&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.7</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   background-position: top:</span></span><br><span class="line"><span class="comment">    会将图片最上面固定在最上面</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   linear-gradient(to right, #7ed56f, #28b485):</span></span><br><span class="line"><span class="comment">    可以设置渐变色：例如，其中三个参数表示向哪里开始渐变、开始的颜色、结束的颜色。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    rgba(*, *, *, 0.8):其中0.8表示透明度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   clip-path: 表示截边polygon表示长方形：</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">95vh</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">            to right bottom,</span><br><span class="line">            <span class="built_in">rgba</span>(<span class="number">128</span>, <span class="number">213</span>, <span class="number">111</span>, <span class="number">0.8</span>),</span><br><span class="line">            <span class="built_in">rgba</span>(<span class="number">40</span>, <span class="number">180</span>, <span class="number">133</span>, <span class="number">0.8</span>)),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&quot;../img/hero.jpg&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">background-position</span>: top;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(<span class="number">0</span> <span class="number">0</span>, <span class="number">100%</span> <span class="number">0</span>, <span class="number">100%</span> <span class="number">75vh</span>, <span class="number">0</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo-box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.heading-primary</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.heading-primary-main</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.heading-primary-sub</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text-box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">70%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="keyframes">keyframes</h3><p>CSS关键帧（keyframes）与<code>@keyframes</code>规则一起使用，用于在CSS中定义动画。关键帧允许您指定元素在动画过程中的各个时间点的样式。以下是使用CSS关键帧的基本语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="comment">/* 动画开始时的样式 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="comment">/* 动画中点的样式 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="comment">/* 动画结束时的样式 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将动画应用于元素 */</span></span><br><span class="line">.元素 &#123;</span><br><span class="line">  <span class="attribute">animation-name</span>: 动画名称;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">3s</span>; <span class="comment">/* 动画持续时间（秒） */</span></span><br><span class="line">  <span class="attribute">animation-timing-function</span>: ease; <span class="comment">/* 时间函数（例如，ease，linear，ease-in-out） */</span></span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite; <span class="comment">/* 动画重复的次数（使用数字或&#x27;infinite&#x27;） */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的示例中：</p><ul><li><code>@keyframes 动画名称</code>：声明了一个名为<code>动画名称</code>的关键帧集合。您可以使用任何喜欢的名称。</li><li><code>0%</code>、<code>50%</code>和<code>100%</code>：这些表示在其中定义样式的关键帧百分比。您可以拥有任意数量的关键帧，并为每个关键帧指定样式。</li><li>在每个关键帧内，您定义元素在动画的该点应该具有的样式。</li><li>选择器<code>.元素</code>用于将动画应用于HTML元素。<code>animation-name</code>属性引用您定义的关键帧的名称，其他属性如<code>animation-duration</code>、<code>animation-timing-function</code>和<code>animation-iteration-count</code>控制动画的持续时间、时间函数和迭代次数。</li></ul><p>以下是一个带有旋转动画的简单示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 旋转 &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.元素 &#123;</span><br><span class="line">  <span class="attribute">animation-name</span>: 旋转;</span><br><span class="line">  <span class="attribute">animation-duration</span>: <span class="number">4s</span>;</span><br><span class="line">  <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">  <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在此示例中，<code>.元素</code>将在4秒内持续不断地旋转360度。</p><h3 id="CSS背后工作原理">CSS背后工作原理</h3><h4 id="写好的CSS的三大准则">写好的CSS的三大准则</h4><ol><li>响应式设计</li><li>如何编写可维护可伸缩的代码</li><li>web性能</li></ol><h3 id="CSS是如何工作的">CSS是如何工作的</h3><p>当我们加载一个网页时，CSS发生了什么？</p><ol><li>首先，浏览器会加载html文件</li><li>获取加载的html代码并解析它，逐行解析。在该过程中，浏览器构建了DOM模型。</li><li>加载CSS。</li></ol><p>解析CSS：</p><ol><li>通过级联来解决CSS冲突声明。</li><li>处理最终的CSS值。</li></ol><ul><li>CSS声明中用!important具有最高的优先级。</li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Natour项目&lt;/h1&gt;
&lt;h2 id=&quot;Headers&quot;&gt;Headers&lt;/h2&gt;
&lt;p&gt;在本节中，我们将介绍一些基本的css方法和属性：&lt;/p&gt;
&lt;h3 id=&quot;line-height&quot;&gt;line-height&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;line-height&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>用户交友网站项目</title>
    <link href="http://example.com/2023/11/12/%E7%94%A8%E6%88%B7%E4%BA%A4%E5%8F%8B%E7%BD%91%E7%AB%99%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2023/11/12/%E7%94%A8%E6%88%B7%E4%BA%A4%E5%8F%8B%E7%BD%91%E7%AB%99%E9%A1%B9%E7%9B%AE/</id>
    <published>2023-11-12T04:20:52.000Z</published>
    <updated>2024-05-30T15:07:12.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户交友网站">用户交友网站</h2><p>介绍：帮助大家找到志同道合的伙伴，移动端H5</p><h2 id="需求分析">需求分析</h2><ol><li>用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类）</li><li>主动搜索：允许用户根据标签搜索其他用户<ol><li>Redis缓存 + 本地</li></ol></li><li>组队：<ol><li>创建队伍</li><li>加入队伍</li><li>根据标签查询队伍</li><li>邀请其他人</li></ol></li><li>推荐<ol><li>相似度计算算法 + 本地分布式计算</li></ol></li><li>允许用户修改标签</li></ol><h2 id="技术栈">技术栈</h2><p>前端</p><ol><li>Vue3开发框架（提高页面开发效率）</li><li>Vant UI（基于Vue的移动组件库）（React版）</li><li>Vite（打包工具，快）</li><li>Nginx来单机部署</li></ol><h2 id="后端">后端</h2><ol><li>Java编程语言+SpringBoot框架</li><li>SpringMVC + MyBatis + Mybatis Plus</li><li>MySQL 数据库</li><li>Redis缓存</li><li>Swagger + Knife4j接口文档</li></ol><h2 id="第一期计划">第一期计划</h2><ol><li>前端项目初始化</li><li>数据库表设计</li><li>前端主页</li><li>数据库表设计<ol><li>标签表</li><li>用户表</li></ol></li><li>开发后端 - 根据标签搜索用户</li><li>开发前端 - 根据标签搜索用户</li></ol><h3 id="前端项目初始化">前端项目初始化</h3><p>用脚手架初始化项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PS D:\vue-proj&gt; yarn create vite</span><br><span class="line">yarn create v1.22.19</span><br><span class="line">[1/4] Resolving packages...</span><br><span class="line">[2/4] Fetching packages...</span><br><span class="line">[3/4] Linking dependencies...</span><br><span class="line">[4/4] Building fresh packages...</span><br><span class="line">success Installed &quot;create-vite@4.4.1&quot; with binaries:</span><br><span class="line">      - create-vite</span><br><span class="line">      - cva</span><br><span class="line">√ Project name: ... partner-fronted</span><br><span class="line">√ Select a framework: » Vue</span><br><span class="line">√ Select a variant: » TypeScript</span><br><span class="line"></span><br><span class="line">Scaffolding project in D:\vue-proj\partner-fronted...</span><br></pre></td></tr></table></figure><h4 id="整合组件库">整合组件库</h4><p>整合组件库Vant：</p><p>按需引入Vant:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @vant/auto-import-resolver unplugin-vue-components -D</span><br></pre></td></tr></table></figure><h4 id="配置插件">配置插件</h4><p>如果是基于vite的项目，在<code>vite.config.js</code>文件中配置插件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineConfig&#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Components <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;VantResolver&#125; <span class="keyword">from</span> <span class="string">&#x27;@vant/auto-import-resolver&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineConfig(&#123;</span><br><span class="line">    <span class="attr">plugins</span>: [vue(),</span><br><span class="line">        Components(&#123;</span><br><span class="line">            <span class="attr">resolvers</span>: [VantResolver()],</span><br><span class="line">        &#125;)],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="安装vant">安装vant</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 通过 yarn 安装</span><br><span class="line">yarn add vant</span><br></pre></td></tr></table></figure><h4 id="尝试vant">尝试vant</h4><p>在App.vue里添加如下代码，如果有样式，则引入成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;van-button type=&quot;primary&quot;&gt;主要按钮&lt;/van-button&gt;</span><br><span class="line">  &lt;van-button type=&quot;success&quot;&gt;成功按钮&lt;/van-button&gt;</span><br><span class="line">  &lt;van-button type=&quot;default&quot;&gt;默认按钮&lt;/van-button&gt;</span><br><span class="line">  &lt;van-button type=&quot;warning&quot;&gt;警告按钮&lt;/van-button&gt;</span><br><span class="line">  &lt;van-button type=&quot;danger&quot;&gt;危险按钮&lt;/van-button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>开发页面经验：</p><ol><li>多参考</li><li>从整体到局部</li><li>先想清楚页面要做成什么样子，再写代码</li></ol><h3 id="前端主页-组件概览">前端主页 + 组件概览</h3><p>设计</p><p>导航条：展示当前页面名称</p><p>主页搜索框 =&gt; 搜索页=&gt; 搜索结果页（标签筛选页）</p><p>内容：</p><p>tab栏：</p><ul><li>主页（推荐页 + 广告）<ul><li>banner</li><li>搜索框</li><li>推荐信息流</li></ul></li><li>搜索页</li><li>队伍</li><li>用户页（消息 + 考虑发邮件）</li></ul><h3 id="数据库表设计">数据库表设计</h3><p>标签的分类（要有哪些标签，怎么把标签进行分类）</p><h4 id="新增标签表">新增标签表</h4><p>建议使用标签，不要使用</p><h3 id="开发">开发</h3><p>删除 <code>HelloWorld.vue</code>。</p><p>很多页面要复用组件/样式，重复写很麻烦，不利于维护，所以要抽象一个通用的布局。</p><p>增加layouts文件夹，创建<code>BasicLayout.vue</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;van-nav-bar</span><br><span class="line">      title=&quot;标题&quot;</span><br><span class="line">      left-arrow</span><br><span class="line">      @click-left=&quot;onClickLeft&quot;</span><br><span class="line">      @click-right=&quot;onClickRight&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #right&gt;</span><br><span class="line">      &lt;van-icon name=&quot;search&quot; size=&quot;18&quot;/&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/van-nav-bar&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const onClickLeft = () =&gt; alert(&quot;left&quot;);</span><br><span class="line">const onClickRight = () =&gt; alert(&quot;right&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>界面出现乱码时，记得删除style.css</p></blockquote><h4 id="Navbar使用">Navbar使用</h4><p>右侧区域使用了插槽</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-nav-bar</span><br><span class="line">    title=&quot;标题&quot;</span><br><span class="line">    left-arrow</span><br><span class="line">    @click-left=&quot;onClickLeft&quot;</span><br><span class="line">    @click-right=&quot;onClickRight&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;template #right&gt;</span><br><span class="line">    &lt;van-icon name=&quot;search&quot; size=&quot;18&quot;/&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/van-nav-bar&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const onClickLeft = () =&gt; alert(&quot;left&quot;);</span><br><span class="line">const onClickRight = () =&gt; alert(&quot;right&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="tabbar">tabbar</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--tabbar--&gt;</span><br><span class="line">&lt;van-tabbar v-model=&quot;active&quot; @change=&quot;onChange&quot;&gt;</span><br><span class="line">    &lt;van-tabbar-item icon=&quot;home-o&quot; name=&quot;index&quot;&gt;主页&lt;/van-tabbar-item&gt;</span><br><span class="line">    &lt;van-tabbar-item icon=&quot;search&quot; name=&quot;team&quot;&gt;队伍&lt;/van-tabbar-item&gt;</span><br><span class="line">    &lt;van-tabbar-item icon=&quot;friends-o&quot; name=&quot;user&quot;&gt;个人&lt;/van-tabbar-item&gt;</span><br><span class="line">&lt;/van-tabbar&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const active = ref(&quot;index&quot;);</span><br><span class="line">const onChange = (index) =&gt; showToast(`$&#123;index&#125;`)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>Tabbar属性参数</p><p>name：标签名称，作为匹配的标识符</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用户交友网站&quot;&gt;用户交友网站&lt;/h2&gt;
&lt;p&gt;介绍：帮助大家找到志同道合的伙伴，移动端H5&lt;/p&gt;
&lt;h2 id=&quot;需求分析&quot;&gt;需求分析&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;用户去添加标签，标签的分类（要有哪些标签，怎么把标签进行分类）&lt;/li&gt;
&lt;li&gt;主动搜索：允许用</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Gradle</title>
    <link href="http://example.com/2023/11/11/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/Gradle/"/>
    <id>http://example.com/2023/11/11/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/Gradle/</id>
    <published>2023-11-11T07:33:57.000Z</published>
    <updated>2024-05-30T15:07:12.147Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1>什么是Gradle</h1><p>Gradle构建工具是一个快速，可靠和灵活的开源构建自动化工具，具有优雅且可扩展的声明性构建语言。<br>在这个手册中，Gradle构建工具通常缩写为Gradle。</p><h1>为什么使用Gradle</h1><p>Gradle是一个广泛使用且成熟的工具，拥有活跃的社区和强大的开发生态系统。</p><ul><li><p>Gradle是JVM中最受欢迎的构建系统，也是Android和Kotlin Multi-Platform项目的默认构建系统。它拥有丰富的社区插件生态系统。</p></li><li><p>Gradle可以使用其内置功能，第三方插件或自定义构建逻辑自动化各种软件构建场景。</p></li><li><p>Gradle提供了高级别，声明式和富有表现力的构建语言，使得编写和阅读构建逻辑变得容易。</p></li><li><p>Gradle快速，可扩展，并可以构建任何大小和复杂度的项目。</p></li><li><p>Gradle能够在获得增量构建，构建缓存和并行执行等优化的同时产生可靠的结果。</p></li></ul><h2 id="Gradle支持的语言和框架">Gradle支持的语言和框架</h2><p>Gradle支持Android，Java，Kotlin，Groovy，Scala，JavaScript，C/C++</p><h2 id="合适的IDES">合适的IDES</h2><p>所有主流的IDES都支持Gradle，包括：Android Studio, IntelliJ IDEA, Visual Studio Code, Eclipse, and NetBeans.<br>你还可以通过终端中的命令行界面，或者通过持续继承服务器（CI）来调用Gradle。</p><h2 id="如何学习Gradle">如何学习Gradle</h2><p>Gradle用户手册是Gradle构建工具的官方文档。</p><p>入门教程：学习Gradle的基础知识以及使用Gradle构建应用程序的好处。</p><p>培训课程：前往课程页面注册免费的Gradle培训。</p><h2 id="使用命令行工具构建Gradle工程">使用命令行工具构建Gradle工程</h2><p>命令行页面是与Gradle互动的主要方法。</p><p>以下是执行和自定义Gradle命令行的参考。它还可用作编写脚本或者持续集成时的参考。</p><p>强烈推荐使用Gradle包装器，在以上示例中，将./gradlew或者gradlew.bat（在windows上）替代gradle</p><p>在命令行上执行Gradle将遵循以下结构：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [taskName...] [--option-name...]</span><br></pre></td></tr></table></figure><p>选项允许在任务名称之前和之后使用</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [--option-name...] [taskName...]</span><br></pre></td></tr></table></figure><p>如果有多个要运行的任务，我们需要使用空格分隔它们：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [taskName1 taskName2...] [--option-name...]</span><br></pre></td></tr></table></figure><p>可以用或者不用等号来指定接收值的选项，但建议使用等号。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [...] --console=plain</span><br></pre></td></tr></table></figure><p>启用行为的选项具有指定反义的长格式选项，使用–no前缀，以下是一些对立选项。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gradle [...] --build-cache</span><br><span class="line">gradle [...] --no-build-cache</span><br></pre></td></tr></table></figure><p>许多长格式选项有对应的短格式选项，以下是等价的。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gradle --help</span><br><span class="line">gradle -h</span><br></pre></td></tr></table></figure><blockquote><p>许多命令行标志可以在gradle.properties文件中指定，以避免需要手动输入，请参阅&quot;构建配置环境指南&quot;以获取详细信息。</p></blockquote><h2 id="命令行工具的使用">命令行工具的使用</h2><p>以下章节描述了Gradle命令行页面的使用方式。<br>一些插件还会添加自己的命令行选项，例如为Java测试筛选添加的–test选项。有关如何为自己的任务暴露命令行选项的更多信息，请参阅&quot;声明命令行选项&quot;。</p><p>执行任务：<br>你可以在项目报告部分了解可用的项目和任务。</p><p>大多数构建支持一组通用的任务，称为声明周期任务。这些包括build、assemble和check任务。</p><p>要在根项目上执行名为myTask的任务，请输入：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gradle :myTask</span><br></pre></td></tr></table></figure><p>这将运行单个myTask及其所有的依赖项。</p><p>为任务设置选项<br>要向任务传递选项，请在任务名后面加上选项名称前缀&quot;–&quot;:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gradle exampleTask --exampleOption=exampleValue</span><br></pre></td></tr></table></figure><h2 id="区分任务选项和内置选项">区分任务选项和内置选项</h2><p>Gradle不会阻止任务注册与Gradle内置选项冲突的选项，比如–profile和–help</p><p>要想解决与Gradle内置选项冲突的任务选项，可以在命令中在任务名之前使用–分隔符</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gradle [--built-in-option-name...] -- [taskName...] [--<span class="keyword">task</span>-option-name...]</span><br></pre></td></tr></table></figure><p>如果一个名为mytask的任务，它接受一个名为profile的选项：</p><p>在Gradle中，使用&quot;gradle mytask --profile&quot;，Gradle将–profile作为内置的Gradle选项进行接收。</p><p>在Gradle中，使用 gradle --mytask --profile，Gradle将–profile作为任务选项传递。</p><p>在多模块中执行任务：<br>在多项目构建中，可以使用冒号(:)来分隔子任务名称和任务名称来执行子项目任务，以下是从根目录运行时等效方式。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle :subproject:taskName</span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle subproject:taskName</span><br></pre></td></tr></table></figure><p>你也可以使用仅包含任务名称的任务选择器来运行所有子项目的任务。</p><p>从根目录调用以下命令将运行所有子项目的测试任务。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle test</span><br></pre></td></tr></table></figure><blockquote><p>一些任务选择器，比如 help 或者 dependencies，只会在项目上运行任务，而不会在子工程上运行。</p></blockquote><p>在子项目内部调用gradle时，应该省略项目名称。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd subproject</span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle taskName</span><br></pre></td></tr></table></figure><blockquote><p>当从子项目目录执行Gradle Wrapper时，应该相对地引用gradlew，…/gradlew taskName</p></blockquote><h2 id="Executing-multiple-tasks">Executing multiple tasks</h2><p>You can also specify multiple tasks. The tasks’ dependencies determine the precise order of execution, and a task having no dependencies may execute earlier than it is listed on the command-line.</p><p>For example, the following will execute the test and deploy tasks in the order that they are listed on the command-line and will also execute the dependencies for each task.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle test deploy</span><br></pre></td></tr></table></figure><h2 id="Command-line-order-safety">Command line order safety</h2><p>Although Gradle will always attempt to execute the build quickly, command line ordering safety will also be honored.</p><p>For example, the following will execute clean and build along with their dependencies:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle clean build</span><br></pre></td></tr></table></figure><p>However, the intention implied in the command line order is that clean should run first and then build. It would be incorrect to execute clean after build, even if doing so would cause the build to execute faster since clean would remove what build created.</p><p>Conversely, if the command line order was build followed by clean, it would not be correct to execute clean before build. Although Gradle will execute the build as quickly as possible, it will also respect the safety of the order of tasks specified on the command line and ensure that clean runs before build when specified in that order.</p><p>Note that command line order safety relies on tasks properly declaring what they create, consume, or remove.</p><h2 id="Gradle实操">Gradle实操</h2><h3 id="你要构建什么">你要构建什么</h3><p>您将构建一个Java应用程序，该应用程序由一个应用程序和多个库项目组成。</p><h3 id="你需要什么">你需要什么</h3><ul><li>一个IDE，例如Intellij IDEA</li><li>Java开发套件 (JDK), 版本8以上</li><li>最新的Gradle</li></ul><h3 id="创建项目文件夹">创建项目文件夹</h3><p>Gradle附带了一个名为init的内置任务，该任务在一个空文件夹中初始化一个新的Gradle项目。init任务使用（也是内置的）wrapper任务来创建Gradle wrapper脚本gradlew。</p><p>开始的步骤就是创建一个文件夹并进入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir demo</span><br><span class="line">$ cd demo</span><br></pre></td></tr></table></figure><h3 id="运行初始的任务">运行初始的任务</h3><p>在新的项目目录中，在终端中使用以下命令运行init任务：gradle init。<br>出现提示时，选择2:application项目类型和3:Java作为实现语言。然后，选择2：添加库项目。接下来，您可以选择DSL来编写构建脚本——1:Groovy或2:Kotlin。对于其他问题，请按enter键以使用默认值。</p><p>输出如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ gradle init</span><br><span class="line"></span><br><span class="line">Select type of project to generate:</span><br><span class="line">  1: basic</span><br><span class="line">  2: application</span><br><span class="line">  3: library</span><br><span class="line">  4: Gradle plugin</span><br><span class="line">Enter selection (default: basic) [1..4] 2</span><br><span class="line"></span><br><span class="line">Split functionality across multiple subprojects?:</span><br><span class="line">   1: no - only one application project</span><br><span class="line">   2: yes - application and library projects</span><br><span class="line">Enter selection (default: no - only one application project) [1..2] 2</span><br><span class="line"></span><br><span class="line">Select implementation language:</span><br><span class="line">  1: C++</span><br><span class="line">  2: Groovy</span><br><span class="line">  3: Java</span><br><span class="line">  4: Kotlin</span><br><span class="line">  5: Scala</span><br><span class="line">  6: Swift</span><br><span class="line">Enter selection (default: Java) [1..6] 3</span><br><span class="line"></span><br><span class="line">Select build script DSL:</span><br><span class="line">  1: Groovy</span><br><span class="line">  2: Kotlin</span><br><span class="line">Enter selection (default: Groovy) [1..2] 1</span><br><span class="line"></span><br><span class="line">Select test framework:</span><br><span class="line">  1: JUnit 4</span><br><span class="line">  2: TestNG</span><br><span class="line">  3: Spock</span><br><span class="line">  4: JUnit Jupiter</span><br><span class="line">Enter selection (default: JUnit 4) [1..4]</span><br><span class="line"></span><br><span class="line">Project name (default: demo):</span><br><span class="line">Source package (default: demo):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL</span><br><span class="line">2 actionable tasks: 2 executed</span><br></pre></td></tr></table></figure><p>init任务生成具有以下结构的新项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">├── gradle 1</span><br><span class="line">│   └── wrapper</span><br><span class="line">│       ├── gradle-wrapper.jar</span><br><span class="line">│       └── gradle-wrapper.properties</span><br><span class="line">├── gradlew 2 </span><br><span class="line">├── gradlew.bat 2</span><br><span class="line">├── settings.gradle 3</span><br><span class="line">├── buildSrc</span><br><span class="line">│   ├── build.gradle 4</span><br><span class="line">│   └── src</span><br><span class="line">│       └── main</span><br><span class="line">│           └── groovy 5</span><br><span class="line">│               ├── demo.java-application-conventions.gradle</span><br><span class="line">│               ├── demo.java-common-conventions.gradle</span><br><span class="line">│               └── demo.java-library-conventions.gradle</span><br><span class="line">├── app</span><br><span class="line">│   ├── build.gradle 6</span><br><span class="line">│   └── src</span><br><span class="line">│       ├── main 7</span><br><span class="line">│       │   └── java</span><br><span class="line">│       │       └── demo</span><br><span class="line">│       │           └── app</span><br><span class="line">│       │               ├── App.java</span><br><span class="line">│       │               └── MessageUtils.java</span><br><span class="line">│       └── test 8</span><br><span class="line">│           └── java</span><br><span class="line">│               └── demo</span><br><span class="line">│                   └── app</span><br><span class="line">│                       └── MessageUtilsTest.java</span><br><span class="line">├── list</span><br><span class="line">│   ├── build.gradle 6</span><br><span class="line">│   └── src 7</span><br><span class="line">│       ├── main </span><br><span class="line">│       │   └── java</span><br><span class="line">│       │       └── demo</span><br><span class="line">│       │           └── list</span><br><span class="line">│       │               └── LinkedList.java</span><br><span class="line">│       └── test 8 </span><br><span class="line">│           └── java</span><br><span class="line">│               └── demo</span><br><span class="line">│                   └── list</span><br><span class="line">│                       └── LinkedListTest.java</span><br><span class="line">└── utilities</span><br><span class="line">    ├── build.gradle 6</span><br><span class="line">    └── src</span><br><span class="line">        └── main 7</span><br><span class="line">            └── java</span><br><span class="line">                └── demo</span><br><span class="line">                    └── utilities</span><br><span class="line">                        ├── JoinUtils.java</span><br><span class="line">                        ├── SplitUtils.java</span><br><span class="line">                        └── StringUtils.java</span><br></pre></td></tr></table></figure><ol><li>为Gradle wrapper文件生成的文件夹</li><li>Gradle wrapper 启动脚本</li><li>用于定义工程名称和子项目的设置文件</li><li>buildSrc的构建脚本，用于配置构建逻辑的依赖项</li><li>用Groovy或Kotlin DSL编写插件的源文件夹</li><li>构建三个子项目app、list、utilities的脚本</li><li>每个子项目中的Java源文件夹</li><li>子项目中的Java测试源文件夹</li></ol><h3 id="理解什么是Gradle-Wrapper">理解什么是Gradle Wrapper</h3><p>Gradle包装器是启动Gradle构建的最好方式，包装器会下载（如果需要）并调用构建中声明的特定版本的gradle。<br>在您新创建的项目中，首先查看Gradle wrapper使用的文件。包括适用于macOS和Linux的shell脚本和适用于Windows的批处理脚本。这些脚本允许您运行Gradle build而无需在系统上安装Gradle，它还有助于确保不同开发人员之间以及本地和CI机器之间使用相同版本的Gradle进行构建。<br>然后，您将不直接调用Gradle，而使用Gradle Wrapper。</p><p>Step 3. 调用gradle wrapper<br>通过输入以下的命令来使用wrapper：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew build</span><br></pre></td></tr></table></figure><p>在Windows中，命令是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gradlew.bat build</span><br></pre></td></tr></table></figure><p>当你第一次运行Wrapper时，如果你的机器上没有安装Gradle，它将下载并缓存Gradle的二进制文件。<br>在这种情况下，我们通过Wrapper调用Gradle来构建我们的项目，因此我们可以看到应用程序<br>目录现在包含一个新的生成文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd app</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 10 gradle-user staff 320 May 24 18:07 build</span><br><span class="line">-rw-r--r-- 1 gradle-user staff 862 May 24 17:45 build.gradle.kts</span><br><span class="line">drwxr-xr-x 4 gradle-user staff 128 May 24 17:45 src</span><br></pre></td></tr></table></figure><p>如果没有其他的设置，所有通过build生成的文件都会进入build文件夹。</p><h2 id="Gradle中定义常量">Gradle中定义常量</h2><p>我们可以在Gradle中定义常量：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line">            <span class="comment">// 定义gradle常量</span></span><br><span class="line">            buildConfigField(<span class="string">&quot;boolean&quot;</span>, <span class="string">&quot;LOG_DEBUG&quot;</span>, <span class="string">&quot;true&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们就可以在BuildConfig类中看到我们定义的常量：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildConfig</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// Field from build type: debug</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> LOG_DEBUG = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但这里需要注意的是字符串需要转义：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    buildTypes &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line">            <span class="comment">// 定义gradle常量</span></span><br><span class="line">            buildConfigField(<span class="string">&quot;boolean&quot;</span>, <span class="string">&quot;LOG_DEBUG&quot;</span>, <span class="string">&quot;true&quot;</span>)</span><br><span class="line">            buildConfigField(<span class="string">&quot;String&quot;</span>, <span class="string">&quot;LOG_TAG&quot;</span>, <span class="string">&quot;\&quot;Partner\&quot;&quot;</span>)</span><br><span class="line">            buildConfigField(<span class="string">&quot;String&quot;</span>, <span class="string">&quot;SP_NAME&quot;</span>, <span class="string">&quot;\&quot;Config\&quot;&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提升Gradle构建的十大技巧">提升Gradle构建的十大技巧</h2><ul><li>使用最新版的Gradle插件</li><li>避免激活旧的Multidex</li><li>急用Multidex apk构建</li></ul><p><img src="C:%5CUsers%5C86185%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231111155602979.png" alt="image-20231111155602979"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 调试</span><br><span class="line">if (rootProject.hasProperty(&quot;devBuild&quot;))&#123;</span><br><span class="line">    splits.abi.enable=false</span><br><span class="line">    splits.density.enable=false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>最小化打包资源</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 调试</span><br><span class="line">resConfig(&quot;zh&quot;)</span><br></pre></td></tr></table></figure><ul><li>禁用PNG压缩</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 调试</span><br><span class="line">if (rootProject.hasProperty(&quot;devBuild&quot;)) &#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    //禁用PNG压缩</span><br><span class="line">    aaptOptions.cruncherEnabled = false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>PNG转换为webp</li></ul><h2 id="开发Gradle插件">开发Gradle插件</h2><h3 id="开发自定义Gradle插件">开发自定义Gradle插件</h3><p>Gradle插件打包了可重复使用的构建的逻辑片段，可在许多不同的项目和构建中使用。Gradle允许您实现自己的插件，以便重复使用您的构建逻辑并与其他人分享。<br>您可以使用任何喜欢的语言来实现Gradle插件，最后都会转换为JVM字节码，在我们的实例中，我们将在独立插件项目中使用Java作为实现语言，并在构建脚本中使用Groovy和Kotlin，通常情况下，使用Java或者Kotlin实现的插件的性能将高于使用Groovy实现的相同的插件。</p><p>打包插件：<br>有这些地方您可以放置插件的源代码。</p><p>Build script：<br>您可以将插件的源代码直接放在构建脚本中。这样做的好处是插件会自动编译并包含在构建脚本的类路径中，而不需要您做任何事情。然而，该插件在构建脚本之外是不可见的，因此不能在定义插件的构建脚本之外重用插件。</p><p>buildSrc project<br>你可以将插件的源代码放在<em>rootProjectDir/buildSrc/src/main/java</em>，或者<em>rootProjectDir/buildSrc/src/main/groovy</em>和<em>rootProjectDir/buildSrc/src/main/kotlin</em>下，<br>Gradle将会负责编译和测试插件，并使其在构建脚本的类路径中可用。该插件对构建中的每个构建脚本都可见。但是，它在构建之外不可见，因此，您无法在定义插件的构建之外重用它。</p><p>独立项目<br>你可以为你的插件创建一个单独的项目，该项目会生成并发布一个JAR文件，你可以在多个构建中使用它，并与他人共享。通常，这个JAR文件可能包含一些插件，或将多个相关的任务类打包到一个库中，或者两者结合使用。在我们的示例中，我们将从构建脚本中开始，以保证事情简单，然后，我们将看看如何创建一个独立的项目。</p><h3 id="编写一个简单的插件">编写一个简单的插件</h3><p>要创建一个Gradle插件，你需要编写一个实现Plugin接口的类，当该插件应用到一个项目上时，Gradle会创建插件类的一个实例并调用该实例的Plugin.apply()方法。项目对象被作为参数传递，插件可以使用它来根据需要配置项目。以下示例包含一个问候插件，它向项目添加了一个hello任务。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreetingPlugin</span> <span class="keyword">implements</span> <span class="title">Plugin</span>&lt;<span class="title">Project</span>&gt; &#123;</span></span><br><span class="line">  <span class="keyword">void</span> apply(Project project) &#123;</span><br><span class="line">  project.task(<span class="string">&#x27;hello&#x27;</span>) &#123;</span><br><span class="line">  doLast &#123;</span><br><span class="line">  println <span class="string">&#x27;Hello from the GreetingPlugin&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 应用插件</span></span><br><span class="line">apply <span class="attr">plugin:</span> GreetingPlugin</span><br></pre></td></tr></table></figure><p>在命令行里输入：</p><blockquote><p>gradle -q hello</p></blockquote><p>输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello from the GreetingPlugin</span><br></pre></td></tr></table></figure><p>需要注意的一点是，为每个应用它的项目创建了一个插件的新实例，另外，请注意Plugin类是一种泛型类型。这个示例中将Project类型作为类型参数传递给它。插件也可以接收Settings类型的参数，这样插件可以在设置脚本中应用，或接收Gradle类型的参数，这样插件可以在初始化脚本中应用。</p><h3 id="使插件可配置">使插件可配置</h3><p>大多数插件为构建脚本和其他插件提供了一些配置选项，以用于自定义插件的工作方式。插件使用扩展对象来实现这一点。Gradle项目有一个关联的ExtensionContainer对象，该对象包含插件的所有设置和属性已应用于该项目的。您可以通过添加扩展对象。扩展对象只是一个具有JavaBean属性的对象<br>其表示配置。让我们为项目添加一个简单的扩展对象。在这里，我们将问候语扩展对象添加到<br>项目，它允许您配置问候语。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">GreetingPluginExtension</span> &#123;</span></span><br><span class="line">  Property&lt;String&gt; getMessage()</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GreetingPlugin</span> <span class="keyword">implements</span> <span class="title">Plugin</span>&lt;<span class="title">Project</span>&gt; &#123;</span></span><br><span class="line"><span class="keyword">void</span> apply(Project project) &#123;</span><br><span class="line"><span class="comment">// Add the &#x27;greeting&#x27; extension object</span></span><br><span class="line"><span class="keyword">def</span> extension = project.extensions.create(<span class="string">&#x27;greeting&#x27;</span>,GreetingPluginExtension)</span><br><span class="line">extension.message.convention(<span class="string">&#x27;Hello from GreetingPlugin&#x27;</span>)</span><br><span class="line"><span class="comment">// Add a task that uses configuration from the extension object</span></span><br><span class="line">project.task(<span class="string">&#x27;hello&#x27;</span>) &#123;</span><br><span class="line">doLast &#123;</span><br><span class="line">println extension.message.get()</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">apply <span class="attr">plugin:</span> GreetingPlugin</span><br><span class="line"><span class="comment">// Configure the extension</span></span><br><span class="line">greeting.message = <span class="string">&#x27;Hi from Gradle&#x27;</span></span><br></pre></td></tr></table></figure><p>Most plugins offer some configuration options for build scripts and other plugins to use to<br>customize how the plugin works. Plugins do this using extension objects. The Gradle Project has an<br>associated ExtensionContainer object that contains all the settings and properties for the plugins<br>that have been applied to the project. You can provide configuration for your plugin by adding an<br>extension object to this container. An extension object is simply an object with Java Bean properties<br>that represent the configuration.<br>Let’s add a simple extension object to the project. Here we add a greeting extension object to the<br>project, which allows you to configure the greeting.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;什么是Gradle&lt;/h1&gt;
&lt;p&gt;Gradle构建工具是一个快速，可靠和灵活的开源构建自动化工具，具有优雅且可扩展的声明性构建语言。&lt;br&gt;
在这个手册中，Gradle构建工具通常缩写为Gradle。&lt;/p&gt;
&lt;h1&gt;为什么使用Gradle&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java NIO</title>
    <link href="http://example.com/2023/11/07/Java%E5%9F%BA%E7%A1%80/Java-NIO/"/>
    <id>http://example.com/2023/11/07/Java%E5%9F%BA%E7%A1%80/Java-NIO/</id>
    <published>2023-11-07T13:07:16.000Z</published>
    <updated>2024-06-24T13:59:37.922Z</updated>
    
    <content type="html"><![CDATA[<h1>Java NIO概述</h1><p>Java NIO是从Java1.4版本引入的一个新的API，可以代替标准的Java IO API。NIO支持面向缓冲区的，基于通道的IO操作。NIO将以更加高效的方式进行文件的读写操作。</p><h2 id="阻塞IO">阻塞IO</h2><p>通常在进行同步I/O操作时，如果读取数据，代码会阻塞直至有可供读取的数据，同样，写入调用会阻塞直至数据能够写入。传统的Server/Client模式会基于TPR（Thread Per Request），服务器会为每个客户端建立一个线程，由该线程单独负责处理一个客户请求。这种模式带来的一个问题就是线程数量的剧增。大量的线程会增大服务器的开销。大多数的实现为了避免这个问题。都采用了线程池模型，并设置线程池线程的最大数量，这带来了新的问题，如果线程池中有100个线程，而有100个用户都在进行大文件下载，会导致第101个用户的请求无法响应。</p><h2 id="非阻塞IO">非阻塞IO</h2><p>NIO中非阻塞IO采用了基于Reactor模式的工作方式，I/O调用不会被阻塞，相反是注册感兴趣的特定I/O事件，如可读数据到达，新的套接字连接等等。在发生特定事件时，系统再通知我们，NIO中实现非阻塞I/O的核心对象就是Selector。</p><p>Selector就是注册各种I/O事件地方，而且当我们感兴趣的事情发生时，就是这个对象告诉我们所发生的事件，如下图所示：</p><p>从图中可以看出，当有读或写等任何注册的事件发生时，可以从Selector中获取相应的SelectionKey，同时从SelectionKey中可以找到发生的事件和该事件所发生的具体的SelectableChannel，以获取到客户端发送过来的数据。</p><p>非阻塞指的是IO事件本身不阻塞，但是获取IO事件的select()方法是需要阻塞等待的，区别是阻塞的IO会阻塞在IO操作上，NIO阻塞在事件获取上，没有事件就没有IO，从高层次看IO就不阻塞了，也就是说只有IO已经发生那么我们才评估IO是否阻塞，但是select()阻塞的时候IO还没有发生，何谈IO的阻塞呢？NIO的本质是延迟IO操作到真正发生IO的时候，而不是以前的只要IO流打开了就一直等待IO操作。</p><table><thead><tr><th>IO</th><th>NIO</th></tr></thead><tbody><tr><td>面向流（Stream Oriented）</td><td>面向缓冲区（Buffer Oriented）</td></tr><tr><td>阻塞IO（Blocking IO）</td><td>非阻塞IO（Non Blocking IO）</td></tr><tr><td>（无）</td><td>选择器</td></tr></tbody></table><h2 id="NIO概述">NIO概述</h2><p>Java NIO由以下几个核心部分组成：</p><ul><li>Channels</li><li>Buffers</li><li>Selectors</li></ul><p>虽然Java NIO中除此之外还有很多类和组件，但Channel，Buffer和Selector构成了核心的API，其他组件，如Pipe和FileLock，只不过是与三个核心组件共同使用的工具类。</p><h3 id="Channel">Channel</h3><p>首先说一下Channel，可以翻译为&quot;通道&quot;。Channel和IO中的Stream（流）是差不多一个等级的。只不过流是单向的，譬如InputStream，OutputStream，而Channel是双向的，既可以用来进行读操作，又可以进行写操作。</p><p>NIO的主要实现有：FileChannel，DatagramChannel，SocketChannel和ServerSocketChannel，这里看名字就可以猜出来：分别对应文件IO，UDP和TCP（Server和Client）</p><h3 id="Buffer">Buffer</h3><p>NIO中的关键Buffer实现有：ByteBuffer，CharBuffer，DoubleBuffer，FloatBuffer，IntBuffer，LongBuffer，ShortBuffer，分别对应基本数据类型：byte，char，double，float，int，long，short。</p><h3 id="Selector">Selector</h3><p>selector单从字面意思不好理解，需要结合服务器的设计演化来理解它的用途：</p><h4 id="多线程设计">多线程设计</h4><p><img src="E:%5Ccode%5Cdocs%5Cblogdocs%5C%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%5Cassets%5C%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6.png" alt=""></p><h2 id="Channel概述">Channel概述</h2><p>Channel是一个通道，可以通过它读取和写入数据，它就像水管一样，网络数据通过Channel读取和写入。通道与流的不同之处在于通道是双向的，流只是在一个方向上移动（一个流必须是InputStream货或者OutputStream的子类），而且通道可以用于读，写或者同时用于读写，因为Channel是全双工的，所以它可以比流更好地映射底层操作系统的API。</p><p>NIO中通过channel封装了对数据源的操作，通过channel我们可以操作数据源，但又不必关心数据源的具体物理结构。这个数据源可能是多种的。比如，可以是文件，也可以是网络socket。在大多数应用中，channel与文件描述符或者socket是一一对应的，Channel用于在字节缓冲区和位于通道另一侧的实体（通常是一个文件或套接字）之间有效的传输数据。</p><p><strong>channel接口源码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Channel</span> <span class="keyword">extends</span> <span class="title">Closeable</span></span>&#123;   </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Tells whether or not this channel is open.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> true if,only if this channel is open</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isOpen</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Closes this channel</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException If an I/O error occurs</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与缓冲区不同，通道API主要由接口指定，不同的操作系统上通道实现（Channel Implementation）会有根本性的差异，所以通道API仅仅描述了可以做什么，因此很自然地，通道实现经常使用操作系统的本地代码，通道接口允许您以一种受控且可移植的方式来访问底层的I/O服务。</p><p>Channel是一个对象，可以通过它读取和写入数据，拿NIO与原来的I/O做个比较，通道就像是流，所有数据都通过Buffer对象来处理，您永远不会将字节直接写入通道中，相反，您是将数据写入包含一个或者多个字节的缓冲区。同样，您不会直接从通道中读取字节，而是将数据从通道读入到缓冲区。再从缓冲区获取这个字节。</p><p>Java NIO的通道类似流，但又有些不同：</p><ul><li>既可以从通道中读取数据，又可以写数据到通道，但流的读写通常是单向的。</li><li>通道可以异步地读写。</li><li>通道中的数据总是要先读到一个Buffer，或者总是要从一个Buffer中写入。</li></ul><h3 id="Channel实现">Channel实现</h3><p>下面是Java NIO中最重要的Channel的实现：</p><ul><li>FileChannel</li><li>DatagramChannel</li><li>SocketChannel</li><li>ServerSocketChannel</li></ul><p>1）FileChannel从文件中读写数据。</p><ol start="2"><li><p>DatagramChannel能通过UDP读写网络中的数据。</p></li><li><p>SocketChannel能通过TCP读写网络中的数据。</p></li><li><p>ServerSocketChannel 可以监听新进来的TCP连接，像Web服务器那样，对每一个新进来的连接都会创建一个SocketChannel。</p></li></ol><p>正如你看到的，这些通道涵盖了UDP，TCP网络IO，以及文件IO。</p><h3 id="FileChannel介绍和示例">FileChannel介绍和示例</h3><p>FileChannel类可以实现常用的read，write以及scatter/gather操作，同时它也提供了很多专用于文件的新方法。这些方法中的许多都是我们所熟悉的文件操作。</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>int read(ByteBuffer dst)</td><td>从Channel中读取数据到ByteBuffer</td></tr><tr><td>long read(ByteBuffer[] dsts)</td><td>将Channel中的数据&quot;分散&quot;到ByteBuffer[]</td></tr><tr><td>int write(ByteBuffer src)</td><td>将ByteBuffer中的数据写入到Channel</td></tr><tr><td>long write(ByteBuffer[] srcs)</td><td>将ByteBuffer[]中的数据&quot;聚集&quot;到Channel</td></tr><tr><td>long position()</td><td>返回此通道的文件位置</td></tr><tr><td>FileChannel position(long p)</td><td>设置此通道的文件位置</td></tr><tr><td>long size()</td><td>返回此通道的文件的当前大小</td></tr><tr><td>FileChannel truncate(long s)</td><td>将此通道的文件截取为给定大小</td></tr><tr><td>void force(boolean metaData)</td><td>强制将所有对此通道的文件更新写入到存储设备中</td></tr></tbody></table><p>下面是一个使用FileChannel读取数据到Buffer中的示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileChannelDemo1</span> </span>&#123;</span><br><span class="line">    <span class="comment">// FileChannel读取数据到buffer中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 创建FileChannel</span></span><br><span class="line">        RandomAccessFile accessFile =</span><br><span class="line">                <span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;D:\\springboot-proj\\multi-thread\\01.txt&quot;</span>, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        FileChannel channel = accessFile.getChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 创建Buffer</span></span><br><span class="line">        ByteBuffer buf = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 读取数据到buffer中</span></span><br><span class="line">        <span class="keyword">int</span> bytesRead = channel.read(buf);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (bytesRead != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;读取了&quot;</span> + bytesRead);</span><br><span class="line">            <span class="comment">// 读取的转换</span></span><br><span class="line">            buf.flip();</span><br><span class="line">            <span class="keyword">while</span> (buf.hasRemaining()) &#123;</span><br><span class="line">                System.out.println((<span class="keyword">char</span>) buf.get());</span><br><span class="line">            &#125;</span><br><span class="line">            buf.clear();</span><br><span class="line">            bytesRead = channel.read(buf);</span><br><span class="line">        &#125;</span><br><span class="line">        accessFile.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结束了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="FileChannel操作详解">FileChannel操作详解</h3><h4 id="打开FileChannel">打开FileChannel</h4><p>在使用FileChannel之前，必须先打开它。但是，我们无法直接打开一个FileChannel，需要通过一个InputStream、OutputStream或者RandomAccessFile来获取一个FileChannel实例，下面是通过RandomAccessFile打开FileChannel的示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RandomAccessFile accessFile =</span><br><span class="line">                <span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;D:\\springboot-proj\\multi-thread\\01.txt&quot;</span>, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        FileChannel inChannel = accessFile.getChannel();</span><br></pre></td></tr></table></figure><h4 id="从FileChannel读取数据">从FileChannel读取数据</h4><p>调用多个read()方法之一从FileChannel中读取数据。如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer buf = ByteBuffer.allocate(<span class="number">48</span>);</span><br><span class="line"><span class="keyword">int</span> bytesRead = inChannel.read(buf)</span><br></pre></td></tr></table></figure><p>首先，分配一个Buffer，从FileChannel中读取的数据将被读到Buffer中，然后，调用FileChannel.read()方法，该方法将数据从FileChannel读取到Buffer中，read()方法返回的int值，表示有多少个字节被读取到了Buffer中，如果返回-1，表示到了文件末尾。</p><h4 id="向FileChannel写数据">向FileChannel写数据</h4><p>使用FileChannel.write()方法向FileChannel写数据，该方法的参数是一个Buffer。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileChannelDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 打开FileChannel</span></span><br><span class="line">        RandomAccessFile randomAccessFile</span><br><span class="line">                = <span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;D:\\springboot-proj\\multi-thread\\01.txt&quot;</span>, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">        FileChannel channel = randomAccessFile.getChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Buffer对象</span></span><br><span class="line">        ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        String newData = <span class="string">&quot;data heima&quot;</span>;</span><br><span class="line"></span><br><span class="line">        byteBuffer.clear();</span><br><span class="line"></span><br><span class="line">        byteBuffer.put(newData.getBytes());</span><br><span class="line"></span><br><span class="line">        byteBuffer.flip();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (byteBuffer.hasRemaining()) &#123;</span><br><span class="line">            channel.write(byteBuffer);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        channel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：FileChannel.write()是在while循环中调用的，因为无法保证write()方法一次能向FileChannel写入多少字节，因此需要重复调用write()方法，直到Buffer中已经没有尚未写入通道的字节。</p><h4 id="关闭FileChannel">关闭FileChannel</h4><p>用完FileChannel后必须将其关闭：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inChannel.close();</span><br></pre></td></tr></table></figure><h4 id="FileChannel的position方法">FileChannel的position方法</h4><p>有时可能需要在FileChannel的某个特定位置进行数据的读或者写操作。可以通过调用position()方法获取FileChannel的当前位置，也可以通过调用position(long pos)方法设置FileChannel的当前位置。</p><p>这里有两个例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> pos = channel.position();</span><br><span class="line">channel.position(pos + <span class="number">123</span>)</span><br></pre></td></tr></table></figure><p>如果将位置设置在文件结束符之后，然后试图从文件通道中读取数据，读方法将返回1（文件结束标志）。</p><p>如果将位置设置在文件结束符之后，然后向通道中写数据，文件将撑大到当前位置并写入数据。这可能导致&quot;文件空洞&quot;，磁盘上物理文件中写入的数据间有空隙。</p><h3 id="FileChannel的size方法">FileChannel的size方法</h3><p>FileChannel实例的size()方法将返回该实例所关联文件的大小，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> fileSize = channel.size();</span><br></pre></td></tr></table></figure><h3 id="FileChannel的truncate方法">FileChannel的truncate方法</h3><p>可以使用FileChannel.truncate()方法截取一个文件。截取文件时，文件将中指定长度后面的部分将被删除。如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel.truncate(<span class="number">1024</span>);</span><br></pre></td></tr></table></figure><p>这个例子截取文件的前1024个字节。</p><h3 id="FileChannel的force方法">FileChannel的force方法</h3><p>FileChannel.force()方法将通道里尚未写入磁盘的数据强制写到磁盘上，出于性能方面的考虑，操作系统会将数据缓存到内存中，所以无法保证写入到FileChannel里的数据一定会即时写道磁盘上，要保证这一点，需要调用force()方法。</p><p>force()方法有一个boolean类型的参数，指明是否同时将文件元数据（权限信息等）写道磁盘上。</p><h3 id="FileChannel的transferTo和transferFrom方法">FileChannel的transferTo和transferFrom方法</h3><p>通道之间的数据传输：</p><p>如果两个通道中有一个是FileChannel，那你可以直接将数据从一个channel传输到另外一个channel。</p><p>FileChannel的transfrom()方法可以将数据从源通道传输到FileChannel中（译者注：这个方法在JDK文档的解释为将字节从给定的可读取字节通道传输到此通道的文件中）。下面是一个FileChannel完成文件间的复制的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通道之间数据的传输</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileChannelDemo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        RandomAccessFile aFile =</span><br><span class="line">                <span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;D:\\springboot-proj\\multi-thread\\01.txt&quot;</span>, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        FileChannel fromChannel = aFile.getChannel();</span><br><span class="line"></span><br><span class="line">        RandomAccessFile bFile = <span class="keyword">new</span> RandomAccessFile(<span class="string">&quot;D:\\springboot-proj\\multi-thread\\02.txt&quot;</span>, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line"></span><br><span class="line">        FileChannel toChannel = bFile.getChannel();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> count = fromChannel.size();</span><br><span class="line"></span><br><span class="line">        toChannel.transferFrom(fromChannel, position, count);</span><br><span class="line"></span><br><span class="line">        aFile.close();</span><br><span class="line">        bFile.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Socket通道">Socket通道</h2><ol><li>新的socket通道类可以运行非阻塞模式并且是可选择的，可以激活大程序（如网络服务器和中间件组件）巨大的可伸缩性和灵活性。本节中，我们会看到，再也没有为每个socket连接使用一个线程的必要了，也避免了管理大量线程所需的上下文切换的开销，借助新的NIO类，一个或者几个线程就可以管理成百上千的活动socket连接了并且只有很少甚至可能没有性能损失。所有socket通道类（DatagramChannel、SocketChannel和ServerSocketChannel）都继承了位于java.nio.channels.spi包中的AbstractSelectableChannel。这意味着我们可以用一个Selector对象来执行socket通道的就绪选择。</li><li>请注意DatagramChannel和SocketChannel实现定义读和写功能的接口而ServerSocketChannel不实现，ServerSocketChannel负责监听传入的连接和创建新的SocketChannel对象，它本身不传输数据。</li><li>在我们具体讨论每一种socket通道前，您应该了解socket和socket通道之间的关系。通道是一个连接I/O服务导管并提供与该服务交互的方法。就某个socket而言，它不会再次实现与之对应的socket通道类中的socket协议API，而java.net中已经存在的socket通道都<strong>可以被大多数协议操作重复使用</strong>。</li></ol><p>全局socket通道类（DatagramChannel、SocketChannel、ServerSocketChannel）在被实例化时都会创建一个对等的socket对象，这些是我们所熟悉的来自java.net的类（Socket、ServerSocket和DatagramSocket），它们已经被更新以识别通道。对等socket可以通过调用socket()方法从一个通道上获取。此外，这三个java.net类现在都有getChannel()方法。</p><ol start="4"><li>要把一个socket管道置于非阻塞模式，我们要依靠所有socket通道类的公有超级类：SelectableChannel。就绪选择（readiness selection）是一种可以用来查询通道的机制，该查询可以判断通道是否准备好执行一个目标操作，如读或者写。非阻塞I/O和可选择性是紧密相连的，那也正是管理阻塞模式的API代码要在SelectableChannel超级类中定义的原因。</li></ol><p>设置或重新设置一个通道的阻塞模式是很简单的，只要调用configureBlocking()方法即可，传递参数值为true则设置为阻塞模式，参数值为false设置为非阻塞模式。可以通过调用isBlocking()方法来判断某个socket通道当前处于哪种模式。</p><p>AbstractSelectableChannel.java中实现的configureBlocking()方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> SelectableChannel <span class="title">configureBlocking</span><span class="params">(<span class="keyword">boolean</span> block)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (regLock) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!isOpen())</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ClosedChannelException();</span><br><span class="line">            <span class="keyword">if</span> (blocking == block)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">if</span> (block &amp;&amp; haveValidKeys())</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalBlockingModeException();</span><br><span class="line">            implConfigureBlocking(block);</span><br><span class="line">            blocking = block;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>非阻塞socket通常被认为是服务端使用的，因为它们使同时管理很多socket通道变得更容易。但是，在客户端使用一个或几个非阻塞模式的socket通道也是有益处的，例如，借助非阻塞socket通道，GUI程序可以专注于用户请求并且同时维护与一个或多个服务器的会话。在很多程序上，非阻塞模式都是有用的。</p><p>偶尔地，我们也会需要防止socket通道的阻塞模式被更改。API中有一个blockingLock()方法，该方法会返回一个非透明的对象引用，返回的对象是通道实现修改阻塞模式时内部使用的，只有拥有此对象的锁的线程才能更改通道的阻塞模式。</p><p>下面介绍这三个通道</p><h3 id="ServerSocketChannel">ServerSocketChannel</h3><p>ServerSocketChannel是一个基于通道的socket监听器，它同我们所熟悉的java.net.ServerSocket执行相同的任务，不过它增加了通道语义，因此能够在非阻塞模式下运行。</p><p>由于ServerSocketChannel没有bind()方法，因此有必要取出对等的socket并使用它来绑定到一个端口以开始监听连接。我们也是使用对等ServerSocket的API来根据需要设置其他的socket选项。</p><p>同java.net.ServerSocket一样，ServerSocketChannel也有accept()方法。一旦创建了一个ServerSocketChannel并用对等socket绑定了它，然后您就可以在其中一个上调用accept()，如果您选择在ServerSocket上调用accept()方法，那么它会同任何其他的ServerSocket表示一样的行为：总是阻塞并返回一个java.net.Socket对象。如果您选择在ServerSocketChannel上调用accept()方法则会返回SocketChannel类型的对象，返回的对象能够在非阻塞模式下运行。</p><p>换句话说：</p><p>ServerSocketChannel的accept()方法会返回SocketChannel类型对象，SocketChannel可以在非阻塞模式下运行。</p><p>其他Socket的accept()方法会阻塞返回一个Socket对象。如果ServerSocketChannel以非阻塞模式被调用，当没有传入连接在等待时，ServerSocketChannel.accept()会立即返回null。正是这种检查连接而不阻塞的能力实现了并降低了复杂性。可选择性也因此得到实现。我们可以使用一个选择器实例来注册ServerSocketChannel对象以实现新连接到达时自动通知的功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketChannelDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// 端口号</span></span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">8888</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// buffer</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.wrap(<span class="string">&quot;hello heima&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        ServerSocketChannel ssc = ServerSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定</span></span><br><span class="line">        ssc.socket().bind(<span class="keyword">new</span> InetSocketAddress(port));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置一个非阻塞模式</span></span><br><span class="line">        ssc.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听是否有新</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;正在等待连接&quot;</span>);</span><br><span class="line">            SocketChannel sc = ssc.accept();</span><br><span class="line">            <span class="keyword">if</span> (sc == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;当前没有连接&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sc != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 有连接传入</span></span><br><span class="line">                System.out.println(<span class="string">&quot;连接来自:&quot;</span> + sc.socket().getRemoteSocketAddress());</span><br><span class="line">                buffer.rewind(); <span class="comment">// 指针0</span></span><br><span class="line">                sc.write(buffer);</span><br><span class="line">                sc.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>打开ServerSocketChannel</li></ol><p>通过调用ServerSocketChannel.open()方法来打开ServerSocketChannel。</p><p>ServerSocketChannel severSocketChannel = ServerSocketChannel.open();</p><ol start="2"><li>关闭ServerSocketChannel</li></ol><p>通过调用ServerSocketChannel.close()方法来关闭ServerSocketChannel。serverSocketChannel.close();</p><ol start="3"><li>监听新的连接</li></ol><p>通过ServerSocketChannel.accept()方法监听新进的连接。当accept()方法返回时候，它返回一个包含新进来的连接的SocketChannel。因此，accept()方法会一直阻塞到有新连接到达。</p><p>通常不会仅仅监听一个连接，在while循环中调用accept()方法，如下面的例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Waiting for connections&quot;</span>);</span><br><span class="line">    SocketChannel sc = ssc.accept();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SocketChannel">SocketChannel</h3><h4 id="SocketChannel介绍">SocketChannel介绍</h4><p>Java NIO中的SocketChannel是一个连接到TCP网络套接字的通道。</p><blockquote><p>A selectable channel for stream-oriented connecting sockets</p></blockquote><p>以上是Java Docs中对于SocketChannel的描述：SocketChannel是一种面向流连接sockets套接字的可选择通道。从这里可以看出：</p><ul><li>SocketChannel是用来连接Socket套接字</li><li>SocketChannel主要用途用来处理网络IO的通道</li><li>SocketChannel是基于TCP连接传输</li><li>SocketChannel实现了可选择通道，可以被多路复用的</li></ul><h4 id="SocketChannel特征">SocketChannel特征</h4><ol><li>对于已经创建的Socket不能创建SocketChannel</li><li>SocketChannel中提供的open接口创建的Channel并没有进行网络级联，需要使用connect接口连接到指定地址。</li><li>未进行连接的SocketChannel执行IO操作时，会抛出NotYetConnectedException</li><li>SocketChannel支持两种IO模式：阻塞式和非阻塞式</li><li>SocketChannel支持异步关闭。如果SocketChannel在一个线程上read阻塞，另一个线程对该SocketChannel调用shutdownInput，则读阻塞的线程将返回-1表示没有读取任何数据；如果SocketChannel在一个线程上write阻塞，另一个线程对该SocketChannel调用shutdownWrite，则写阻塞的线程将抛出AsynchronousCloseException</li><li>SocketChannel支持设定参数</li></ol><p>SO_SNDBUF  套接字发送缓冲区大小</p><p>SO_RCVBUF  套接字接收缓冲区大小</p><p>SO_KEEPALIVE   保活连接</p><p>O_REUSEADDR  复用地址</p><p>SO_LINGER     有数据传输时延缓关闭Channel（只有在非阻塞模式下有用）</p><p>TCP_NODELAY    禁用Nagle算法</p><h2 id="SocketChannel的使用">SocketChannel的使用</h2><h3 id="创建SocketChannel">创建SocketChannel</h3><p>方式一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SocketChannel socketChannel = SocketChannel.open(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;www.baidu.com&quot;</span>, <span class="number">80</span>));</span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SocketChannel socketChannel2 = SocketChannel.open();</span><br><span class="line">socketChannel2.connect(<span class="keyword">new</span> InetSockerAddress(<span class="string">&quot;www.baidu.com&quot;</span>, <span class="number">80</span>));</span><br></pre></td></tr></table></figure><p>直接使用有参open api或者使用无参open api，但是在无参open只是创建了一个SocketChannel对象，并没有进行实质的tcp连接。</p><h3 id="连接校验">连接校验</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">socketChannel.isOpen(); <span class="comment">// 测试SocketChannel是否为open状态</span></span><br><span class="line">socketChannel.isConnected();  <span class="comment">// 测试SocketChannel是否已经被连接</span></span><br><span class="line">socketChannel.isConnectionPending();   <span class="comment">//测试SocketChannel是否正在进行连接</span></span><br><span class="line">socketChannel.finishConnect();  <span class="comment">// 检验正在进行套接字连接的SocketChannel是否已经完成连接</span></span><br></pre></td></tr></table></figure><h3 id="读写模式">读写模式</h3><p>前面提到的SocketChannel支持阻塞和非阻塞两种模式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socketChannel.configureBlocking(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><p>通过以上方法设置SocketChannel的读写模式。false表示非阻塞，true表示阻塞。</p><h4 id="读写">读写</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SocketChannel socketChannel = SocketChannel.open(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;www.baidu.com&quot;</span>, <span class="number">80</span>));</span><br><span class="line">ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">16</span>);</span><br><span class="line">socketChannel.read(byteBuffer);</span><br><span class="line">socketChannel.close();</span><br><span class="line">System.out.println(<span class="string">&quot;read over&quot;</span>);</span><br></pre></td></tr></table></figure><p>以上为阻塞式读，当执行到read处时，线程将阻塞，控制台将无法打印read over</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SocketChannel socketChannel = SocketChannel.open(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;www.baidu.com&quot;</span>, <span class="number">80</span>));</span><br><span class="line">socketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">16</span>);</span><br><span class="line">socketChannel.read(byteBuffer);</span><br><span class="line">socketChannel.close();</span><br><span class="line">System.out.println(<span class="string">&quot;read over&quot;</span>);</span><br></pre></td></tr></table></figure><p>以上为非阻塞读，控制台将打印read over</p><p>读写都是面向缓冲区，这个读写方式与前文中的FileChannel相同。</p><h3 id="设置和获取参数">设置和获取参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socketChannel.setOption(StandardSocketOptions.SO_KEEPALIVE, Boolean.TRUE).setOption(StandardSocketOptions.TCP_NODELAY, Boolean.TRUE);</span><br></pre></td></tr></table></figure><p>通过setOptions方法可以设置socket套接字的相关参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">socketChannel.getOption(StandardSocketOptions.SO_KEEPALIVE);</span><br><span class="line">socketChannel.getOption(StandardSocketOptions.SO_RCVBUF);</span><br></pre></td></tr></table></figure><p>可以通过getOption获取相关参数的值，如默认的接收缓冲区大小是8192byte。</p><p>SocketChannel还支持多路复用。</p><h2 id="DatagramChannel">DatagramChannel</h2><p>正如SocketChannel对应Socket，ServerSocketChannel对应ServerSocket，每一个DatagramChannel对象也有一个关联的DatagramSocket对象，正如SocketChannel模拟连接导向的流协议（如TCP/IP）,DatagramChannel则模拟包导向的无连接协议（如UDP/IP）。DatagramChannel是无连接的，每个数据报(datagram)都是一个只包含的实体，拥有它自己的目的地址及不依赖其他数据报的数据负载。与面向流的socket不同，DatagramChannel可以发送单独的数据报给不同的目的地址，同样，DatagramChannel对象也可以接收来自任意地址的数据包。每个到达的数据报都包含有关于它来自何处的消息（源地址）</p><h3 id="打开DatagramChannel">打开DatagramChannel</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DatagramChannel server = DatagramChannel.open();</span><br><span class="line">server.socket().bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">10086</span>));</span><br></pre></td></tr></table></figure><p>此例子是打开10086端口接收UDP数据包</p><h3 id="接收数据">接收数据</h3><p>通过receive()接收UDP包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer receiveBuffer = ByteBuffer.allocate(<span class="number">64</span>);</span><br><span class="line">receiveBuffer.clear();</span><br><span class="line">SocketAddress receiveAddr = server.receive(receiveBuffer);</span><br></pre></td></tr></table></figure><p>SocketAddress可以获得发包的ip，端口等信息，用toString查看，格式如下：/127.0.0.1:57126</p><h3 id="发送数据">发送数据</h3><p>通过send()发送UDP包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DatagramChannel server = DatagramChannel.open();</span><br><span class="line">ByteBuffer sendBuffer = ByteBuffer.wrap(<span class="string">&quot;client send&quot;</span>.getBytes());</span><br><span class="line">server.send(sendBuffer, <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">10086</span>));</span><br></pre></td></tr></table></figure><h3 id="连接">连接</h3><p>UDP不存在真正意义上的连接，这里的连接是向特定服务地址用read和write接收发送数据包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">client.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">10086</span>));</span><br><span class="line"><span class="keyword">int</span> readSize = client.read(sendBuffer);</span><br><span class="line">server.write(sendBuffer);</span><br></pre></td></tr></table></figure><p>read()和write()只有在connect()后才能使用，不然会抛出NotYetConnectedException异常。用read()接收时，如果没有接收到包，会抛PortUnreachableException异常。</p><h2 id="DatagramChannel示例">DatagramChannel示例</h2><p>客户端发送，服务端接收的例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatagramChannelDemo</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 发送的实现</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendDatagram</span><span class="params">()</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">// 打开一个DatagramChannel</span></span><br><span class="line">        DatagramChannel sendChannel = DatagramChannel.open();</span><br><span class="line">        InetSocketAddress sendAddress = <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            ByteBuffer buffer = ByteBuffer.wrap(<span class="string">&quot;发送atguigu&quot;</span>.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">            sendChannel.send(buffer, sendAddress);</span><br><span class="line">            System.out.println(<span class="string">&quot;已经完成了发送&quot;</span>);</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收的实现</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveDatagram</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 打开DatagramChannel</span></span><br><span class="line">        DatagramChannel receiveChannel = DatagramChannel.open();</span><br><span class="line">        InetSocketAddress receiveAddr = <span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定</span></span><br><span class="line">        receiveChannel.bind(receiveAddr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// buffer</span></span><br><span class="line">        ByteBuffer receiveBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 接收</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            receiveBuffer.clear();</span><br><span class="line">            SocketAddress socketAddress = receiveChannel.receive(receiveBuffer);</span><br><span class="line">            receiveBuffer.flip();</span><br><span class="line">            System.out.println(socketAddress.toString());</span><br><span class="line">            System.out.println(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>).decode(receiveBuffer));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testConnect</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 打开DatagramChannel</span></span><br><span class="line">    DatagramChannel connChannel = DatagramChannel.open();</span><br><span class="line">    <span class="comment">// 绑定</span></span><br><span class="line">    connChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接</span></span><br><span class="line">    connChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// write方法</span></span><br><span class="line">    connChannel.write(ByteBuffer.wrap(<span class="string">&quot;发送atguigu&quot;</span>.getBytes(<span class="string">&quot;UTF-8&quot;</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// buffer</span></span><br><span class="line">    ByteBuffer readBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        readBuffer.clear();</span><br><span class="line">        connChannel.read(readBuffer);</span><br><span class="line">        readBuffer.flip();</span><br><span class="line">        System.out.println(Charset.forName(<span class="string">&quot;UTF-8&quot;</span>).decode(readBuffer));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Scatter-Gather">Scatter/Gather</h2><p>JavaNIO开始支持scatter/gather，scatter/gather用于描述从Channel中读取或者写入到Channel的操作。</p><p>分散(scatter) 从Channel中读取是指在读操作时将读取的数据写入多个buffer中，因此，Channel将从Channel中读取的数据分散(scatter)到多个Buffer中。</p><p>聚集(gather) 写入Channel是指在写操作时将多个buffer的数据写入同一个Channel，因此，Channel将多个Buffer中的数据&quot;聚集（gather）&quot;后发送到Channel。</p><p>scatter/gather 经常用于需要将传输的数据分开处理的场合，例如传输一个由消息头和消息体组成的消息，你可能会将消息体和消息头分散到不同的buffer中，这样你可以方便的处理消息头和消息体。</p><h3 id="Scattering-Reads">Scattering Reads</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer header = ByteBuffer.allocate(<span class="number">128</span>);</span><br><span class="line">ByteBuffer body = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">ByteBuffer[] bufferArray = &#123;header, body&#125;;</span><br><span class="line"></span><br><span class="line">channel.read(bufferArray);</span><br></pre></td></tr></table></figure><p>注意buffer首先被插入到数组，然后再将数组作为channel.read()的输入参数。read()方法按照buffer在数组中的顺序将从channel中读取的数据写入到buffer，当一个buffer被写满后，channel紧接着向另一个buffer中写。</p><p>Scattering Reads在移动下一个Buffer前，必须填满当前的buffer，这也意味着它不适用于动态消息（译者注：消息大小不固定）。换句话说，如果存在消息头和消息体，消息头必须完成填充（例如128byte），Scattering Reads才能正常工作。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Java NIO概述&lt;/h1&gt;
&lt;p&gt;Java NIO是从Java1.4版本引入的一个新的API，可以代替标准的Java IO API。NIO支持面向缓冲区的，基于通道的IO操作。NIO将以更加高效的方式进行文件的读写操作。&lt;/p&gt;
&lt;h2 id=&quot;阻塞IO&quot;&gt;阻塞IO&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Gitlab</title>
    <link href="http://example.com/2023/11/04/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Gitlab/"/>
    <id>http://example.com/2023/11/04/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Gitlab/</id>
    <published>2023-11-04T09:48:30.000Z</published>
    <updated>2024-05-30T15:07:12.154Z</updated>
    
    <content type="html"><![CDATA[<h1>传统应用发布模式</h1><ul><li>开发团队</li></ul><p>在开发环境中完成软件开发，单元测试，测试通过，提交到代码版本管理库</p><ul><li>运维团队</li></ul><p>把应用部署到测试环境，供QA团队测试，测试通过后部署到生产环境。</p><ul><li>QA团队</li></ul><p>进行测试，测试通过后通知部署人员发布到生产环境。</p><h2 id="代码版本管理">代码版本管理</h2><p>Gitlab主要有以下功能。</p><ul><li>代码审查</li><li>问题跟踪</li><li>动态订阅</li><li>易于扩展</li><li>项目wiki</li><li>多角色项目管理</li><li>项目代码在线预览</li><li>CI工具集成</li></ul><h2 id="持续集成">持续集成</h2><p>jenkins主要有以下功能。</p><ul><li>可扩展自动化服务器</li><li>安装配置简单</li><li>丰富的插件库</li><li>分布式架构设计</li><li>支持所有的平台</li><li>可视化管理界面</li></ul><h2 id="Gitlab内置持续集成">Gitlab内置持续集成</h2><p>持续集成CI</p><ul><li>集成团队每个开发人员提交的代码到代码存储库中。</li><li>开发人员在Merge或者Pull请求合并拉取新代码。</li><li>在提交或者合并到代码存储库之前，会触发了构建，测试和新代码验证的管道。</li><li>CI可帮助您在开发周期的早期发现并减少错误。</li></ul><p>持续交付</p><ul><li>可通过结构化的部署管道确保将经过CI验证的代码交付给您的应用程序。</li><li>CD可以将经过验证的代码更快的交付给您的程序。</li></ul><h2 id="GitLab-CI-CD组件">GitLab CI/CD组件</h2><p>GitLab CI/CD</p><ul><li>GitLab的一部分，GitLab是一个Web应用程序，具有将其状态存储在数据库中的API</li><li>除了GitLab的所有功能之外，它还管理项目/构建并提供了一个不错的用户界面</li></ul><p>GitLab Runner</p><ul><li>是一个处理构建的应用程序。</li><li>它可以单独部署，并通过API与GitLab CI/CD一起使用。</li></ul><p>.gitlab-ci.yml</p><ul><li>为了运行测试，至少需要一个GitLab实例和一个Gitlab Runner。</li></ul><h2 id="GitLab安装">GitLab安装</h2><ul><li>下载GitLab</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-15.4.2-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>安装包</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh gitlab-ce-15.4.2-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab.rb   # 编辑站点地址</span><br><span class="line">gitlab-ctl reconfigure  # 配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#服务控制</span><br><span class="line">gitlab-ctl start </span><br><span class="line">gitlab-ctl status</span><br><span class="line">gitlab-ctl stop </span><br></pre></td></tr></table></figure><h2 id="GitLab添加组，创建用户，创建项目">GitLab添加组，创建用户，创建项目</h2><ol><li>创建组</li></ol><p>使用管理员root创建组，一个组里边可以有多个项目分支，可以将开发添加到组里边进行设置权限，不同的组就是公司不同项目或者服务模块，不同的组添加不同的开发即可实现对开发设置权限的管理。</p><ol start="2"><li>设置权限</li></ol><p>Guest：可以创建issue，发布评论，不能读写版本库</p><p>Reporter：可以克隆代码，不能提交，QA，PM可以赋予这个权限</p><p>Developer：可以克隆代码，开发，提交，push，普通开发可以赋予这个权限。</p><p>Maintainer：可以创建项目，添加tag，保护分支，添加项目成员，编辑项目，核心开发可以赋予这个权限</p><p>Owner：可以设置项目访问权限 - Visibility Level，删除项目，迁移项目，管理组成员，开发组组长可以赋予这个权限。</p><h2 id="GitLab-Runner">GitLab Runner</h2><h3 id="GitLab-Runner简介">GitLab Runner简介</h3><ul><li>GitLab Runner是一个开源项目，用于运行作业并将结果发送回GitLab</li><li>与GitLabCI结合使用，GitLabCI是GitLab随附的用于协调作业的开源持续集成服务。</li><li>GitLab Runner是用go编写的，可以在Linux，macos和windows上运行。</li><li>容器部署需使用最新docker版本，GitLab Runner需要最少的Docker v1.13.0</li><li>GitLab Runner版本需与GitLab版本同步。</li><li>可以根据需要配置任意数量的Runner。</li></ul><p>GitLab Runner类似于Jenkins的agent，执行CI持续集成，构建的脚本任务。</p><h3 id="GitLab-Runner特点">GitLab Runner特点</h3><ul><li>作业运行控制：同时执行多个作业。</li><li>作业运行环境：<ul><li>在本地使用docker容器，使用docker容器并通过SSH执行作业。</li><li>使用docker容器在不同的云和虚拟化管理程序上自动缩放。</li><li>连接到远程SSH服务器。</li></ul></li><li>支持Bash，Windows Batch和Windows powershell</li><li>允许自定义作业运行环境</li><li>自动重新加载配置</li><li>易于安装，可作为Linux，macOS和Windows的服务。</li></ul><h3 id="GitLab-Runner类型与状态">GitLab Runner类型与状态</h3><ul><li>类型<ul><li>shared共享类型，运行整个平台项目的作业（gitlab）</li><li>group  项目组类型，运行特定group下所有项目的作业（group）</li><li>specific  项目类型，运行指定的项目作业（project）</li></ul></li><li>状态<ul><li>locked： 锁定状态，无法运行项目作业</li><li>paused： 暂停状态，暂时不会接收新的作业</li></ul></li></ul><h3 id="下载gitlab-runner">下载gitlab runner</h3><ul><li>下载rpm包</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-runner/yum/el7/gitlab-runner-15.4.2-1.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh gitlab-runner-15.4.2-1.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>启动gitlab runner服务</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start gitlab-runner</span><br></pre></td></tr></table></figure><p>测试：只要有gitlab-runner即为成功。</p><h2 id="GitLab-Runner注册">GitLab Runner注册</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-runner register</span><br></pre></td></tr></table></figure><h2 id="Jekins安装">Jekins安装</h2><h3 id="JDK版本安装">JDK版本安装</h3><p>我这里使用的是JDK17，因此，需要安装JDK17版本。</p><p>先从网上下载rpm包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://corretto.aws/downloads/latest/amazon-corretto-17-x64-linux-jdk.rpm</span><br></pre></td></tr></table></figure><p>再安装rpm包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh amazon-corretto-17-x64-linux-jdk.rpm</span><br></pre></td></tr></table></figure><p>去下面的jenkins网站下载jenkins：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.jenkins.io/war-stable/</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;传统应用发布模式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;开发团队&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在开发环境中完成软件开发，单元测试，测试通过，提交到代码版本管理库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运维团队&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把应用部署到测试环境，供QA团队测试，测试通过后部署到生</summary>
      
    
    
    
    
  </entry>
  
</feed>
